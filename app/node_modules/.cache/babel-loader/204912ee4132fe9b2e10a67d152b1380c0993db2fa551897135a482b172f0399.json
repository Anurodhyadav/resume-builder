{"ast":null,"code":"var _jsxFileName = \"/Users/anurodhyadav/resumebuilder/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { createEditor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = [{\n  type: \"paragraph\",\n  children: [{\n    text: \"A line of text in a paragraph.\"\n  }]\n}];\nconst App = () => {\n  _s();\n  const [editor] = useState(() => withReact(createEditor()));\n\n  // Define a rendering function based on the element passed to `props`. We use\n  // `useCallback` here to memoize the function for subsequent renders.\n  const renderElement = useCallback(props => {\n    switch (props.element.type) {\n      case \"code\":\n        return /*#__PURE__*/_jsxDEV(CodeElement, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(DefaultElement, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Slate, {\n    editor: editor,\n    value: initialValue,\n    children: /*#__PURE__*/_jsxDEV(Editable, {\n      renderElement: renderElement,\n      onKeyDown: event => {\n        if (event.ctrlKey) {\n          event.preventDefault();\n          // Determine whether any of the currently selected blocks are code blocks.\n          const [match] = Editor.nodes(editor, {\n            match: n => n.type === \"code\"\n          });\n          // Toggle the block type depending on whether there's already a match.\n          Transforms.setNodes(editor, {\n            type: match ? \"paragraph\" : \"code\"\n          }, {\n            match: n => Editor.isBlock(editor, n)\n          });\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sMS9BYl3rHbB+hA0qqQDEsxRoh4=\");\n_c = App;\nconst CodeElement = props => {\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    ...props.attributes,\n    children: /*#__PURE__*/_jsxDEV(\"code\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CodeElement;\nconst DefaultElement = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    ...props.attributes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n_c3 = DefaultElement;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CodeElement\");\n$RefreshReg$(_c3, \"DefaultElement\");","map":{"version":3,"names":["React","useState","useCallback","createEditor","Slate","Editable","withReact","initialValue","type","children","text","App","editor","renderElement","props","element","event","ctrlKey","preventDefault","match","Editor","nodes","n","Transforms","setNodes","isBlock","CodeElement","attributes","DefaultElement"],"sources":["/Users/anurodhyadav/resumebuilder/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nimport { createEditor } from \"slate\";\n\nimport { Slate, Editable, withReact } from \"slate-react\";\n\nconst initialValue = [\n  {\n    type: \"paragraph\",\n    children: [{ text: \"A line of text in a paragraph.\" }],\n  },\n];\n\nconst App = () => {\n  const [editor] = useState(() => withReact(createEditor()));\n\n  // Define a rendering function based on the element passed to `props`. We use\n  // `useCallback` here to memoize the function for subsequent renders.\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      case \"code\":\n        return <CodeElement {...props} />;\n      default:\n        return <DefaultElement {...props} />;\n    }\n  }, []);\n\n  return (\n    <Slate editor={editor} value={initialValue}>\n      <Editable\n        renderElement={renderElement}\n        onKeyDown={(event) => {\n          if (event.ctrlKey) {\n            event.preventDefault();\n            // Determine whether any of the currently selected blocks are code blocks.\n            const [match] = Editor.nodes(editor, {\n              match: (n) => n.type === \"code\",\n            });\n            // Toggle the block type depending on whether there's already a match.\n            Transforms.setNodes(\n              editor,\n              { type: match ? \"paragraph\" : \"code\" },\n              { match: (n) => Editor.isBlock(editor, n) }\n            );\n          }\n        }}\n      />\n    </Slate>\n  );\n};\n\nconst CodeElement = (props) => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  );\n};\n\nconst DefaultElement = (props) => {\n  return <p {...props.attributes}>{props.children}</p>;\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAEpD,SAASC,YAAY,QAAQ,OAAO;AAEpC,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,aAAa;AAAC;AAEzD,MAAMC,YAAY,GAAG,CACnB;EACEC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAiC,CAAC;AACvD,CAAC,CACF;AAED,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,MAAM,CAAC,GAAGX,QAAQ,CAAC,MAAMK,SAAS,CAACH,YAAY,EAAE,CAAC,CAAC;;EAE1D;EACA;EACA,MAAMU,aAAa,GAAGX,WAAW,CAAEY,KAAK,IAAK;IAC3C,QAAQA,KAAK,CAACC,OAAO,CAACP,IAAI;MACxB,KAAK,MAAM;QACT,oBAAO,QAAC,WAAW;UAAA,GAAKM;QAAK;UAAA;UAAA;UAAA;QAAA,QAAI;MACnC;QACE,oBAAO,QAAC,cAAc;UAAA,GAAKA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAI;IAAC;EAE3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,KAAK;IAAC,MAAM,EAAEF,MAAO;IAAC,KAAK,EAAEL,YAAa;IAAA,uBACzC,QAAC,QAAQ;MACP,aAAa,EAAEM,aAAc;MAC7B,SAAS,EAAGG,KAAK,IAAK;QACpB,IAAIA,KAAK,CAACC,OAAO,EAAE;UACjBD,KAAK,CAACE,cAAc,EAAE;UACtB;UACA,MAAM,CAACC,KAAK,CAAC,GAAGC,MAAM,CAACC,KAAK,CAACT,MAAM,EAAE;YACnCO,KAAK,EAAGG,CAAC,IAAKA,CAAC,CAACd,IAAI,KAAK;UAC3B,CAAC,CAAC;UACF;UACAe,UAAU,CAACC,QAAQ,CACjBZ,MAAM,EACN;YAAEJ,IAAI,EAAEW,KAAK,GAAG,WAAW,GAAG;UAAO,CAAC,EACtC;YAAEA,KAAK,EAAGG,CAAC,IAAKF,MAAM,CAACK,OAAO,CAACb,MAAM,EAAEU,CAAC;UAAE,CAAC,CAC5C;QACH;MACF;IAAE;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACI;AAEZ,CAAC;AAAC,GApCIX,GAAG;AAAA,KAAHA,GAAG;AAsCT,MAAMe,WAAW,GAAIZ,KAAK,IAAK;EAC7B,oBACE;IAAA,GAASA,KAAK,CAACa,UAAU;IAAA,uBACvB;MAAA,UAAOb,KAAK,CAACL;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAQ;IAAA;IAAA;IAAA;EAAA,QACzB;AAEV,CAAC;AAAC,MANIiB,WAAW;AAQjB,MAAME,cAAc,GAAId,KAAK,IAAK;EAChC,oBAAO;IAAA,GAAOA,KAAK,CAACa,UAAU;IAAA,UAAGb,KAAK,CAACL;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAK;AACtD,CAAC;AAAC,MAFImB,cAAc;AAIpB,eAAejB,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}