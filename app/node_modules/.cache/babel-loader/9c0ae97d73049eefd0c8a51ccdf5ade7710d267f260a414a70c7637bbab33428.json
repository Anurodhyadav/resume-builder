{"ast":null,"code":"import getDirection from 'direction';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport React, { useLayoutEffect, useEffect, useRef, createContext, useContext, useCallback, Component, useState, useReducer, useMemo } from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { Editor, Scrubber, Transforms, Range, Path, Node, Text as Text$1, Element as Element$1, Point } from 'slate';\nimport { isKeyHotkey } from 'is-hotkey';\nimport ReactDOM from 'react-dom';\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\n/**\r\n * An auto-incrementing identifier for keys.\r\n */\nvar n = 0;\n/**\r\n * A class that keeps track of a key string. We use a full class here because we\r\n * want to be able to use them as keys in `WeakMap` objects.\r\n */\n\nclass Key {\n  constructor() {\n    this.id = \"\".concat(n++);\n  }\n}\n\n/**\r\n * Two weak maps that allow us rebuild a path given a node. They are populated\r\n * at render time such that after a render occurs we can always backtrack.\r\n */\nvar NODE_TO_INDEX = new WeakMap();\nvar NODE_TO_PARENT = new WeakMap();\n/**\r\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\r\n * are used to resolve DOM event-related logic into Slate actions.\r\n */\n\nvar EDITOR_TO_WINDOW = new WeakMap();\nvar EDITOR_TO_ELEMENT = new WeakMap();\nvar EDITOR_TO_PLACEHOLDER_ELEMENT = new WeakMap();\nvar ELEMENT_TO_NODE = new WeakMap();\nvar NODE_TO_ELEMENT = new WeakMap();\nvar NODE_TO_KEY = new WeakMap();\nvar EDITOR_TO_KEY_TO_ELEMENT = new WeakMap();\n/**\r\n * Weak maps for storing editor-related state.\r\n */\n\nvar IS_READ_ONLY = new WeakMap();\nvar IS_FOCUSED = new WeakMap();\nvar IS_COMPOSING = new WeakMap();\nvar EDITOR_TO_USER_SELECTION = new WeakMap();\n/**\r\n * Weak map for associating the context `onChange` context with the plugin.\r\n */\n\nvar EDITOR_TO_ON_CHANGE = new WeakMap();\n/**\r\n * Weak maps for saving pending state on composition stage.\r\n */\n\nvar EDITOR_TO_SCHEDULE_FLUSH = new WeakMap();\nvar EDITOR_TO_PENDING_INSERTION_MARKS = new WeakMap();\nvar EDITOR_TO_USER_MARKS = new WeakMap();\n/**\r\n * Android input handling specific weak-maps\r\n */\n\nvar EDITOR_TO_PENDING_DIFFS = new WeakMap();\nvar EDITOR_TO_PENDING_ACTION = new WeakMap();\nvar EDITOR_TO_PENDING_SELECTION = new WeakMap();\nvar EDITOR_TO_FORCE_RENDER = new WeakMap();\n/**\r\n * Symbols.\r\n */\n\nvar PLACEHOLDER_SYMBOL = Symbol('placeholder');\nvar MARK_PLACEHOLDER_SYMBOL = Symbol('mark-placeholder');\n\n/**\r\n * Types.\r\n */\nvar DOMText = globalThis.Text;\n/**\r\n * Returns the host window of a DOM node\r\n */\n\nvar getDefaultView = value => {\n  return value && value.ownerDocument && value.ownerDocument.defaultView || null;\n};\n/**\r\n * Check if a DOM node is a comment node.\r\n */\n\nvar isDOMComment = value => {\n  return isDOMNode(value) && value.nodeType === 8;\n};\n/**\r\n * Check if a DOM node is an element node.\r\n */\n\nvar isDOMElement = value => {\n  return isDOMNode(value) && value.nodeType === 1;\n};\n/**\r\n * Check if a value is a DOM node.\r\n */\n\nvar isDOMNode = value => {\n  var window = getDefaultView(value);\n  return !!window && value instanceof window.Node;\n};\n/**\r\n * Check if a value is a DOM selection.\r\n */\n\nvar isDOMSelection = value => {\n  var window = value && value.anchorNode && getDefaultView(value.anchorNode);\n  return !!window && value instanceof window.Selection;\n};\n/**\r\n * Check if a DOM node is an element node.\r\n */\n\nvar isDOMText = value => {\n  return isDOMNode(value) && value.nodeType === 3;\n};\n/**\r\n * Checks whether a paste event is a plaintext-only event.\r\n */\n\nvar isPlainTextOnlyPaste = event => {\n  return event.clipboardData && event.clipboardData.getData('text/plain') !== '' && event.clipboardData.types.length === 1;\n};\n/**\r\n * Normalize a DOM point so that it always refers to a text node.\r\n */\n\nvar normalizeDOMPoint = domPoint => {\n  var [node, offset] = domPoint; // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n\n  if (isDOMElement(node) && node.childNodes.length) {\n    var isLast = offset === node.childNodes.length;\n    var index = isLast ? offset - 1 : offset;\n    [node, index] = getEditableChildAndIndex(node, index, isLast ? 'backward' : 'forward'); // If the editable child found is in front of input offset, we instead seek to its end\n\n    isLast = index < offset; // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n\n    while (isDOMElement(node) && node.childNodes.length) {\n      var i = isLast ? node.childNodes.length - 1 : 0;\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward');\n    } // Determine the new offset inside the text node.\n\n    offset = isLast && node.textContent != null ? node.textContent.length : 0;\n  } // Return the node and offset.\n\n  return [node, offset];\n};\n/**\r\n * Determines wether the active element is nested within a shadowRoot\r\n */\n\nvar hasShadowRoot = () => {\n  return !!(window.document.activeElement && window.document.activeElement.shadowRoot);\n};\n/**\r\n * Get the nearest editable child and index at `index` in a `parent`, preferring\r\n * `direction`.\r\n */\n\nvar getEditableChildAndIndex = (parent, index, direction) => {\n  var {\n    childNodes\n  } = parent;\n  var child = childNodes[index];\n  var i = index;\n  var triedForward = false;\n  var triedBackward = false; // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n\n  while (isDOMComment(child) || isDOMElement(child) && child.childNodes.length === 0 || isDOMElement(child) && child.getAttribute('contenteditable') === 'false') {\n    if (triedForward && triedBackward) {\n      break;\n    }\n    if (i >= childNodes.length) {\n      triedForward = true;\n      i = index - 1;\n      direction = 'backward';\n      continue;\n    }\n    if (i < 0) {\n      triedBackward = true;\n      i = index + 1;\n      direction = 'forward';\n      continue;\n    }\n    child = childNodes[i];\n    index = i;\n    i += direction === 'forward' ? 1 : -1;\n  }\n  return [child, index];\n};\n/**\r\n * Get the nearest editable child at `index` in a `parent`, preferring\r\n * `direction`.\r\n */\n\nvar getEditableChild = (parent, index, direction) => {\n  var [child] = getEditableChildAndIndex(parent, index, direction);\n  return child;\n};\n/**\r\n * Get a plaintext representation of the content of a node, accounting for block\r\n * elements which get a newline appended.\r\n *\r\n * The domNode must be attached to the DOM.\r\n */\n\nvar getPlainText = domNode => {\n  var text = '';\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue;\n  }\n  if (isDOMElement(domNode)) {\n    for (var childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode);\n    }\n    var display = getComputedStyle(domNode).getPropertyValue('display');\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n';\n    }\n  }\n  return text;\n};\n/**\r\n * Get x-slate-fragment attribute from data-slate-fragment\r\n */\n\nvar catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m;\nvar getSlateFragmentAttribute = dataTransfer => {\n  var htmlData = dataTransfer.getData('text/html');\n  var [, fragment] = htmlData.match(catchSlateFragment) || [];\n  return fragment;\n};\n/**\r\n * Check whether a mutation originates from a editable element inside the editor.\r\n */\n\nvar isTrackedMutation = (editor, mutation, batch) => {\n  var {\n    target\n  } = mutation;\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false;\n  }\n  var {\n    document\n  } = ReactEditor.getWindow(editor);\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, {\n      editable: true\n    });\n  }\n  var parentMutation = batch.find(_ref => {\n    var {\n      addedNodes,\n      removedNodes\n    } = _ref;\n    for (var node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true;\n      }\n    }\n    for (var _node of removedNodes) {\n      if (_node === target || _node.contains(target)) {\n        return true;\n      }\n    }\n  });\n  if (!parentMutation || parentMutation === mutation) {\n    return false;\n  } // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n\n  return isTrackedMutation(editor, parentMutation, batch);\n};\nvar IS_REACT_VERSION_17_OR_ABOVE = parseInt(React.version.split('.')[0], 10) >= 17;\nvar IS_IOS = typeof navigator !== 'undefined' && typeof window !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nvar IS_APPLE = typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent);\nvar IS_ANDROID = typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent);\nvar IS_FIREFOX = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);\nvar IS_SAFARI = typeof navigator !== 'undefined' && /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent); // \"modern\" Edge was released at 79.x\n\nvar IS_EDGE_LEGACY = typeof navigator !== 'undefined' && /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent);\nvar IS_CHROME = typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent); // Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\n\nvar IS_CHROME_LEGACY = typeof navigator !== 'undefined' && /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent); // Firefox did not support `beforeInput` until `v87`.\n\nvar IS_FIREFOX_LEGACY = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(navigator.userAgent); // qq browser\n\nvar IS_QQBROWSER = typeof navigator !== 'undefined' && /.*QQBrowser/.test(navigator.userAgent); // UC mobile browser\n\nvar IS_UC_MOBILE = typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent); // Wechat browser\n\nvar IS_WECHATBROWSER = typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent); // Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\n\nvar CAN_USE_DOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined'); // COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\n\nvar HAS_BEFORE_INPUT_SUPPORT = !IS_CHROME_LEGACY && !IS_EDGE_LEGACY &&\n// globalThis is undefined in older browsers\ntypeof globalThis !== 'undefined' && globalThis.InputEvent &&\n// @ts-ignore The `getTargetRanges` property isn't recognized.\ntypeof globalThis.InputEvent.prototype.getTargetRanges === 'function';\nvar ReactEditor = {\n  /**\r\n   * Check if the user is currently composing inside the editor.\r\n   */\n  isComposing(editor) {\n    return !!IS_COMPOSING.get(editor);\n  },\n  /**\r\n   * Return the host window of the current editor.\r\n   */\n  getWindow(editor) {\n    var window = EDITOR_TO_WINDOW.get(editor);\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor');\n    }\n    return window;\n  },\n  /**\r\n   * Find a key for a Slate node.\r\n   */\n  findKey(editor, node) {\n    var key = NODE_TO_KEY.get(node);\n    if (!key) {\n      key = new Key();\n      NODE_TO_KEY.set(node, key);\n    }\n    return key;\n  },\n  /**\r\n   * Find the path of Slate node.\r\n   */\n  findPath(editor, node) {\n    var path = [];\n    var child = node;\n    while (true) {\n      var parent = NODE_TO_PARENT.get(child);\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path;\n        } else {\n          break;\n        }\n      }\n      var i = NODE_TO_INDEX.get(child);\n      if (i == null) {\n        break;\n      }\n      path.unshift(i);\n      child = parent;\n    }\n    throw new Error(\"Unable to find the path for Slate node: \".concat(Scrubber.stringify(node)));\n  },\n  /**\r\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\r\n   */\n  findDocumentOrShadowRoot(editor) {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = el.getRootNode();\n    if ((root instanceof Document || root instanceof ShadowRoot) && root.getSelection != null) {\n      return root;\n    }\n    return el.ownerDocument;\n  },\n  /**\r\n   * Check if the editor is focused.\r\n   */\n  isFocused(editor) {\n    return !!IS_FOCUSED.get(editor);\n  },\n  /**\r\n   * Check if the editor is in read-only mode.\r\n   */\n  isReadOnly(editor) {\n    return !!IS_READ_ONLY.get(editor);\n  },\n  /**\r\n   * Blur the editor.\r\n   */\n  blur(editor) {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    IS_FOCUSED.set(editor, false);\n    if (root.activeElement === el) {\n      el.blur();\n    }\n  },\n  /**\r\n   * Focus the editor.\r\n   */\n  focus(editor) {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    IS_FOCUSED.set(editor, true);\n    if (root.activeElement !== el) {\n      el.focus({\n        preventScroll: true\n      });\n    }\n  },\n  /**\r\n   * Deselect the editor.\r\n   */\n  deselect(editor) {\n    var {\n      selection\n    } = editor;\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    var domSelection = root.getSelection();\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges();\n    }\n    if (selection) {\n      Transforms.deselect(editor);\n    }\n  },\n  /**\r\n   * Check if a DOM node is within the editor.\r\n   */\n  hasDOMNode(editor, target) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var {\n      editable = false\n    } = options;\n    var editorEl = ReactEditor.toDOMNode(editor, editor);\n    var targetEl; // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n\n    try {\n      targetEl = isDOMElement(target) ? target : target.parentElement;\n    } catch (err) {\n      if (!err.message.includes('Permission denied to access property \"nodeType\"')) {\n        throw err;\n      }\n    }\n    if (!targetEl) {\n      return false;\n    }\n    return targetEl.closest(\"[data-slate-editor]\") === editorEl && (!editable || targetEl.isContentEditable ? true : typeof targetEl.isContentEditable === 'boolean' &&\n    // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n    // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n    targetEl.closest('[contenteditable=\"false\"]') === editorEl || !!targetEl.getAttribute('data-slate-zero-width'));\n  },\n  /**\r\n   * Insert data from a `DataTransfer` into the editor.\r\n   */\n  insertData(editor, data) {\n    editor.insertData(data);\n  },\n  /**\r\n   * Insert fragment data from a `DataTransfer` into the editor.\r\n   */\n  insertFragmentData(editor, data) {\n    return editor.insertFragmentData(data);\n  },\n  /**\r\n   * Insert text data from a `DataTransfer` into the editor.\r\n   */\n  insertTextData(editor, data) {\n    return editor.insertTextData(data);\n  },\n  /**\r\n   * Sets data from the currently selected fragment on a `DataTransfer`.\r\n   */\n  setFragmentData(editor, data, originEvent) {\n    editor.setFragmentData(data, originEvent);\n  },\n  /**\r\n   * Find the native DOM element from a Slate node.\r\n   */\n  toDOMNode(editor, node) {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    var domNode = Editor.isEditor(node) ? EDITOR_TO_ELEMENT.get(editor) : KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node));\n    if (!domNode) {\n      throw new Error(\"Cannot resolve a DOM node from Slate node: \".concat(Scrubber.stringify(node)));\n    }\n    return domNode;\n  },\n  /**\r\n   * Find a native DOM selection point from a Slate point.\r\n   */\n  toDOMPoint(editor, point) {\n    var [node] = Editor.node(editor, point.path);\n    var el = ReactEditor.toDOMNode(editor, node);\n    var domPoint; // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n\n    if (Editor.void(editor, {\n      at: point\n    })) {\n      point = {\n        path: point.path,\n        offset: 0\n      };\n    } // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n\n    var selector = \"[data-slate-string], [data-slate-zero-width]\";\n    var texts = Array.from(el.querySelectorAll(selector));\n    var start = 0;\n    for (var i = 0; i < texts.length; i++) {\n      var text = texts[i];\n      var domNode = text.childNodes[0];\n      if (domNode == null || domNode.textContent == null) {\n        continue;\n      }\n      var {\n        length\n      } = domNode.textContent;\n      var attr = text.getAttribute('data-slate-length');\n      var trueLength = attr == null ? length : parseInt(attr, 10);\n      var end = start + trueLength; // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n\n      var nextText = texts[i + 1];\n      if (point.offset === end && nextText !== null && nextText !== void 0 && nextText.hasAttribute('data-slate-mark-placeholder')) {\n        var _nextText$textContent;\n        var domText = nextText.childNodes[0];\n        domPoint = [\n        // COMPAT: If we don't explicity set the dom point to be on the actual\n        // dom text element, chrome will put the selection behind the actual dom\n        // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n        // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n        // which will cause issues when scrolling to it.\n        domText instanceof DOMText ? domText : nextText, (_nextText$textContent = nextText.textContent) !== null && _nextText$textContent !== void 0 && _nextText$textContent.startsWith('\\uFEFF') ? 1 : 0];\n        break;\n      }\n      if (point.offset <= end) {\n        var offset = Math.min(length, Math.max(0, point.offset - start));\n        domPoint = [domNode, offset];\n        break;\n      }\n      start = end;\n    }\n    if (!domPoint) {\n      throw new Error(\"Cannot resolve a DOM point from Slate point: \".concat(Scrubber.stringify(point)));\n    }\n    return domPoint;\n  },\n  /**\r\n   * Find a native DOM range from a Slate `range`.\r\n   *\r\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\r\n   *\r\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\r\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\r\n   */\n  toDOMRange(editor, range) {\n    var {\n      anchor,\n      focus\n    } = range;\n    var isBackward = Range.isBackward(range);\n    var domAnchor = ReactEditor.toDOMPoint(editor, anchor);\n    var domFocus = Range.isCollapsed(range) ? domAnchor : ReactEditor.toDOMPoint(editor, focus);\n    var window = ReactEditor.getWindow(editor);\n    var domRange = window.document.createRange();\n    var [startNode, startOffset] = isBackward ? domFocus : domAnchor;\n    var [endNode, endOffset] = isBackward ? domAnchor : domFocus; // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n\n    var startEl = isDOMElement(startNode) ? startNode : startNode.parentElement;\n    var isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width');\n    var endEl = isDOMElement(endNode) ? endNode : endNode.parentElement;\n    var isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width');\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset);\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset);\n    return domRange;\n  },\n  /**\r\n   * Find a Slate node from a native DOM `element`.\r\n   */\n  toSlateNode(editor, domNode) {\n    var domEl = isDOMElement(domNode) ? domNode : domNode.parentElement;\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(\"[data-slate-node]\");\n    }\n    var node = domEl ? ELEMENT_TO_NODE.get(domEl) : null;\n    if (!node) {\n      throw new Error(\"Cannot resolve a Slate node from DOM node: \".concat(domEl));\n    }\n    return node;\n  },\n  /**\r\n   * Get the target range from a DOM `event`.\r\n   */\n  findEventRange(editor, event) {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent;\n    }\n    var {\n      clientX: x,\n      clientY: y,\n      target\n    } = event;\n    if (x == null || y == null) {\n      throw new Error(\"Cannot resolve a Slate range from a DOM event: \".concat(event));\n    }\n    var node = ReactEditor.toSlateNode(editor, event.target);\n    var path = ReactEditor.findPath(editor, node); // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n\n    if (Editor.isVoid(editor, node)) {\n      var rect = target.getBoundingClientRect();\n      var isPrev = editor.isInline(node) ? x - rect.left < rect.left + rect.width - x : y - rect.top < rect.top + rect.height - y;\n      var edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end'\n      });\n      var point = isPrev ? Editor.before(editor, edge) : Editor.after(editor, edge);\n      if (point) {\n        var _range = Editor.range(editor, point);\n        return _range;\n      }\n    } // Else resolve a range from the caret position where the drop occured.\n\n    var domRange;\n    var {\n      document\n    } = ReactEditor.getWindow(editor); // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y);\n    } else {\n      var position = document.caretPositionFromPoint(x, y);\n      if (position) {\n        domRange = document.createRange();\n        domRange.setStart(position.offsetNode, position.offset);\n        domRange.setEnd(position.offsetNode, position.offset);\n      }\n    }\n    if (!domRange) {\n      throw new Error(\"Cannot resolve a Slate range from a DOM event: \".concat(event));\n    } // Resolve a Slate range from the DOM range.\n\n    var range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false\n    });\n    return range;\n  },\n  /**\r\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\r\n   */\n  toSlatePoint(editor, domPoint, options) {\n    var {\n      exactMatch,\n      suppressThrow\n    } = options;\n    var [nearestNode, nearestOffset] = exactMatch ? domPoint : normalizeDOMPoint(domPoint);\n    var parentNode = nearestNode.parentNode;\n    var textNode = null;\n    var offset = 0;\n    if (parentNode) {\n      var _domNode$textContent, _domNode$textContent2;\n      var editorEl = ReactEditor.toDOMNode(editor, editor);\n      var potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]'); // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n\n      var voidNode = potentialVoidNode && editorEl.contains(potentialVoidNode) ? potentialVoidNode : null;\n      var leafNode = parentNode.closest('[data-slate-leaf]');\n      var domNode = null; // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]');\n        if (textNode) {\n          var window = ReactEditor.getWindow(editor);\n          var range = window.document.createRange();\n          range.setStart(textNode, 0);\n          range.setEnd(nearestNode, nearestOffset);\n          var contents = range.cloneContents();\n          var removals = [...Array.prototype.slice.call(contents.querySelectorAll('[data-slate-zero-width]')), ...Array.prototype.slice.call(contents.querySelectorAll('[contenteditable=false]'))];\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (IS_ANDROID && !exactMatch && el.hasAttribute('data-slate-zero-width') && el.textContent.length > 0 && el.textContext !== '\\uFEFF') {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1);\n              }\n              return;\n            }\n            el.parentNode.removeChild(el);\n          }); // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n\n          offset = contents.textContent.length;\n          domNode = textNode;\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        var leafNodes = voidNode.querySelectorAll('[data-slate-leaf]');\n        for (var index = 0; index < leafNodes.length; index++) {\n          var current = leafNodes[index];\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current;\n            break;\n          }\n        } // COMPAT: In read-only editors the leaf is not rendered.\n\n        if (!leafNode) {\n          offset = 1;\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]');\n          domNode = leafNode;\n          offset = domNode.textContent.length;\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent.length;\n          });\n        }\n      }\n      if (domNode && offset === domNode.textContent.length &&\n      // COMPAT: Android IMEs might remove the zero width space while composing,\n      // and we don't add it for line-breaks.\n      IS_ANDROID && domNode.getAttribute('data-slate-zero-width') === 'z' && (_domNode$textContent = domNode.textContent) !== null && _domNode$textContent !== void 0 && _domNode$textContent.startsWith('\\uFEFF') && (parentNode.hasAttribute('data-slate-zero-width') || IS_FIREFOX && (_domNode$textContent2 = domNode.textContent) !== null && _domNode$textContent2 !== void 0 && _domNode$textContent2.endsWith('\\n\\n'))) {\n        offset--;\n      }\n    }\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      var node = parentNode.hasAttribute('data-slate-node') ? parentNode : parentNode.closest('[data-slate-node]');\n      if (node && ReactEditor.hasDOMNode(editor, node, {\n        editable: true\n      })) {\n        var _slateNode = ReactEditor.toSlateNode(editor, node);\n        var {\n          path: _path,\n          offset: _offset\n        } = Editor.start(editor, ReactEditor.findPath(editor, _slateNode));\n        if (!node.querySelector('[data-slate-leaf]')) {\n          _offset = nearestOffset;\n        }\n        return {\n          path: _path,\n          offset: _offset\n        };\n      }\n    }\n    if (!textNode) {\n      if (suppressThrow) {\n        return null;\n      }\n      throw new Error(\"Cannot resolve a Slate point from DOM point: \".concat(domPoint));\n    } // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n\n    var slateNode = ReactEditor.toSlateNode(editor, textNode);\n    var path = ReactEditor.findPath(editor, slateNode);\n    return {\n      path,\n      offset\n    };\n  },\n  /**\r\n   * Find a Slate range from a DOM range or selection.\r\n   */\n  toSlateRange(editor, domRange, options) {\n    var {\n      exactMatch,\n      suppressThrow\n    } = options;\n    var el = isDOMSelection(domRange) ? domRange.anchorNode : domRange.startContainer;\n    var anchorNode;\n    var anchorOffset;\n    var focusNode;\n    var focusOffset;\n    var isCollapsed;\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode;\n        anchorOffset = domRange.anchorOffset;\n        focusNode = domRange.focusNode;\n        focusOffset = domRange.focusOffset; // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n\n        if (IS_CHROME && hasShadowRoot()) {\n          isCollapsed = domRange.anchorNode === domRange.focusNode && domRange.anchorOffset === domRange.focusOffset;\n        } else {\n          isCollapsed = domRange.isCollapsed;\n        }\n      } else {\n        anchorNode = domRange.startContainer;\n        anchorOffset = domRange.startOffset;\n        focusNode = domRange.endContainer;\n        focusOffset = domRange.endOffset;\n        isCollapsed = domRange.collapsed;\n      }\n    }\n    if (anchorNode == null || focusNode == null || anchorOffset == null || focusOffset == null) {\n      throw new Error(\"Cannot resolve a Slate range from DOM range: \".concat(domRange));\n    }\n    var anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset], {\n      exactMatch,\n      suppressThrow\n    });\n    if (!anchor) {\n      return null;\n    }\n    var focus = isCollapsed ? anchor : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n      exactMatch,\n      suppressThrow\n    });\n    if (!focus) {\n      return null;\n    }\n    var range = {\n      anchor: anchor,\n      focus: focus\n    }; // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n\n    if (Range.isExpanded(range) && Range.isForward(range) && isDOMElement(focusNode) && Editor.void(editor, {\n      at: range.focus,\n      mode: 'highest'\n    })) {\n      range = Editor.unhangRange(editor, range, {\n        voids: true\n      });\n    }\n    return range;\n  },\n  hasRange(editor, range) {\n    var {\n      anchor,\n      focus\n    } = range;\n    return Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path);\n  },\n  /**\r\n   * Experimental and android specific: Flush all pending diffs and cancel composition at the next possible time.\r\n   */\n  androidScheduleFlush(editor) {\n    var _EDITOR_TO_SCHEDULE_F;\n    (_EDITOR_TO_SCHEDULE_F = EDITOR_TO_SCHEDULE_FLUSH.get(editor)) === null || _EDITOR_TO_SCHEDULE_F === void 0 ? void 0 : _EDITOR_TO_SCHEDULE_F();\n  },\n  /**\r\n   * Experimental and android specific: Get pending diffs\r\n   */\n  androidPendingDiffs(editor) {\n    return EDITOR_TO_PENDING_DIFFS.get(editor);\n  }\n};\n\n/**\r\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\r\n */\n\nvar useIsomorphicLayoutEffect = CAN_USE_DOM ? useLayoutEffect : useEffect;\nvar _excluded$3 = [\"anchor\", \"focus\"],\n  _excluded2$1 = [\"anchor\", \"focus\"];\nvar shallowCompare = (obj1, obj2) => Object.keys(obj1).length === Object.keys(obj2).length && Object.keys(obj1).every(key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]);\n/**\r\n * Check if a list of decorator ranges are equal to another.\r\n *\r\n * PERF: this requires the two lists to also have the ranges inside them in the\r\n * same order, but this is an okay constraint for us since decorations are\r\n * kept in order, and the odd case where they aren't is okay to re-render for.\r\n */\n\nvar isDecoratorRangeListEqual = (list, another) => {\n  if (list.length !== another.length) {\n    return false;\n  }\n  for (var i = 0; i < list.length; i++) {\n    var range = list[i];\n    var other = another[i];\n    var rangeOwnProps = _objectWithoutProperties(range, _excluded$3);\n    var otherOwnProps = _objectWithoutProperties(other, _excluded2$1);\n    if (!Range.equals(range, other) || range[PLACEHOLDER_SYMBOL] !== other[PLACEHOLDER_SYMBOL] || !shallowCompare(rangeOwnProps, otherOwnProps)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\r\n * Leaf content strings.\r\n */\n\nvar String = props => {\n  var {\n    isLast,\n    leaf,\n    parent,\n    text\n  } = props;\n  var editor = useSlateStatic();\n  var path = ReactEditor.findPath(editor, text);\n  var parentPath = Path.parent(path);\n  var isMarkPlaceholder = leaf[MARK_PLACEHOLDER_SYMBOL] === true; // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n\n  if (editor.isVoid(parent)) {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      length: Node.string(parent).length\n    });\n  } // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n\n  if (leaf.text === '' && parent.children[parent.children.length - 1] === text && !editor.isInline(parent) && Editor.string(editor, parentPath) === '') {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      isLineBreak: true,\n      isMarkPlaceholder: isMarkPlaceholder\n    });\n  } // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n\n  if (leaf.text === '') {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      isMarkPlaceholder: isMarkPlaceholder\n    });\n  } // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return /*#__PURE__*/React.createElement(TextString, {\n      isTrailing: true,\n      text: leaf.text\n    });\n  }\n  return /*#__PURE__*/React.createElement(TextString, {\n    text: leaf.text\n  });\n};\n/**\r\n * Leaf strings with text in them.\r\n */\n\nvar TextString = props => {\n  var {\n    text,\n    isTrailing = false\n  } = props;\n  var ref = useRef(null);\n  var getTextContent = () => {\n    return \"\".concat(text !== null && text !== void 0 ? text : '').concat(isTrailing ? '\\n' : '');\n  }; // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n  // useLayoutEffect: updating our span before browser paint\n\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    var textWithTrailing = getTextContent();\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing;\n    } // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  }); // Render text content immediately if it's the first-time render\n  // Ensure that text content is rendered on server-side rendering\n\n  if (!ref.current) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      \"data-slate-string\": true,\n      ref: ref\n    }, getTextContent());\n  } // the span is intentionally same on every render in virtual DOM, actual rendering happens in the layout effect above\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-string\": true,\n    ref: ref\n  });\n};\n/**\r\n * Leaf strings without text, render as zero-width strings.\r\n */\n\nvar ZeroWidthString = props => {\n  var {\n    length = 0,\n    isLineBreak = false,\n    isMarkPlaceholder = false\n  } = props;\n  var attributes = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length\n  };\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes), !IS_ANDROID || !isLineBreak ? '\\uFEFF' : null, isLineBreak ? /*#__PURE__*/React.createElement(\"br\", null) : null);\n};\n\n/**\r\n * A React context for sharing the editor object.\r\n */\n\nvar EditorContext = /*#__PURE__*/createContext(null);\n/**\r\n * Get the current editor object from the React context.\r\n */\n\nvar useSlateStatic = () => {\n  var editor = useContext(EditorContext);\n  if (!editor) {\n    throw new Error(\"The `useSlateStatic` hook must be used inside the <Slate> component's context.\");\n  }\n  return editor;\n};\n\n/**\r\n * Individual leaves in a text node with unique formatting.\r\n */\n\nvar Leaf = props => {\n  var {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = props => /*#__PURE__*/React.createElement(DefaultLeaf, Object.assign({}, props))\n  } = props;\n  var placeholderRef = useRef(null);\n  var editor = useSlateStatic();\n  useEffect(() => {\n    var placeholderEl = placeholderRef === null || placeholderRef === void 0 ? void 0 : placeholderRef.current;\n    var editorEl = ReactEditor.toDOMNode(editor, editor);\n    if (!placeholderEl || !editorEl) {\n      return;\n    }\n    editorEl.style.minHeight = \"\".concat(placeholderEl.clientHeight, \"px\");\n    EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl);\n    return () => {\n      editorEl.style.minHeight = 'auto';\n      EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor);\n    };\n  }, [placeholderRef, leaf]);\n  var children = /*#__PURE__*/React.createElement(String, {\n    isLast: isLast,\n    leaf: leaf,\n    parent: parent,\n    text: text\n  });\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    var placeholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none'\n        },\n        contentEditable: false,\n        ref: placeholderRef\n      }\n    };\n    children = /*#__PURE__*/React.createElement(React.Fragment, null, renderPlaceholder(placeholderProps), children);\n  } // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n\n  var attributes = {\n    'data-slate-leaf': true\n  };\n  return renderLeaf({\n    attributes,\n    children,\n    leaf,\n    text\n  });\n};\nvar MemoizedLeaf = /*#__PURE__*/React.memo(Leaf, (prev, next) => {\n  return next.parent === prev.parent && next.isLast === prev.isLast && next.renderLeaf === prev.renderLeaf && next.renderPlaceholder === prev.renderPlaceholder && next.text === prev.text && Text$1.equals(next.leaf, prev.leaf) && next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL];\n});\nvar DefaultLeaf = props => {\n  var {\n    attributes,\n    children\n  } = props;\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes), children);\n};\n\n/**\r\n * Text.\r\n */\n\nvar Text = props => {\n  var {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text\n  } = props;\n  var editor = useSlateStatic();\n  var ref = useRef(null);\n  var leaves = Text$1.decorations(text, decorations);\n  var key = ReactEditor.findKey(editor, text);\n  var children = [];\n  for (var i = 0; i < leaves.length; i++) {\n    var leaf = leaves[i];\n    children.push( /*#__PURE__*/React.createElement(MemoizedLeaf, {\n      isLast: isLast && i === leaves.length - 1,\n      key: \"\".concat(key.id, \"-\").concat(i),\n      renderPlaceholder: renderPlaceholder,\n      leaf: leaf,\n      text: text,\n      parent: parent,\n      renderLeaf: renderLeaf\n    }));\n  } // Update element-related weak maps with the DOM element ref.\n\n  useIsomorphicLayoutEffect(() => {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    if (ref.current) {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.set(key, ref.current);\n      NODE_TO_ELEMENT.set(text, ref.current);\n      ELEMENT_TO_NODE.set(ref.current, text);\n    } else {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.delete(key);\n      NODE_TO_ELEMENT.delete(text);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-node\": \"text\",\n    ref: ref\n  }, children);\n};\nvar MemoizedText = /*#__PURE__*/React.memo(Text, (prev, next) => {\n  return next.parent === prev.parent && next.isLast === prev.isLast && next.renderLeaf === prev.renderLeaf && next.text === prev.text && isDecoratorRangeListEqual(next.decorations, prev.decorations);\n});\n\n/**\r\n * Element.\r\n */\n\nvar Element = props => {\n  var {\n    decorations,\n    element,\n    renderElement = p => /*#__PURE__*/React.createElement(DefaultElement, Object.assign({}, p)),\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  } = props;\n  var editor = useSlateStatic();\n  var readOnly = useReadOnly();\n  var isInline = editor.isInline(element);\n  var key = ReactEditor.findKey(editor, element);\n  var ref = useCallback(ref => {\n    // Update element-related weak maps with the DOM element ref.\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    if (ref) {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.set(key, ref);\n      NODE_TO_ELEMENT.set(element, ref);\n      ELEMENT_TO_NODE.set(ref, element);\n    } else {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.delete(key);\n      NODE_TO_ELEMENT.delete(element);\n    }\n  }, [editor, key, element]);\n  var children = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  }); // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n\n  var attributes = {\n    'data-slate-node': 'element',\n    ref\n  };\n  if (isInline) {\n    attributes['data-slate-inline'] = true;\n  } // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    var text = Node.string(element);\n    var dir = getDirection(text);\n    if (dir === 'rtl') {\n      attributes.dir = dir;\n    }\n  } // If it's a void node, wrap the children in extra void-specific elements.\n\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true;\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false;\n    }\n    var Tag = isInline ? 'span' : 'div';\n    var [[_text]] = Node.texts(element);\n    children = /*#__PURE__*/React.createElement(Tag, {\n      \"data-slate-spacer\": true,\n      style: {\n        height: '0',\n        color: 'transparent',\n        outline: 'none',\n        position: 'absolute'\n      }\n    }, /*#__PURE__*/React.createElement(MemoizedText, {\n      renderPlaceholder: renderPlaceholder,\n      decorations: [],\n      isLast: false,\n      parent: element,\n      text: _text\n    }));\n    NODE_TO_INDEX.set(_text, 0);\n    NODE_TO_PARENT.set(_text, element);\n  }\n  return renderElement({\n    attributes,\n    children,\n    element\n  });\n};\nvar MemoizedElement = /*#__PURE__*/React.memo(Element, (prev, next) => {\n  return prev.element === next.element && prev.renderElement === next.renderElement && prev.renderLeaf === next.renderLeaf && isDecoratorRangeListEqual(prev.decorations, next.decorations) && (prev.selection === next.selection || !!prev.selection && !!next.selection && Range.equals(prev.selection, next.selection));\n});\n/**\r\n * The default element renderer.\r\n */\n\nvar DefaultElement = props => {\n  var {\n    attributes,\n    children,\n    element\n  } = props;\n  var editor = useSlateStatic();\n  var Tag = editor.isInline(element) ? 'span' : 'div';\n  return /*#__PURE__*/React.createElement(Tag, Object.assign({}, attributes, {\n    style: {\n      position: 'relative'\n    }\n  }), children);\n};\n\n/**\r\n * A React context for sharing the `decorate` prop of the editable.\r\n */\n\nvar DecorateContext = /*#__PURE__*/createContext(() => []);\n/**\r\n * Get the current `decorate` prop of the editable.\r\n */\n\nvar useDecorate = () => {\n  return useContext(DecorateContext);\n};\n\n/**\r\n * A React context for sharing the `selected` state of an element.\r\n */\n\nvar SelectedContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `selected` state of an element.\r\n */\n\nvar useSelected = () => {\n  return useContext(SelectedContext);\n};\n\n/**\r\n * Children.\r\n */\n\nvar useChildren = props => {\n  var {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  } = props;\n  var decorate = useDecorate();\n  var editor = useSlateStatic();\n  var path = ReactEditor.findPath(editor, node);\n  var children = [];\n  var isLeafBlock = Element$1.isElement(node) && !editor.isInline(node) && Editor.hasInlines(editor, node);\n  for (var i = 0; i < node.children.length; i++) {\n    var p = path.concat(i);\n    var n = node.children[i];\n    var key = ReactEditor.findKey(editor, n);\n    var range = Editor.range(editor, p);\n    var sel = selection && Range.intersection(range, selection);\n    var ds = decorate([n, p]);\n    for (var dec of decorations) {\n      var d = Range.intersection(dec, range);\n      if (d) {\n        ds.push(d);\n      }\n    }\n    if (Element$1.isElement(n)) {\n      children.push( /*#__PURE__*/React.createElement(SelectedContext.Provider, {\n        key: \"provider-\".concat(key.id),\n        value: !!sel\n      }, /*#__PURE__*/React.createElement(MemoizedElement, {\n        decorations: ds,\n        element: n,\n        key: key.id,\n        renderElement: renderElement,\n        renderPlaceholder: renderPlaceholder,\n        renderLeaf: renderLeaf,\n        selection: sel\n      })));\n    } else {\n      children.push( /*#__PURE__*/React.createElement(MemoizedText, {\n        decorations: ds,\n        key: key.id,\n        isLast: isLeafBlock && i === node.children.length - 1,\n        parent: node,\n        renderPlaceholder: renderPlaceholder,\n        renderLeaf: renderLeaf,\n        text: n\n      }));\n    }\n    NODE_TO_INDEX.set(n, i);\n    NODE_TO_PARENT.set(n, node);\n  }\n  return children;\n};\n\n/**\r\n * A React context for sharing the `readOnly` state of the editor.\r\n */\n\nvar ReadOnlyContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `readOnly` state of the editor.\r\n */\n\nvar useReadOnly = () => {\n  return useContext(ReadOnlyContext);\n};\nvar SlateContext = /*#__PURE__*/createContext(null);\n/**\r\n * Get the current editor object from the React context.\r\n */\n\nvar useSlate = () => {\n  var context = useContext(SlateContext);\n  if (!context) {\n    throw new Error(\"The `useSlate` hook must be used inside the <Slate> component's context.\");\n  }\n  var {\n    editor\n  } = context;\n  return editor;\n};\nvar useSlateWithV = () => {\n  var context = useContext(SlateContext);\n  if (!context) {\n    throw new Error(\"The `useSlate` hook must be used inside the <Slate> component's context.\");\n  }\n  return context;\n};\nvar TRIPLE_CLICK = 3;\n\n/**\r\n * Hotkey mappings for each platform.\r\n */\n\nvar HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z'\n};\nvar APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t'\n};\nvar WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z']\n};\n/**\r\n * Create a platform-aware hotkey checker.\r\n */\n\nvar create = key => {\n  var generic = HOTKEYS[key];\n  var apple = APPLE_HOTKEYS[key];\n  var windows = WINDOWS_HOTKEYS[key];\n  var isGeneric = generic && isKeyHotkey(generic);\n  var isApple = apple && isKeyHotkey(apple);\n  var isWindows = windows && isKeyHotkey(windows);\n  return event => {\n    if (isGeneric && isGeneric(event)) return true;\n    if (IS_APPLE && isApple && isApple(event)) return true;\n    if (!IS_APPLE && isWindows && isWindows(event)) return true;\n    return false;\n  };\n};\n/**\r\n * Hotkeys.\r\n */\n\nvar Hotkeys = {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo')\n};\nvar createRestoreDomManager = (editor, receivedUserInput) => {\n  var bufferedMutations = [];\n  var clear = () => {\n    bufferedMutations = [];\n  };\n  var registerMutations = mutations => {\n    if (!receivedUserInput.current) {\n      return;\n    }\n    var trackedMutations = mutations.filter(mutation => isTrackedMutation(editor, mutation, mutations));\n    bufferedMutations.push(...trackedMutations);\n  };\n  function restoreDOM() {\n    bufferedMutations.reverse().forEach(mutation => {\n      if (mutation.type === 'characterData') {\n        mutation.target.textContent = mutation.oldValue;\n        return;\n      }\n      mutation.removedNodes.forEach(node => {\n        mutation.target.insertBefore(node, mutation.nextSibling);\n      });\n      mutation.addedNodes.forEach(node => {\n        mutation.target.removeChild(node);\n      });\n    }); // Clear buffered mutations to ensure we don't undo them twice\n\n    clear();\n  }\n  return {\n    registerMutations,\n    restoreDOM,\n    clear\n  };\n};\nvar MUTATION_OBSERVER_CONFIG$1 = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true\n}; // We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\n\nclass RestoreDOMComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this.context = null;\n    this.manager = null;\n    this.mutationObserver = null;\n  }\n  observe() {\n    var _this$mutationObserve;\n    var {\n      node\n    } = this.props;\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined');\n    }\n    (_this$mutationObserve = this.mutationObserver) === null || _this$mutationObserve === void 0 ? void 0 : _this$mutationObserve.observe(node.current, MUTATION_OBSERVER_CONFIG$1);\n  }\n  componentDidMount() {\n    var {\n      receivedUserInput\n    } = this.props;\n    var editor = this.context;\n    this.manager = createRestoreDomManager(editor, receivedUserInput);\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations);\n    this.observe();\n  }\n  getSnapshotBeforeUpdate() {\n    var _this$mutationObserve2, _this$mutationObserve3, _this$manager2;\n    var pendingMutations = (_this$mutationObserve2 = this.mutationObserver) === null || _this$mutationObserve2 === void 0 ? void 0 : _this$mutationObserve2.takeRecords();\n    if (pendingMutations !== null && pendingMutations !== void 0 && pendingMutations.length) {\n      var _this$manager;\n      (_this$manager = this.manager) === null || _this$manager === void 0 ? void 0 : _this$manager.registerMutations(pendingMutations);\n    }\n    (_this$mutationObserve3 = this.mutationObserver) === null || _this$mutationObserve3 === void 0 ? void 0 : _this$mutationObserve3.disconnect();\n    (_this$manager2 = this.manager) === null || _this$manager2 === void 0 ? void 0 : _this$manager2.restoreDOM();\n    return null;\n  }\n  componentDidUpdate() {\n    var _this$manager3;\n    (_this$manager3 = this.manager) === null || _this$manager3 === void 0 ? void 0 : _this$manager3.clear();\n    this.observe();\n  }\n  componentWillUnmount() {\n    var _this$mutationObserve4;\n    (_this$mutationObserve4 = this.mutationObserver) === null || _this$mutationObserve4 === void 0 ? void 0 : _this$mutationObserve4.disconnect();\n  }\n  render() {\n    return this.props.children;\n  }\n}\nRestoreDOMComponent.contextType = EditorContext;\nvar RestoreDOM = IS_ANDROID ? RestoreDOMComponent : _ref => {\n  var {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\n\n/**\r\n * Check whether a text diff was applied in a way we can perform the pending action on /\r\n * recover the pending selection.\r\n */\n\nfunction verifyDiffState(editor, textDiff) {\n  var {\n    path,\n    diff\n  } = textDiff;\n  if (!Editor.hasPath(editor, path)) {\n    return false;\n  }\n  var node = Node.get(editor, path);\n  if (!Text$1.isText(node)) {\n    return false;\n  }\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return node.text.slice(diff.start, diff.start + diff.text.length) === diff.text;\n  }\n  var nextPath = Path.next(path);\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false;\n  }\n  var nextNode = Node.get(editor, nextPath);\n  return Text$1.isText(nextNode) && nextNode.text.startsWith(diff.text);\n}\nfunction applyStringDiff(text) {\n  for (var _len = arguments.length, diffs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    diffs[_key - 1] = arguments[_key];\n  }\n  return diffs.reduce((text, diff) => text.slice(0, diff.start) + diff.text + text.slice(diff.end), text);\n}\nfunction longestCommonPrefixLength(str, another) {\n  var length = Math.min(str.length, another.length);\n  for (var i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i;\n    }\n  }\n  return length;\n}\nfunction longestCommonSuffixLength(str, another, max) {\n  var length = Math.min(str.length, another.length, max);\n  for (var i = 0; i < length; i++) {\n    if (str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)) {\n      return i;\n    }\n  }\n  return length;\n}\n/**\r\n * Remove redundant changes from the diff so that it spans the minimal possible range\r\n */\n\nfunction normalizeStringDiff(targetText, diff) {\n  var {\n    start,\n    end,\n    text\n  } = diff;\n  var removedText = targetText.slice(start, end);\n  var prefixLength = longestCommonPrefixLength(removedText, text);\n  var max = Math.min(removedText.length - prefixLength, text.length - prefixLength);\n  var suffixLength = longestCommonSuffixLength(removedText, text, max);\n  var normalized = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength)\n  };\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null;\n  }\n  return normalized;\n}\n/**\r\n * Return a string diff that is equivalent to applying b after a spanning the range of\r\n * both changes\r\n */\n\nfunction mergeStringDiffs(targetText, a, b) {\n  var start = Math.min(a.start, b.start);\n  var overlap = Math.max(0, Math.min(a.start + a.text.length, b.end) - b.start);\n  var applied = applyStringDiff(targetText, a, b);\n  var sliceEnd = Math.max(b.start + b.text.length, a.start + a.text.length + (a.start + a.text.length > b.start ? b.text.length : 0) - overlap);\n  var text = applied.slice(start, sliceEnd);\n  var end = Math.max(a.end, b.end - a.text.length + (a.end - a.start));\n  return normalizeStringDiff(targetText, {\n    start,\n    end,\n    text\n  });\n}\n/**\r\n * Get the slate range the text diff spans.\r\n */\n\nfunction targetRange(textDiff) {\n  var {\n    path,\n    diff\n  } = textDiff;\n  return {\n    anchor: {\n      path,\n      offset: diff.start\n    },\n    focus: {\n      path,\n      offset: diff.end\n    }\n  };\n}\n/**\r\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\r\n * the pending diffs. Since the pending diffs might have been inserted with different\r\n * marks we have to 'walk' the offset from the starting position to ensure we still\r\n * have a valid point inside the document\r\n */\n\nfunction normalizePoint(editor, point) {\n  var {\n    path,\n    offset\n  } = point;\n  if (!Editor.hasPath(editor, path)) {\n    return null;\n  }\n  var leaf = Node.get(editor, path);\n  if (!Text$1.isText(leaf)) {\n    return null;\n  }\n  var parentBlock = Editor.above(editor, {\n    match: n => Editor.isBlock(editor, n),\n    at: path\n  });\n  if (!parentBlock) {\n    return null;\n  }\n  while (offset > leaf.text.length) {\n    var entry = Editor.next(editor, {\n      at: path,\n      match: Text$1.isText\n    });\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null;\n    }\n    offset -= leaf.text.length;\n    leaf = entry[0];\n    path = entry[1];\n  }\n  return {\n    path,\n    offset\n  };\n}\n/**\r\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\r\n */\n\nfunction normalizeRange(editor, range) {\n  var anchor = normalizePoint(editor, range.anchor);\n  if (!anchor) {\n    return null;\n  }\n  if (Range.isCollapsed(range)) {\n    return {\n      anchor,\n      focus: anchor\n    };\n  }\n  var focus = normalizePoint(editor, range.focus);\n  if (!focus) {\n    return null;\n  }\n  return {\n    anchor,\n    focus\n  };\n}\nfunction transformPendingPoint(editor, point, op) {\n  var pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor);\n  var textDiff = pendingDiffs === null || pendingDiffs === void 0 ? void 0 : pendingDiffs.find(_ref => {\n    var {\n      path\n    } = _ref;\n    return Path.equals(path, point.path);\n  });\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, {\n      affinity: 'backward'\n    });\n  }\n  var {\n    diff\n  } = textDiff; // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n\n  if (point.offset <= diff.start + diff.text.length) {\n    var _anchor = {\n      path: point.path,\n      offset: diff.start\n    };\n    var _transformed = Point.transform(_anchor, op, {\n      affinity: 'backward'\n    });\n    if (!_transformed) {\n      return null;\n    }\n    return {\n      path: _transformed.path,\n      offset: _transformed.offset + point.offset - diff.start\n    };\n  } // Point references location after the diff\n\n  var anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start\n  };\n  var transformed = Point.transform(anchor, op, {\n    affinity: 'backward'\n  });\n  if (!transformed) {\n    return null;\n  }\n  if (op.type === 'split_node' && Path.equals(op.path, point.path) && anchor.offset < op.position && diff.start < op.position) {\n    return transformed;\n  }\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start\n  };\n}\nfunction transformPendingRange(editor, range, op) {\n  var anchor = transformPendingPoint(editor, range.anchor, op);\n  if (!anchor) {\n    return null;\n  }\n  if (Range.isCollapsed(range)) {\n    return {\n      anchor,\n      focus: anchor\n    };\n  }\n  var focus = transformPendingPoint(editor, range.focus, op);\n  if (!focus) {\n    return null;\n  }\n  return {\n    anchor,\n    focus\n  };\n}\nfunction transformTextDiff(textDiff, op) {\n  var {\n    path,\n    diff,\n    id\n  } = textDiff;\n  switch (op.type) {\n    case 'insert_text':\n      {\n        if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n          return textDiff;\n        }\n        if (op.offset <= diff.start) {\n          return {\n            diff: {\n              start: op.text.length + diff.start,\n              end: op.text.length + diff.end,\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start,\n            end: diff.end + op.text.length,\n            text: diff.text\n          },\n          id,\n          path\n        };\n      }\n    case 'remove_text':\n      {\n        if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n          return textDiff;\n        }\n        if (op.offset + op.text.length <= diff.start) {\n          return {\n            diff: {\n              start: diff.start - op.text.length,\n              end: diff.end - op.text.length,\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start,\n            end: diff.end - op.text.length,\n            text: diff.text\n          },\n          id,\n          path\n        };\n      }\n    case 'split_node':\n      {\n        if (!Path.equals(op.path, path) || op.position >= diff.end) {\n          return {\n            diff,\n            id,\n            path: Path.transform(path, op, {\n              affinity: 'backward'\n            })\n          };\n        }\n        if (op.position > diff.start) {\n          return {\n            diff: {\n              start: diff.start,\n              end: Math.min(op.position, diff.end),\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start - op.position,\n            end: diff.end - op.position,\n            text: diff.text\n          },\n          id,\n          path: Path.transform(path, op, {\n            affinity: 'forward'\n          })\n        };\n      }\n    case 'merge_node':\n      {\n        if (!Path.equals(op.path, path)) {\n          return {\n            diff,\n            id,\n            path: Path.transform(path, op)\n          };\n        }\n        return {\n          diff: {\n            start: diff.start + op.position,\n            end: diff.end + op.position,\n            text: diff.text\n          },\n          id,\n          path: Path.transform(path, op)\n        };\n      }\n  }\n  var newPath = Path.transform(path, op);\n  if (!newPath) {\n    return null;\n  }\n  return {\n    diff,\n    path: newPath,\n    id\n  };\n}\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$3(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$3(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\n\nvar RESOLVE_DELAY = 25; // Time with no user interaction before the current user action is considered as done.\n\nvar FLUSH_DELAY = 200; // Replace with `const debug = console.log` to debug\n\nvar debug = function debug() {};\nfunction createAndroidInputManager(_ref) {\n  var {\n    editor,\n    scheduleOnDOMSelectionChange,\n    onDOMSelectionChange\n  } = _ref;\n  var flushing = false;\n  var compositionEndTimeoutId = null;\n  var flushTimeoutId = null;\n  var actionTimeoutId = null;\n  var idCounter = 0;\n  var insertPositionHint = false;\n  var applyPendingSelection = () => {\n    var pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor);\n    EDITOR_TO_PENDING_SELECTION.delete(editor);\n    if (pendingSelection) {\n      var {\n        selection\n      } = editor;\n      var normalized = normalizeRange(editor, pendingSelection);\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized);\n      }\n    }\n  };\n  var performAction = () => {\n    var action = EDITOR_TO_PENDING_ACTION.get(editor);\n    EDITOR_TO_PENDING_ACTION.delete(editor);\n    if (!action) {\n      return;\n    }\n    if (action.at) {\n      var target = Point.isPoint(action.at) ? normalizePoint(editor, action.at) : normalizeRange(editor, action.at);\n      if (!target) {\n        return;\n      }\n      var _targetRange = Editor.range(editor, target);\n      if (!editor.selection || !Range.equals(editor.selection, _targetRange)) {\n        Transforms.select(editor, target);\n      }\n    }\n    action.run();\n  };\n  var flush = () => {\n    var _EDITOR_TO_PENDING_DI;\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId);\n      actionTimeoutId = null;\n    }\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection();\n      return;\n    }\n    if (!flushing) {\n      flushing = true;\n      setTimeout(() => flushing = false);\n    }\n    if (hasPendingAction()) {\n      flushing = 'action';\n    }\n    var selectionRef = editor.selection && Editor.rangeRef(editor, editor.selection, {\n      affinity: 'forward'\n    });\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks);\n    debug('flush', EDITOR_TO_PENDING_ACTION.get(editor), EDITOR_TO_PENDING_DIFFS.get(editor));\n    var scheduleSelectionChange = !!((_EDITOR_TO_PENDING_DI = EDITOR_TO_PENDING_DIFFS.get(editor)) !== null && _EDITOR_TO_PENDING_DI !== void 0 && _EDITOR_TO_PENDING_DI.length);\n    var diff;\n    while (diff = (_EDITOR_TO_PENDING_DI2 = EDITOR_TO_PENDING_DIFFS.get(editor)) === null || _EDITOR_TO_PENDING_DI2 === void 0 ? void 0 : _EDITOR_TO_PENDING_DI2[0]) {\n      var _EDITOR_TO_PENDING_DI2, _EDITOR_TO_PENDING_DI3;\n      var pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor);\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor);\n        editor.marks = pendingMarks;\n      }\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null;\n      }\n      var range = targetRange(diff);\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range);\n      }\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text);\n      } else {\n        Editor.deleteFragment(editor);\n      } // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n\n      EDITOR_TO_PENDING_DIFFS.set(editor, (_EDITOR_TO_PENDING_DI3 = EDITOR_TO_PENDING_DIFFS.get(editor)) === null || _EDITOR_TO_PENDING_DI3 === void 0 ? void 0 : _EDITOR_TO_PENDING_DI3.filter(_ref2 => {\n        var {\n          id\n        } = _ref2;\n        return id !== diff.id;\n      }));\n      if (!verifyDiffState(editor, diff)) {\n        scheduleSelectionChange = false;\n        EDITOR_TO_PENDING_ACTION.delete(editor);\n        EDITOR_TO_USER_MARKS.delete(editor);\n        flushing = 'action'; // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n\n        EDITOR_TO_PENDING_SELECTION.delete(editor);\n        scheduleOnDOMSelectionChange.cancel();\n        onDOMSelectionChange.cancel();\n        selectionRef === null || selectionRef === void 0 ? void 0 : selectionRef.unref();\n      }\n    }\n    var selection = selectionRef === null || selectionRef === void 0 ? void 0 : selectionRef.unref();\n    if (selection && !EDITOR_TO_PENDING_SELECTION.get(editor) && (!editor.selection || !Range.equals(selection, editor.selection))) {\n      Transforms.select(editor, selection);\n    }\n    if (hasPendingAction()) {\n      performAction();\n      return;\n    } // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n\n    if (scheduleSelectionChange) {\n      scheduleOnDOMSelectionChange();\n    }\n    scheduleOnDOMSelectionChange.flush();\n    onDOMSelectionChange.flush();\n    applyPendingSelection();\n    var userMarks = EDITOR_TO_USER_MARKS.get(editor);\n    EDITOR_TO_USER_MARKS.delete(editor);\n    if (userMarks !== undefined) {\n      editor.marks = userMarks;\n      editor.onChange();\n    }\n  };\n  var handleCompositionEnd = _event => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId);\n    }\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false);\n      flush();\n    }, RESOLVE_DELAY);\n  };\n  var handleCompositionStart = _event => {\n    IS_COMPOSING.set(editor, true);\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId);\n      compositionEndTimeoutId = null;\n    }\n  };\n  var updatePlaceholderVisibility = function updatePlaceholderVisibility() {\n    var forceHide = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor);\n    if (!placeholderElement) {\n      return;\n    }\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none';\n      return;\n    }\n    placeholderElement.style.removeProperty('display');\n  };\n  var storeDiff = (path, diff) => {\n    var _EDITOR_TO_PENDING_DI4;\n    var pendingDiffs = (_EDITOR_TO_PENDING_DI4 = EDITOR_TO_PENDING_DIFFS.get(editor)) !== null && _EDITOR_TO_PENDING_DI4 !== void 0 ? _EDITOR_TO_PENDING_DI4 : [];\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs);\n    var target = Node.leaf(editor, path);\n    var idx = pendingDiffs.findIndex(change => Path.equals(change.path, path));\n    if (idx < 0) {\n      var normalized = normalizeStringDiff(target.text, diff);\n      if (normalized) {\n        pendingDiffs.push({\n          path,\n          diff,\n          id: idCounter++\n        });\n      }\n      updatePlaceholderVisibility();\n      return;\n    }\n    var merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff);\n    if (!merged) {\n      pendingDiffs.splice(idx, 1);\n      updatePlaceholderVisibility();\n      return;\n    }\n    pendingDiffs[idx] = _objectSpread$3(_objectSpread$3({}, pendingDiffs[idx]), {}, {\n      diff: merged\n    });\n  };\n  var scheduleAction = function scheduleAction(run) {\n    var {\n      at\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    insertPositionHint = false;\n    EDITOR_TO_PENDING_SELECTION.delete(editor);\n    scheduleOnDOMSelectionChange.cancel();\n    onDOMSelectionChange.cancel();\n    if (hasPendingAction()) {\n      flush();\n    }\n    EDITOR_TO_PENDING_ACTION.set(editor, {\n      at,\n      run\n    }); // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n\n    actionTimeoutId = setTimeout(flush);\n  };\n  var handleDOMBeforeInput = event => {\n    var _targetRange2;\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    var {\n      inputType: type\n    } = event;\n    var targetRange = null;\n    var data = event.dataTransfer || event.data || undefined;\n    if (insertPositionHint !== false && type !== 'insertText' && type !== 'insertCompositionText') {\n      insertPositionHint = false;\n    }\n    var [nativeTargetRange] = event.getTargetRanges();\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true\n      });\n    } // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n\n    var window = ReactEditor.getWindow(editor);\n    var domSelection = window.getSelection();\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection;\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true\n      });\n    }\n    targetRange = (_targetRange2 = targetRange) !== null && _targetRange2 !== void 0 ? _targetRange2 : editor.selection;\n    if (!targetRange) {\n      return;\n    }\n    if (Range.isExpanded(targetRange) && type.startsWith('delete')) {\n      var [start, end] = Range.edges(targetRange);\n      var leaf = Node.leaf(editor, start.path);\n      if (leaf.text.length === start.offset && end.offset === 0) {\n        var next = Editor.next(editor, {\n          at: start.path,\n          match: Text$1.isText\n        });\n        if (next && Path.equals(next[1], end.path)) {\n          targetRange = {\n            anchor: end,\n            focus: end\n          };\n        }\n      }\n    }\n    if (Range.isExpanded(targetRange) && type.startsWith('delete')) {\n      if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n        var [_start, _end] = Range.edges(targetRange);\n        return storeDiff(targetRange.anchor.path, {\n          text: '',\n          end: _end.offset,\n          start: _start.offset\n        });\n      }\n      var direction = type.endsWith('Backward') ? 'backward' : 'forward';\n      return scheduleAction(() => Editor.deleteFragment(editor, {\n        direction\n      }), {\n        at: targetRange\n      });\n    }\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag':\n        {\n          return scheduleAction(() => Editor.deleteFragment(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteContent':\n      case 'deleteContentForward':\n        {\n          var {\n            anchor\n          } = targetRange;\n          if (Range.isCollapsed(targetRange)) {\n            var targetNode = Node.leaf(editor, anchor.path);\n            if (anchor.offset < targetNode.text.length) {\n              return storeDiff(anchor.path, {\n                text: '',\n                start: anchor.offset,\n                end: anchor.offset + 1\n              });\n            }\n          }\n          return scheduleAction(() => Editor.deleteForward(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteContentBackward':\n        {\n          var _nativeTargetRange;\n          var {\n            anchor: _anchor\n          } = targetRange; // If we have a mismatch between the native and slate selection being collapsed\n          // we are most likely deleting a zero-width placeholder and thus should perform it\n          // as an action to ensure correct behavior (mostly happens with mark placeholders)\n\n          var nativeCollapsed = isDOMSelection(nativeTargetRange) ? nativeTargetRange.isCollapsed : !!((_nativeTargetRange = nativeTargetRange) !== null && _nativeTargetRange !== void 0 && _nativeTargetRange.collapsed);\n          if (nativeCollapsed && Range.isCollapsed(targetRange) && _anchor.offset > 0) {\n            return storeDiff(_anchor.path, {\n              text: '',\n              start: _anchor.offset - 1,\n              end: _anchor.offset\n            });\n          }\n          return scheduleAction(() => Editor.deleteBackward(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteEntireSoftLine':\n        {\n          return scheduleAction(() => {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n          }, {\n            at: targetRange\n          });\n        }\n      case 'deleteHardLineBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'block'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteSoftLineBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'line'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteHardLineForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'block'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteSoftLineForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'line'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteWordBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'word'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteWordForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'word'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'insertLineBreak':\n        {\n          return scheduleAction(() => Editor.insertSoftBreak(editor), {\n            at: targetRange\n          });\n        }\n      case 'insertParagraph':\n        {\n          return scheduleAction(() => Editor.insertBreak(editor), {\n            at: targetRange\n          });\n        }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText':\n        {\n          if ((data === null || data === void 0 ? void 0 : data.constructor.name) === 'DataTransfer') {\n            return scheduleAction(() => ReactEditor.insertData(editor, data), {\n              at: targetRange\n            });\n          }\n          if (typeof data === 'string' && data.includes('\\n')) {\n            return scheduleAction(() => Editor.insertSoftBreak(editor), {\n              at: Range.end(targetRange)\n            });\n          }\n          var text = data !== null && data !== void 0 ? data : ''; // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n          // the placeholder itself and thus includes the zero-width space inside edit events.\n\n          if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n            text = text.replace('\\uFEFF', '');\n          }\n          if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n            var [_start2, _end2] = Range.edges(targetRange);\n            var diff = {\n              start: _start2.offset,\n              end: _end2.offset,\n              text\n            }; // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n            // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n            // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n            // text events are fired with the correct target ranges, only the final 'insertComposition'\n            // isn't, so we can adjust the target range start offset if we are confident this is the\n            // swiftkey insert causing the issue.\n\n            if (text && insertPositionHint && type === 'insertCompositionText') {\n              var hintPosition = insertPositionHint.start + insertPositionHint.text.search(/\\S|$/);\n              var diffPosition = diff.start + diff.text.search(/\\S|$/);\n              if (diffPosition === hintPosition + 1 && diff.end === insertPositionHint.start + insertPositionHint.text.length) {\n                diff.start -= 1;\n                insertPositionHint = null;\n                scheduleFlush();\n              } else {\n                insertPositionHint = false;\n              }\n            } else if (type === 'insertText') {\n              if (insertPositionHint === null) {\n                insertPositionHint = diff;\n              } else if (insertPositionHint && Range.isCollapsed(targetRange) && insertPositionHint.end + insertPositionHint.text.length === _start2.offset) {\n                insertPositionHint = _objectSpread$3(_objectSpread$3({}, insertPositionHint), {}, {\n                  text: insertPositionHint.text + text\n                });\n              } else {\n                insertPositionHint = false;\n              }\n            } else {\n              insertPositionHint = false;\n            }\n            storeDiff(_start2.path, diff);\n            return;\n          }\n          return scheduleAction(() => Editor.insertText(editor, text), {\n            at: targetRange\n          });\n        }\n    }\n  };\n  var hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor);\n  };\n  var hasPendingDiffs = () => {\n    var _EDITOR_TO_PENDING_DI5;\n    return !!((_EDITOR_TO_PENDING_DI5 = EDITOR_TO_PENDING_DIFFS.get(editor)) !== null && _EDITOR_TO_PENDING_DI5 !== void 0 && _EDITOR_TO_PENDING_DI5.length);\n  };\n  var hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs();\n  };\n  var isFlushing = () => {\n    return flushing;\n  };\n  var handleUserSelect = range => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range);\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    var {\n      selection\n    } = editor;\n    if (!range) {\n      return;\n    }\n    var pathChanged = !selection || !Path.equals(selection.anchor.path, range.anchor.path);\n    var parentPathChanged = !selection || !Path.equals(selection.anchor.path.slice(0, -1), range.anchor.path.slice(0, -1));\n    if (pathChanged && insertPositionHint || parentPathChanged) {\n      insertPositionHint = false;\n    }\n    if (pathChanged || !hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY);\n    }\n  };\n  var handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      flush();\n    }\n  };\n  var handleKeyDown = _ => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true);\n      setTimeout(updatePlaceholderVisibility);\n    }\n  };\n  var scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush);\n    }\n  };\n  var handleDomMutations = mutations => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return;\n    }\n    if (mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))) {\n      var _EDITOR_TO_FORCE_REND;\n\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      (_EDITOR_TO_FORCE_REND = EDITOR_TO_FORCE_RENDER.get(editor)) === null || _EDITOR_TO_FORCE_REND === void 0 ? void 0 : _EDITOR_TO_FORCE_REND();\n    }\n  };\n  return {\n    flush,\n    scheduleFlush,\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n    isFlushing,\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n    handleDomMutations,\n    handleInput\n  };\n}\nfunction useIsMounted() {\n  var isMountedRef = useRef(false);\n  useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  return isMountedRef.current;\n}\nfunction useMutationObserver(node, callback, options) {\n  var [mutationObserver] = useState(() => new MutationObserver(callback));\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords();\n  });\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined');\n    }\n    mutationObserver.observe(node.current, options);\n    return () => mutationObserver.disconnect();\n  }, []);\n}\nvar _excluded$2 = [\"node\"];\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar MUTATION_OBSERVER_CONFIG = {\n  subtree: true,\n  childList: true,\n  characterData: true\n};\nfunction useAndroidInputManager(_ref) {\n  var {\n      node\n    } = _ref,\n    options = _objectWithoutProperties(_ref, _excluded$2);\n  if (!IS_ANDROID) {\n    return null;\n  }\n  var editor = useSlateStatic();\n  var isMounted = useIsMounted();\n  var [inputManager] = useState(() => createAndroidInputManager(_objectSpread$2({\n    editor\n  }, options)));\n  useMutationObserver(node, inputManager.handleDomMutations, MUTATION_OBSERVER_CONFIG);\n  EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush);\n  if (isMounted) {\n    inputManager.flush();\n  }\n  return inputManager;\n}\nfunction useTrackUserInput() {\n  var editor = useSlateStatic();\n  var receivedUserInput = useRef(false);\n  var animationFrameIdRef = useRef(0);\n  var onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return;\n    }\n    receivedUserInput.current = true;\n    var window = ReactEditor.getWindow(editor);\n    window.cancelAnimationFrame(animationFrameIdRef.current);\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false;\n    });\n  }, []);\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), []);\n  return {\n    receivedUserInput,\n    onUserInput\n  };\n}\nvar _excluded$1 = [\"autoFocus\", \"decorate\", \"onDOMBeforeInput\", \"placeholder\", \"readOnly\", \"renderElement\", \"renderLeaf\", \"renderPlaceholder\", \"scrollSelectionIntoView\", \"style\", \"as\"],\n  _excluded2 = [\"text\"];\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar Children = props => /*#__PURE__*/React.createElement(React.Fragment, null, useChildren(props));\n/**\r\n * Editable.\r\n */\n\nvar Editable = props => {\n  var {\n      autoFocus,\n      decorate = defaultDecorate,\n      onDOMBeforeInput: propsOnDOMBeforeInput,\n      placeholder,\n      readOnly = false,\n      renderElement,\n      renderLeaf,\n      renderPlaceholder = props => /*#__PURE__*/React.createElement(DefaultPlaceholder, Object.assign({}, props)),\n      scrollSelectionIntoView = defaultScrollSelectionIntoView,\n      style = {},\n      as: Component = 'div'\n    } = props,\n    attributes = _objectWithoutProperties(props, _excluded$1);\n  var editor = useSlate(); // Rerender editor when composition status changed\n\n  var [isComposing, setIsComposing] = useState(false);\n  var ref = useRef(null);\n  var deferredOperations = useRef([]);\n  var {\n    onUserInput,\n    receivedUserInput\n  } = useTrackUserInput();\n  var [, forceRender] = useReducer(s => s + 1, 0);\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender); // Update internal state on each render.\n\n  IS_READ_ONLY.set(editor, readOnly); // Keep track of some state for the event handler logic.\n\n  var state = useMemo(() => ({\n    isDraggingInternally: false,\n    isUpdatingSelection: false,\n    latestElement: null,\n    hasMarkPlaceholder: false\n  }), []); // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus();\n    }\n  }, [autoFocus]); // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n\n  var onDOMSelectionChange = useCallback(throttle(() => {\n    if ((IS_ANDROID || !ReactEditor.isComposing(editor)) && (!state.isUpdatingSelection || androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.isFlushing()) && !state.isDraggingInternally) {\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n      var {\n        activeElement\n      } = root;\n      var el = ReactEditor.toDOMNode(editor, editor);\n      var domSelection = root.getSelection();\n      if (activeElement === el) {\n        state.latestElement = activeElement;\n        IS_FOCUSED.set(editor, true);\n      } else {\n        IS_FOCUSED.delete(editor);\n      }\n      if (!domSelection) {\n        return Transforms.deselect(editor);\n      }\n      var {\n        anchorNode,\n        focusNode\n      } = domSelection;\n      var anchorNodeSelectable = hasEditableTarget(editor, anchorNode) || isTargetInsideNonReadonlyVoid(editor, anchorNode);\n      var focusNodeSelectable = hasEditableTarget(editor, focusNode) || isTargetInsideNonReadonlyVoid(editor, focusNode);\n      if (anchorNodeSelectable && focusNodeSelectable) {\n        var range = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true\n        });\n        if (range) {\n          if (!ReactEditor.isComposing(editor) && !(androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.hasPendingChanges()) && !(androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.isFlushing())) {\n            Transforms.select(editor, range);\n          } else {\n            androidInputManager === null || androidInputManager === void 0 ? void 0 : androidInputManager.handleUserSelect(range);\n          }\n        }\n      } // Deselect the editor if the dom selection is not selectable in readonly mode\n\n      if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n        Transforms.deselect(editor);\n      }\n    }\n  }, 100), [readOnly]);\n  var scheduleOnDOMSelectionChange = useMemo(() => debounce(onDOMSelectionChange, 0), [onDOMSelectionChange]);\n  var androidInputManager = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange\n  });\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    var window;\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window);\n      EDITOR_TO_ELEMENT.set(editor, ref.current);\n      NODE_TO_ELEMENT.set(editor, ref.current);\n      ELEMENT_TO_NODE.set(ref.current, editor);\n    } else {\n      NODE_TO_ELEMENT.delete(editor);\n    } // Make sure the DOM selection state is in sync.\n\n    var {\n      selection\n    } = editor;\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    var domSelection = root.getSelection();\n    if (!domSelection || !ReactEditor.isFocused(editor) || androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.hasPendingAction()) {\n      return;\n    }\n    var setDomSelection = forceChange => {\n      var hasDomSelection = domSelection.type !== 'None'; // If the DOM selection is properly unset, we're done.\n\n      if (!selection && !hasDomSelection) {\n        return;\n      } // verify that the dom selection is in the editor\n\n      var editorElement = EDITOR_TO_ELEMENT.get(editor);\n      var hasDomSelectionInEditor = false;\n      if (editorElement.contains(domSelection.anchorNode) && editorElement.contains(domSelection.focusNode)) {\n        hasDomSelectionInEditor = true;\n      } // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n\n      if (hasDomSelection && hasDomSelectionInEditor && selection && !forceChange) {\n        var slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true\n        });\n        if (slateRange && Range.equals(slateRange, selection)) {\n          var _anchorNode$parentEle;\n          if (!state.hasMarkPlaceholder) {\n            return;\n          } // Ensure selection is inside the mark placeholder\n\n          var {\n            anchorNode\n          } = domSelection;\n          if (anchorNode !== null && anchorNode !== void 0 && (_anchorNode$parentEle = anchorNode.parentElement) !== null && _anchorNode$parentEle !== void 0 && _anchorNode$parentEle.hasAttribute('data-slate-mark-placeholder')) {\n            return;\n          }\n        }\n      } // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true\n        });\n        return;\n      } // Otherwise the DOM selection is out of sync, so update it.\n\n      state.isUpdatingSelection = true;\n      var newDomRange = selection && ReactEditor.toDOMRange(editor, selection);\n      if (newDomRange) {\n        if (Range.isBackward(selection)) {\n          domSelection.setBaseAndExtent(newDomRange.endContainer, newDomRange.endOffset, newDomRange.startContainer, newDomRange.startOffset);\n        } else {\n          domSelection.setBaseAndExtent(newDomRange.startContainer, newDomRange.startOffset, newDomRange.endContainer, newDomRange.endOffset);\n        }\n        scrollSelectionIntoView(editor, newDomRange);\n      } else {\n        domSelection.removeAllRanges();\n      }\n      return newDomRange;\n    };\n    var newDomRange = setDomSelection();\n    var ensureSelection = (androidInputManager === null || androidInputManager === void 0 ? void 0 : androidInputManager.isFlushing()) === 'action';\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        // COMPAT: In Firefox, it's not enough to create a range, you also need\n        // to focus the contenteditable element too. (2016/11/16)\n        if (newDomRange && IS_FIREFOX) {\n          var el = ReactEditor.toDOMNode(editor, editor);\n          el.focus();\n        }\n        state.isUpdatingSelection = false;\n      });\n      return;\n    }\n    var timeoutId = null;\n    var animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        var ensureDomSelection = forceChange => {\n          try {\n            var el = ReactEditor.toDOMNode(editor, editor);\n            el.focus();\n            setDomSelection(forceChange);\n          } catch (e) {// Ignore, dom and state might be out of sync\n          }\n        }; // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n\n        ensureDomSelection();\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true);\n          state.isUpdatingSelection = false;\n        });\n      }\n    });\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }); // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n\n  var onDOMBeforeInput = useCallback(event => {\n    onUserInput();\n    if (!readOnly && hasEditableTarget(editor, event.target) && !isDOMEventHandled(event, propsOnDOMBeforeInput)) {\n      var _EDITOR_TO_USER_SELEC;\n\n      // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n      if (androidInputManager) {\n        return androidInputManager.handleDOMBeforeInput(event);\n      } // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n      // triggering a `beforeinput` expecting the change to be applied to the immediately before\n      // set selection.\n\n      scheduleOnDOMSelectionChange.flush();\n      onDOMSelectionChange.flush();\n      var {\n        selection\n      } = editor;\n      var {\n        inputType: type\n      } = event;\n      var data = event.dataTransfer || event.data || undefined;\n      var isCompositionChange = type === 'insertCompositionText' || type === 'deleteCompositionText'; // COMPAT: use composition change events as a hint to where we should insert\n      // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n\n      if (isCompositionChange && ReactEditor.isComposing(editor)) {\n        return;\n      }\n      var native = false;\n      if (type === 'insertText' && selection && Range.isCollapsed(selection) &&\n      // Only use native character insertion for single characters a-z or space for now.\n      // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n      // causes duplicate inserts.\n      event.data && event.data.length === 1 && /[a-z ]/i.test(event.data) &&\n      // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n      // When there is an inline element, e.g. a link, and you select\n      // right after it (the start of the next node).\n      selection.anchor.offset !== 0) {\n        var _node$parentElement, _window$getComputedSt;\n        native = true; // Skip native if there are marks, as\n        // `insertText` will insert a node, not just text.\n\n        if (editor.marks) {\n          native = false;\n        } // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n        // Therefore we don't allow native events to insert text at the end of anchor nodes.\n\n        var {\n          anchor\n        } = selection;\n        var [node, offset] = ReactEditor.toDOMPoint(editor, anchor);\n        var anchorNode = (_node$parentElement = node.parentElement) === null || _node$parentElement === void 0 ? void 0 : _node$parentElement.closest('a');\n        var window = ReactEditor.getWindow(editor);\n        if (native && anchorNode && ReactEditor.hasDOMNode(editor, anchorNode)) {\n          var _lastText$textContent;\n\n          // Find the last text node inside the anchor.\n          var lastText = window === null || window === void 0 ? void 0 : window.document.createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT).lastChild();\n          if (lastText === node && ((_lastText$textContent = lastText.textContent) === null || _lastText$textContent === void 0 ? void 0 : _lastText$textContent.length) === offset) {\n            native = false;\n          }\n        } // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n        // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n\n        if (native && node.parentElement && (window === null || window === void 0 ? void 0 : (_window$getComputedSt = window.getComputedStyle(node.parentElement)) === null || _window$getComputedSt === void 0 ? void 0 : _window$getComputedSt.whiteSpace) === 'pre') {\n          var block = Editor.above(editor, {\n            at: anchor.path,\n            match: n => Editor.isBlock(editor, n)\n          });\n          if (block && Node.string(block[0]).includes('\\t')) {\n            native = false;\n          }\n        }\n      } // COMPAT: For the deleting forward/backward input types we don't want\n      // to change the selection because it is the range that will be deleted,\n      // and those commands determine that for themselves.\n\n      if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n        var [targetRange] = event.getTargetRanges();\n        if (targetRange) {\n          var range = ReactEditor.toSlateRange(editor, targetRange, {\n            exactMatch: false,\n            suppressThrow: false\n          });\n          if (!selection || !Range.equals(selection, range)) {\n            native = false;\n            var selectionRef = !isCompositionChange && editor.selection && Editor.rangeRef(editor, editor.selection);\n            Transforms.select(editor, range);\n            if (selectionRef) {\n              EDITOR_TO_USER_SELECTION.set(editor, selectionRef);\n            }\n          }\n        }\n      } // Composition change types occur while a user is composing text and can't be\n      // cancelled. Let them through and wait for the composition to end.\n\n      if (isCompositionChange) {\n        return;\n      }\n      if (!native) {\n        event.preventDefault();\n      } // COMPAT: If the selection is expanded, even if the command seems like\n      // a delete forward/backward command it should delete the selection.\n\n      if (selection && Range.isExpanded(selection) && type.startsWith('delete')) {\n        var direction = type.endsWith('Backward') ? 'backward' : 'forward';\n        Editor.deleteFragment(editor, {\n          direction\n        });\n        return;\n      }\n      switch (type) {\n        case 'deleteByComposition':\n        case 'deleteByCut':\n        case 'deleteByDrag':\n          {\n            Editor.deleteFragment(editor);\n            break;\n          }\n        case 'deleteContent':\n        case 'deleteContentForward':\n          {\n            Editor.deleteForward(editor);\n            break;\n          }\n        case 'deleteContentBackward':\n          {\n            Editor.deleteBackward(editor);\n            break;\n          }\n        case 'deleteEntireSoftLine':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteHardLineBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'block'\n            });\n            break;\n          }\n        case 'deleteSoftLineBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteHardLineForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'block'\n            });\n            break;\n          }\n        case 'deleteSoftLineForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteWordBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'word'\n            });\n            break;\n          }\n        case 'deleteWordForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'word'\n            });\n            break;\n          }\n        case 'insertLineBreak':\n          Editor.insertSoftBreak(editor);\n          break;\n        case 'insertParagraph':\n          {\n            Editor.insertBreak(editor);\n            break;\n          }\n        case 'insertFromComposition':\n        case 'insertFromDrop':\n        case 'insertFromPaste':\n        case 'insertFromYank':\n        case 'insertReplacementText':\n        case 'insertText':\n          {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false);\n                IS_COMPOSING.set(editor, false);\n              }\n            } // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n\n            if ((data === null || data === void 0 ? void 0 : data.constructor.name) === 'DataTransfer') {\n              ReactEditor.insertData(editor, data);\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() => Editor.insertText(editor, data));\n              } else {\n                Editor.insertText(editor, data);\n              }\n            }\n            break;\n          }\n      } // Restore the actual user section if nothing manually set it.\n\n      var toRestore = (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(editor)) === null || _EDITOR_TO_USER_SELEC === void 0 ? void 0 : _EDITOR_TO_USER_SELEC.unref();\n      EDITOR_TO_USER_SELECTION.delete(editor);\n      if (toRestore && (!editor.selection || !Range.equals(editor.selection, toRestore))) {\n        Transforms.select(editor, toRestore);\n      }\n    }\n  }, [readOnly, propsOnDOMBeforeInput]); // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput);\n    }\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput);\n      }\n    };\n  }, [onDOMBeforeInput]); // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n\n  useIsomorphicLayoutEffect(() => {\n    var window = ReactEditor.getWindow(editor);\n    window.document.addEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    return () => {\n      window.document.removeEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    };\n  }, [scheduleOnDOMSelectionChange]);\n  var decorations = decorate([editor, []]);\n  if (placeholder && editor.children.length === 1 && Array.from(Node.texts(editor)).length === 1 && Node.string(editor) === '' && !isComposing) {\n    var start = Editor.start(editor, []);\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start\n    });\n  }\n  var {\n    marks\n  } = editor;\n  state.hasMarkPlaceholder = false;\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    var {\n      anchor\n    } = editor.selection;\n    var leaf = Node.leaf(editor, anchor.path);\n    var rest = _objectWithoutProperties(leaf, _excluded2); // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n\n    if (!Text$1.equals(leaf, marks, {\n      loose: true\n    })) {\n      state.hasMarkPlaceholder = true;\n      var unset = Object.fromEntries(Object.keys(rest).map(mark => [mark, null]));\n      decorations.push(_objectSpread$1(_objectSpread$1(_objectSpread$1({\n        [MARK_PLACEHOLDER_SYMBOL]: true\n      }, unset), marks), {}, {\n        anchor,\n        focus: anchor\n      }));\n    }\n  } // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n\n  useEffect(() => {\n    setTimeout(() => {\n      var {\n        selection\n      } = editor;\n      if (selection) {\n        var {\n          anchor: _anchor\n        } = selection;\n        var _text = Node.leaf(editor, _anchor.path); // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n\n        if (marks && !Text$1.equals(_text, marks, {\n          loose: true\n        })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks);\n          return;\n        }\n      }\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor);\n    });\n  });\n  return /*#__PURE__*/React.createElement(ReadOnlyContext.Provider, {\n    value: readOnly\n  }, /*#__PURE__*/React.createElement(DecorateContext.Provider, {\n    value: decorate\n  }, /*#__PURE__*/React.createElement(RestoreDOM, {\n    node: ref,\n    receivedUserInput: receivedUserInput\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({\n    role: readOnly ? undefined : 'textbox',\n    \"aria-multiline\": readOnly ? undefined : true\n  }, attributes, {\n    // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n    // have to use hacks to make these replacement-based features work.\n    // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n    // mismatch warning app moves to browser. Pass-through consumer props when\n    // not CAN_USE_DOM (SSR) and default to falsy value\n    spellCheck: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.spellCheck : false,\n    autoCorrect: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.autoCorrect : 'false',\n    autoCapitalize: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.autoCapitalize : 'false',\n    \"data-slate-editor\": true,\n    \"data-slate-node\": \"value\",\n    // explicitly set this\n    contentEditable: !readOnly,\n    // in some cases, a decoration needs access to the range / selection to decorate a text node,\n    // then you will select the whole text node when you select part the of text\n    // this magic zIndex=\"-1\" will fix it\n    zindex: -1,\n    suppressContentEditableWarning: true,\n    ref: ref,\n    style: _objectSpread$1({\n      // Allow positioning relative to the editable element.\n      position: 'relative',\n      // Prevent the default outline styles.\n      outline: 'none',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word'\n    }, style),\n    onBeforeInput: useCallback(event => {\n      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n      // fall back to React's leaky polyfill instead just for it. It\n      // only works for the `insertText` input type.\n      if (!HAS_BEFORE_INPUT_SUPPORT && !readOnly && !isEventHandled(event, attributes.onBeforeInput) && hasEditableTarget(editor, event.target)) {\n        event.preventDefault();\n        if (!ReactEditor.isComposing(editor)) {\n          var _text2 = event.data;\n          Editor.insertText(editor, _text2);\n        }\n      }\n    }, [readOnly]),\n    onInput: useCallback(event => {\n      if (androidInputManager) {\n        androidInputManager.handleInput();\n        return;\n      } // Flush native operations, as native events will have propogated\n      // and we can correctly compare DOM text values in components\n      // to stop rendering, so that browser functions like autocorrect\n      // and spellcheck work as expected.\n\n      for (var op of deferredOperations.current) {\n        op();\n      }\n      deferredOperations.current = [];\n    }, []),\n    onBlur: useCallback(event => {\n      if (readOnly || state.isUpdatingSelection || !hasEditableTarget(editor, event.target) || isEventHandled(event, attributes.onBlur)) {\n        return;\n      } // COMPAT: If the current `activeElement` is still the previous\n      // one, this is due to the window being blurred when the tab\n      // itself becomes unfocused, so we want to abort early to allow to\n      // editor to stay focused when the tab becomes focused again.\n\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n      if (state.latestElement === root.activeElement) {\n        return;\n      }\n      var {\n        relatedTarget\n      } = event;\n      var el = ReactEditor.toDOMNode(editor, editor); // COMPAT: The event should be ignored if the focus is returning\n      // to the editor from an embedded editable element (eg. an <input>\n      // element inside a void node).\n\n      if (relatedTarget === el) {\n        return;\n      } // COMPAT: The event should be ignored if the focus is moving from\n      // the editor to inside a void node's spacer element.\n\n      if (isDOMElement(relatedTarget) && relatedTarget.hasAttribute('data-slate-spacer')) {\n        return;\n      } // COMPAT: The event should be ignored if the focus is moving to a\n      // non- editable section of an element that isn't a void node (eg.\n      // a list item of the check list example).\n\n      if (relatedTarget != null && isDOMNode(relatedTarget) && ReactEditor.hasDOMNode(editor, relatedTarget)) {\n        var node = ReactEditor.toSlateNode(editor, relatedTarget);\n        if (Element$1.isElement(node) && !editor.isVoid(node)) {\n          return;\n        }\n      } // COMPAT: Safari doesn't always remove the selection even if the content-\n      // editable element no longer has focus. Refer to:\n      // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n\n      if (IS_SAFARI) {\n        var domSelection = root.getSelection();\n        domSelection === null || domSelection === void 0 ? void 0 : domSelection.removeAllRanges();\n      }\n      IS_FOCUSED.delete(editor);\n    }, [readOnly, attributes.onBlur]),\n    onClick: useCallback(event => {\n      if (hasTarget(editor, event.target) && !isEventHandled(event, attributes.onClick) && isDOMNode(event.target)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node); // At this time, the Slate document may be arbitrarily different,\n        // because onClick handlers can change the document before we get here.\n        // Therefore we must check that this path actually exists,\n        // and that it still refers to the same node.\n\n        if (!Editor.hasPath(editor, path) || Node.get(editor, path) !== node) {\n          return;\n        }\n        if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n          var blockPath = path;\n          if (!Editor.isBlock(editor, node)) {\n            var _block$;\n            var block = Editor.above(editor, {\n              match: n => Editor.isBlock(editor, n),\n              at: path\n            });\n            blockPath = (_block$ = block === null || block === void 0 ? void 0 : block[1]) !== null && _block$ !== void 0 ? _block$ : path.slice(0, 1);\n          }\n          var range = Editor.range(editor, blockPath);\n          Transforms.select(editor, range);\n          return;\n        }\n        if (readOnly) {\n          return;\n        }\n        var _start = Editor.start(editor, path);\n        var end = Editor.end(editor, path);\n        var startVoid = Editor.void(editor, {\n          at: _start\n        });\n        var endVoid = Editor.void(editor, {\n          at: end\n        });\n        if (startVoid && endVoid && Path.equals(startVoid[1], endVoid[1])) {\n          var _range = Editor.range(editor, _start);\n          Transforms.select(editor, _range);\n        }\n      }\n    }, [readOnly, attributes.onClick]),\n    onCompositionEnd: useCallback(event => {\n      if (hasEditableTarget(editor, event.target)) {\n        if (ReactEditor.isComposing(editor)) {\n          setIsComposing(false);\n          IS_COMPOSING.set(editor, false);\n        }\n        androidInputManager === null || androidInputManager === void 0 ? void 0 : androidInputManager.handleCompositionEnd(event);\n        if (isEventHandled(event, attributes.onCompositionEnd) || IS_ANDROID) {\n          return;\n        } // COMPAT: In Chrome, `beforeinput` events for compositions\n        // aren't correct and never fire the \"insertFromComposition\"\n        // type that we need. So instead, insert whenever a composition\n        // ends since it will already have been committed to the DOM.\n\n        if (!IS_SAFARI && !IS_FIREFOX_LEGACY && !IS_IOS && !IS_QQBROWSER && !IS_WECHATBROWSER && !IS_UC_MOBILE && event.data) {\n          var placeholderMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor);\n          EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor); // Ensure we insert text with the marks the user was actually seeing\n\n          if (placeholderMarks !== undefined) {\n            EDITOR_TO_USER_MARKS.set(editor, editor.marks);\n            editor.marks = placeholderMarks;\n          }\n          Editor.insertText(editor, event.data);\n          var userMarks = EDITOR_TO_USER_MARKS.get(editor);\n          EDITOR_TO_USER_MARKS.delete(editor);\n          if (userMarks !== undefined) {\n            editor.marks = userMarks;\n          }\n        }\n      }\n    }, [attributes.onCompositionEnd]),\n    onCompositionUpdate: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionUpdate)) {\n        if (!ReactEditor.isComposing(editor)) {\n          setIsComposing(true);\n          IS_COMPOSING.set(editor, true);\n        }\n      }\n    }, [attributes.onCompositionUpdate]),\n    onCompositionStart: useCallback(event => {\n      if (hasEditableTarget(editor, event.target)) {\n        androidInputManager === null || androidInputManager === void 0 ? void 0 : androidInputManager.handleCompositionStart(event);\n        if (isEventHandled(event, attributes.onCompositionStart) || IS_ANDROID) {\n          return;\n        }\n        setIsComposing(true);\n        var {\n          selection\n        } = editor;\n        if (selection) {\n          if (Range.isExpanded(selection)) {\n            Editor.deleteFragment(editor);\n            return;\n          }\n          var inline = Editor.above(editor, {\n            match: n => Editor.isInline(editor, n),\n            mode: 'highest'\n          });\n          if (inline) {\n            var [, inlinePath] = inline;\n            if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n              var point = Editor.after(editor, inlinePath);\n              Transforms.setSelection(editor, {\n                anchor: point,\n                focus: point\n              });\n            }\n          }\n        }\n      }\n    }, [attributes.onCompositionStart]),\n    onCopy: useCallback(event => {\n      if (hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCopy)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'copy');\n      }\n    }, [attributes.onCopy]),\n    onCut: useCallback(event => {\n      if (!readOnly && hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onCut)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'cut');\n        var {\n          selection\n        } = editor;\n        if (selection) {\n          if (Range.isExpanded(selection)) {\n            Editor.deleteFragment(editor);\n          } else {\n            var node = Node.parent(editor, selection.anchor.path);\n            if (Editor.isVoid(editor, node)) {\n              Transforms.delete(editor);\n            }\n          }\n        }\n      }\n    }, [readOnly, attributes.onCut]),\n    onDragOver: useCallback(event => {\n      if (hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDragOver)) {\n        // Only when the target is void, call `preventDefault` to signal\n        // that drops are allowed. Editable content is droppable by\n        // default, and calling `preventDefault` hides the cursor.\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        if (Editor.isVoid(editor, node)) {\n          event.preventDefault();\n        }\n      }\n    }, [attributes.onDragOver]),\n    onDragStart: useCallback(event => {\n      if (!readOnly && hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDragStart)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node);\n        var voidMatch = Editor.isVoid(editor, node) || Editor.void(editor, {\n          at: path,\n          voids: true\n        }); // If starting a drag on a void node, make sure it is selected\n        // so that it shows up in the selection's fragment.\n\n        if (voidMatch) {\n          var range = Editor.range(editor, path);\n          Transforms.select(editor, range);\n        }\n        state.isDraggingInternally = true;\n        ReactEditor.setFragmentData(editor, event.dataTransfer, 'drag');\n      }\n    }, [readOnly, attributes.onDragStart]),\n    onDrop: useCallback(event => {\n      if (!readOnly && hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDrop)) {\n        event.preventDefault(); // Keep a reference to the dragged range before updating selection\n\n        var draggedRange = editor.selection; // Find the range where the drop happened\n\n        var range = ReactEditor.findEventRange(editor, event);\n        var data = event.dataTransfer;\n        Transforms.select(editor, range);\n        if (state.isDraggingInternally) {\n          if (draggedRange && !Range.equals(draggedRange, range) && !Editor.void(editor, {\n            at: range,\n            voids: true\n          })) {\n            Transforms.delete(editor, {\n              at: draggedRange\n            });\n          }\n        }\n        ReactEditor.insertData(editor, data); // When dragging from another source into the editor, it's possible\n        // that the current editor does not have focus.\n\n        if (!ReactEditor.isFocused(editor)) {\n          ReactEditor.focus(editor);\n        }\n      }\n      state.isDraggingInternally = false;\n    }, [readOnly, attributes.onDrop]),\n    onDragEnd: useCallback(event => {\n      if (!readOnly && state.isDraggingInternally && attributes.onDragEnd && hasTarget(editor, event.target)) {\n        attributes.onDragEnd(event);\n      } // When dropping on a different droppable element than the current editor,\n      // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n      // Note: `onDragEnd` is only called when `onDrop` is not called\n\n      state.isDraggingInternally = false;\n    }, [readOnly, attributes.onDragEnd]),\n    onFocus: useCallback(event => {\n      if (!readOnly && !state.isUpdatingSelection && hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onFocus)) {\n        var el = ReactEditor.toDOMNode(editor, editor);\n        var root = ReactEditor.findDocumentOrShadowRoot(editor);\n        state.latestElement = root.activeElement; // COMPAT: If the editor has nested editable elements, the focus\n        // can go to them. In Firefox, this must be prevented because it\n        // results in issues with keyboard navigation. (2017/03/30)\n\n        if (IS_FIREFOX && event.target !== el) {\n          el.focus();\n          return;\n        }\n        IS_FOCUSED.set(editor, true);\n      }\n    }, [readOnly, attributes.onFocus]),\n    onKeyDown: useCallback(event => {\n      if (!readOnly && hasEditableTarget(editor, event.target)) {\n        androidInputManager === null || androidInputManager === void 0 ? void 0 : androidInputManager.handleKeyDown(event);\n        var {\n          nativeEvent\n        } = event; // COMPAT: The composition end event isn't fired reliably in all browsers,\n        // so we sometimes might end up stuck in a composition state even though we\n        // aren't composing any more.\n\n        if (ReactEditor.isComposing(editor) && nativeEvent.isComposing === false) {\n          IS_COMPOSING.set(editor, false);\n          setIsComposing(false);\n        }\n        if (isEventHandled(event, attributes.onKeyDown) || ReactEditor.isComposing(editor)) {\n          return;\n        }\n        var {\n          selection\n        } = editor;\n        var element = editor.children[selection !== null ? selection.focus.path[0] : 0];\n        var isRTL = getDirection(Node.string(element)) === 'rtl'; // COMPAT: Since we prevent the default behavior on\n        // `beforeinput` events, the browser doesn't think there's ever\n        // any history stack to undo or redo, so we have to manage these\n        // hotkeys ourselves. (2019/11/06)\n\n        if (Hotkeys.isRedo(nativeEvent)) {\n          event.preventDefault();\n          var maybeHistoryEditor = editor;\n          if (typeof maybeHistoryEditor.redo === 'function') {\n            maybeHistoryEditor.redo();\n          }\n          return;\n        }\n        if (Hotkeys.isUndo(nativeEvent)) {\n          event.preventDefault();\n          var _maybeHistoryEditor = editor;\n          if (typeof _maybeHistoryEditor.undo === 'function') {\n            _maybeHistoryEditor.undo();\n          }\n          return;\n        } // COMPAT: Certain browsers don't handle the selection updates\n        // properly. In Chrome, the selection isn't properly extended.\n        // And in Firefox, the selection isn't properly collapsed.\n        // (2017/10/17)\n\n        if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            reverse: true\n          });\n          return;\n        }\n        if (Hotkeys.isMoveLineForward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line'\n          });\n          return;\n        }\n        if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            edge: 'focus',\n            reverse: true\n          });\n          return;\n        }\n        if (Hotkeys.isExtendLineForward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            edge: 'focus'\n          });\n          return;\n        } // COMPAT: If a void node is selected, or a zero-width text node\n        // adjacent to an inline is selected, we need to handle these\n        // hotkeys manually because browsers won't be able to skip over\n        // the void node with the zero-width space not being an empty\n        // string.\n\n        if (Hotkeys.isMoveBackward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isCollapsed(selection)) {\n            Transforms.move(editor, {\n              reverse: !isRTL\n            });\n          } else {\n            Transforms.collapse(editor, {\n              edge: 'start'\n            });\n          }\n          return;\n        }\n        if (Hotkeys.isMoveForward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isCollapsed(selection)) {\n            Transforms.move(editor, {\n              reverse: isRTL\n            });\n          } else {\n            Transforms.collapse(editor, {\n              edge: 'end'\n            });\n          }\n          return;\n        }\n        if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isExpanded(selection)) {\n            Transforms.collapse(editor, {\n              edge: 'focus'\n            });\n          }\n          Transforms.move(editor, {\n            unit: 'word',\n            reverse: !isRTL\n          });\n          return;\n        }\n        if (Hotkeys.isMoveWordForward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isExpanded(selection)) {\n            Transforms.collapse(editor, {\n              edge: 'focus'\n            });\n          }\n          Transforms.move(editor, {\n            unit: 'word',\n            reverse: isRTL\n          });\n          return;\n        } // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n        // fall back to guessing at the input intention for hotkeys.\n        // COMPAT: In iOS, some of these hotkeys are handled in the\n\n        if (!HAS_BEFORE_INPUT_SUPPORT) {\n          // We don't have a core behavior for these, but they change the\n          // DOM if we don't prevent them, so we have to.\n          if (Hotkeys.isBold(nativeEvent) || Hotkeys.isItalic(nativeEvent) || Hotkeys.isTransposeCharacter(nativeEvent)) {\n            event.preventDefault();\n            return;\n          }\n          if (Hotkeys.isSoftBreak(nativeEvent)) {\n            event.preventDefault();\n            Editor.insertSoftBreak(editor);\n            return;\n          }\n          if (Hotkeys.isSplitBlock(nativeEvent)) {\n            event.preventDefault();\n            Editor.insertBreak(editor);\n            return;\n          }\n          if (Hotkeys.isDeleteBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor);\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor);\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor, {\n                unit: 'line'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor, {\n                unit: 'line'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor, {\n                unit: 'word'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor, {\n                unit: 'word'\n              });\n            }\n            return;\n          }\n        } else {\n          if (IS_CHROME || IS_SAFARI) {\n            // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n            // an event when deleting backwards in a selected void inline node\n            if (selection && (Hotkeys.isDeleteBackward(nativeEvent) || Hotkeys.isDeleteForward(nativeEvent)) && Range.isCollapsed(selection)) {\n              var currentNode = Node.parent(editor, selection.anchor.path);\n              if (Element$1.isElement(currentNode) && Editor.isVoid(editor, currentNode) && (Editor.isInline(editor, currentNode) || Editor.isBlock(editor, currentNode))) {\n                event.preventDefault();\n                Editor.deleteBackward(editor, {\n                  unit: 'block'\n                });\n                return;\n              }\n            }\n          }\n        }\n      }\n    }, [readOnly, attributes.onKeyDown]),\n    onPaste: useCallback(event => {\n      if (!readOnly && hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onPaste)) {\n        // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n        // fall back to React's `onPaste` here instead.\n        // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n        // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n        if (!HAS_BEFORE_INPUT_SUPPORT || isPlainTextOnlyPaste(event.nativeEvent)) {\n          event.preventDefault();\n          ReactEditor.insertData(editor, event.clipboardData);\n        }\n      }\n    }, [readOnly, attributes.onPaste])\n  }), /*#__PURE__*/React.createElement(Children, {\n    decorations: decorations,\n    node: editor,\n    renderElement: renderElement,\n    renderPlaceholder: renderPlaceholder,\n    renderLeaf: renderLeaf,\n    selection: editor.selection\n  })))));\n};\n/**\r\n * The default placeholder element\r\n */\n\nvar DefaultPlaceholder = _ref => {\n  var {\n    attributes,\n    children\n  } = _ref;\n  return /*#__PURE__*/(\n    // COMPAT: Artificially add a line-break to the end on the placeholder element\n    // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n    React.createElement(\"span\", Object.assign({}, attributes), children, IS_ANDROID && /*#__PURE__*/React.createElement(\"br\", null))\n  );\n};\n/**\r\n * A default memoized decorate function.\r\n */\n\nvar defaultDecorate = () => [];\n/**\r\n * A default implement to scroll dom range into view.\r\n */\n\nvar defaultScrollSelectionIntoView = (editor, domRange) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (!editor.selection || editor.selection && Range.isCollapsed(editor.selection)) {\n    var leafEl = domRange.startContainer.parentElement;\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange);\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed'\n    }); // @ts-expect-error an unorthodox delete D:\n\n    delete leafEl.getBoundingClientRect;\n  }\n};\n/**\r\n * Check if the target is in the editor.\r\n */\n\nvar hasTarget = (editor, target) => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target);\n};\n/**\r\n * Check if the target is editable and in the editor.\r\n */\n\nvar hasEditableTarget = (editor, target) => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target, {\n    editable: true\n  });\n};\n/**\r\n * Check if the target is inside void and in an non-readonly editor.\r\n */\n\nvar isTargetInsideNonReadonlyVoid = (editor, target) => {\n  if (IS_READ_ONLY.get(editor)) return false;\n  var slateNode = hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target);\n  return Editor.isVoid(editor, slateNode);\n};\n/**\r\n * Check if an event is overrided by a handler.\r\n */\n\nvar isEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  } // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n\n  var shouldTreatEventAsHandled = handler(event);\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n  return event.isDefaultPrevented() || event.isPropagationStopped();\n};\n/**\r\n * Check if a DOM event is overrided by a handler.\r\n */\n\nvar isDOMEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  } // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n\n  var shouldTreatEventAsHandled = handler(event);\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n  return event.defaultPrevented;\n};\n\n/**\r\n * A React context for sharing the `focused` state of the editor.\r\n */\n\nvar FocusedContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `focused` state of the editor.\r\n */\n\nvar useFocused = () => {\n  return useContext(FocusedContext);\n};\nfunction isError(error) {\n  return error instanceof Error;\n}\n/**\r\n * A React context for sharing the editor selector context in a way to control rerenders\r\n */\n\nvar SlateSelectorContext = /*#__PURE__*/createContext({});\nvar refEquality = (a, b) => a === b;\n/**\r\n * use redux style selectors to prevent rerendering on every keystroke.\r\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\r\n *\r\n * Example:\r\n * ```\r\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\r\n * ```\r\n */\n\nfunction useSlateSelector(selector) {\n  var equalityFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : refEquality;\n  var [, forceRender] = useReducer(s => s + 1, 0);\n  var context = useContext(SlateSelectorContext);\n  if (!context) {\n    throw new Error(\"The `useSlateSelector` hook must be used inside the <Slate> component's context.\");\n  }\n  var {\n    getSlate,\n    addEventListener\n  } = context;\n  var latestSubscriptionCallbackError = useRef();\n  var latestSelector = useRef(() => null);\n  var latestSelectedState = useRef(null);\n  var selectedState;\n  try {\n    if (selector !== latestSelector.current || latestSubscriptionCallbackError.current) {\n      selectedState = selector(getSlate());\n    } else {\n      selectedState = latestSelectedState.current;\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += \"\\nThe error may be correlated with this previous error:\\n\".concat(latestSubscriptionCallbackError.current.stack, \"\\n\\n\");\n    }\n    throw err;\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector;\n    latestSelectedState.current = selectedState;\n    latestSubscriptionCallbackError.current = undefined;\n  });\n  useIsomorphicLayoutEffect(() => {\n    function checkForUpdates() {\n      try {\n        var newSelectedState = latestSelector.current(getSlate());\n        if (equalityFn(newSelectedState, latestSelectedState.current)) {\n          return;\n        }\n        latestSelectedState.current = newSelectedState;\n      } catch (err) {\n        // we ignore all errors here, since when the component\n        // is re-rendered, the selectors are called again, and\n        // will throw again, if neither props nor store state\n        // changed\n        latestSubscriptionCallbackError.current = err;\n      }\n      forceRender();\n    }\n    var unsubscribe = addEventListener(checkForUpdates);\n    checkForUpdates();\n    return () => unsubscribe();\n  },\n  // don't rerender on equalityFn change since we want to be able to define it inline\n  [addEventListener, getSlate]);\n  return selectedState;\n}\n/**\r\n * Create selector context with editor updating on every editor change\r\n */\n\nfunction getSelectorContext(editor) {\n  var eventListeners = useRef([]).current;\n  var slateRef = useRef({\n    editor\n  }).current;\n  var onChange = useCallback(editor => {\n    slateRef.editor = editor;\n    eventListeners.forEach(listener => listener(editor));\n  }, []);\n  var selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: callback => {\n        eventListeners.push(callback);\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1);\n        };\n      }\n    };\n  }, [eventListeners, slateRef]);\n  return {\n    selectorContext,\n    onChange\n  };\n}\nvar _excluded = [\"editor\", \"children\", \"onChange\", \"value\"];\n/**\r\n * A wrapper around the provider to handle `onChange` events, because the editor\r\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\r\n */\n\nvar Slate = props => {\n  var {\n      editor,\n      children,\n      onChange,\n      value\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  var unmountRef = useRef(false);\n  var [context, setContext] = React.useState(() => {\n    if (!Node.isNodeList(value)) {\n      throw new Error(\"[Slate] value is invalid! Expected a list of elements\" + \"but got: \".concat(Scrubber.stringify(value)));\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\"[Slate] editor is invalid! you passed:\" + \"\".concat(Scrubber.stringify(editor)));\n    }\n    editor.children = value;\n    Object.assign(editor, rest);\n    return {\n      v: 0,\n      editor\n    };\n  });\n  var {\n    selectorContext,\n    onChange: handleSelectorChange\n  } = getSelectorContext(editor);\n  var onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children);\n    }\n    setContext(prevContext => ({\n      v: prevContext.v + 1,\n      editor\n    }));\n    handleSelectorChange(editor);\n  }, [onChange]);\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange);\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {});\n      unmountRef.current = true;\n    };\n  }, []);\n  var [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor));\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor));\n  });\n  useIsomorphicLayoutEffect(() => {\n    var fn = () => setIsFocused(ReactEditor.isFocused(editor));\n    if (IS_REACT_VERSION_17_OR_ABOVE) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn);\n      document.addEventListener('focusout', fn);\n      return () => {\n        document.removeEventListener('focusin', fn);\n        document.removeEventListener('focusout', fn);\n      };\n    } else {\n      document.addEventListener('focus', fn, true);\n      document.addEventListener('blur', fn, true);\n      return () => {\n        document.removeEventListener('focus', fn, true);\n        document.removeEventListener('blur', fn, true);\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(SlateSelectorContext.Provider, {\n    value: selectorContext\n  }, /*#__PURE__*/React.createElement(SlateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(EditorContext.Provider, {\n    value: context.editor\n  }, /*#__PURE__*/React.createElement(FocusedContext.Provider, {\n    value: isFocused\n  }, children))));\n};\n\n/**\r\n * Get the current editor object from the React context.\r\n * @deprecated Use useSlateStatic instead.\r\n */\n\nvar useEditor = () => {\n  var editor = useContext(EditorContext);\n  if (!editor) {\n    throw new Error(\"The `useEditor` hook must be used inside the <Slate> component's context.\");\n  }\n  return editor;\n};\n\n/**\r\n * Get the current slate selection.\r\n * Only triggers a rerender when the selection actually changes\r\n */\n\nvar useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual);\n};\nvar isSelectionEqual = (a, b) => {\n  if (!a && !b) return true;\n  if (!a || !b) return false;\n  return Range.equals(a, b);\n};\n\n/**\r\n * Utilities for single-line deletion\r\n */\n\nvar doRectsIntersect = (rect, compareRect) => {\n  var middle = (compareRect.top + compareRect.bottom) / 2;\n  return rect.top <= middle && rect.bottom >= middle;\n};\nvar areRangesSameLine = (editor, range1, range2) => {\n  var rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect();\n  var rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect();\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1);\n};\n/**\r\n * A helper utility that returns the end portion of a `Range`\r\n * which is located on a single line.\r\n *\r\n * @param {Editor} editor The editor object to compare against\r\n * @param {Range} parentRange The parent range to compare against\r\n * @returns {Range} A valid portion of the parentRange which is one a single line\r\n */\n\nvar findCurrentLineRange = (editor, parentRange) => {\n  var parentRangeBoundary = Editor.range(editor, Range.end(parentRange));\n  var positions = Array.from(Editor.positions(editor, {\n    at: parentRange\n  }));\n  var left = 0;\n  var right = positions.length;\n  var middle = Math.floor(right / 2);\n  if (areRangesSameLine(editor, Editor.range(editor, positions[left]), parentRangeBoundary)) {\n    return Editor.range(editor, positions[left], parentRangeBoundary);\n  }\n  if (positions.length < 2) {\n    return Editor.range(editor, positions[positions.length - 1], parentRangeBoundary);\n  }\n  while (middle !== positions.length && middle !== left) {\n    if (areRangesSameLine(editor, Editor.range(editor, positions[middle]), parentRangeBoundary)) {\n      right = middle;\n    } else {\n      left = middle;\n    }\n    middle = Math.floor((left + right) / 2);\n  }\n  return Editor.range(editor, positions[right], parentRangeBoundary);\n};\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n/**\r\n * `withReact` adds React and DOM specific behaviors to the editor.\r\n *\r\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\r\n * this plugin.\r\n *\r\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\r\n */\n\nvar withReact = editor => {\n  var e = editor;\n  var {\n    apply,\n    onChange,\n    deleteBackward,\n    addMark,\n    removeMark\n  } = e; // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap());\n  e.addMark = (key, value) => {\n    var _EDITOR_TO_SCHEDULE_F, _EDITOR_TO_PENDING_DI;\n    (_EDITOR_TO_SCHEDULE_F = EDITOR_TO_SCHEDULE_FLUSH.get(e)) === null || _EDITOR_TO_SCHEDULE_F === void 0 ? void 0 : _EDITOR_TO_SCHEDULE_F();\n    if (!EDITOR_TO_PENDING_INSERTION_MARKS.get(e) && (_EDITOR_TO_PENDING_DI = EDITOR_TO_PENDING_DIFFS.get(e)) !== null && _EDITOR_TO_PENDING_DI !== void 0 && _EDITOR_TO_PENDING_DI.length) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null);\n    }\n    EDITOR_TO_USER_MARKS.delete(e);\n    addMark(key, value);\n  };\n  e.removeMark = key => {\n    var _EDITOR_TO_PENDING_DI2;\n    if (!EDITOR_TO_PENDING_INSERTION_MARKS.get(e) && (_EDITOR_TO_PENDING_DI2 = EDITOR_TO_PENDING_DIFFS.get(e)) !== null && _EDITOR_TO_PENDING_DI2 !== void 0 && _EDITOR_TO_PENDING_DI2.length) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null);\n    }\n    EDITOR_TO_USER_MARKS.delete(e);\n    removeMark(key);\n  };\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit);\n    }\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      var parentBlockEntry = Editor.above(e, {\n        match: n => Editor.isBlock(e, n),\n        at: e.selection\n      });\n      if (parentBlockEntry) {\n        var [, parentBlockPath] = parentBlockEntry;\n        var parentElementRange = Editor.range(e, parentBlockPath, e.selection.anchor);\n        var currentLineRange = findCurrentLineRange(e, parentElementRange);\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, {\n            at: currentLineRange\n          });\n        }\n      }\n    }\n  }; // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n\n  e.apply = op => {\n    var matches = [];\n    var pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e);\n    if (pendingDiffs !== null && pendingDiffs !== void 0 && pendingDiffs.length) {\n      var transformed = pendingDiffs.map(textDiff => transformTextDiff(textDiff, op)).filter(Boolean);\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed);\n    }\n    var pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e);\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(e, transformPendingRange(e, pendingSelection, op));\n    }\n    var pendingAction = EDITOR_TO_PENDING_ACTION.get(e);\n    if (pendingAction !== null && pendingAction !== void 0 && pendingAction.at) {\n      var at = Point.isPoint(pendingAction === null || pendingAction === void 0 ? void 0 : pendingAction.at) ? transformPendingPoint(e, pendingAction.at, op) : transformPendingRange(e, pendingAction.at, op);\n      EDITOR_TO_PENDING_ACTION.set(e, at ? _objectSpread(_objectSpread({}, pendingAction), {}, {\n        at\n      }) : null);\n    }\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node':\n        {\n          matches.push(...getMatches(e, op.path));\n          break;\n        }\n      case 'set_selection':\n        {\n          var _EDITOR_TO_USER_SELEC;\n\n          // Selection was manually set, don't restore the user selection after the change.\n          (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(e)) === null || _EDITOR_TO_USER_SELEC === void 0 ? void 0 : _EDITOR_TO_USER_SELEC.unref();\n          EDITOR_TO_USER_SELECTION.delete(e);\n          break;\n        }\n      case 'insert_node':\n      case 'remove_node':\n        {\n          matches.push(...getMatches(e, Path.parent(op.path)));\n          break;\n        }\n      case 'merge_node':\n        {\n          var prevPath = Path.previous(op.path);\n          matches.push(...getMatches(e, prevPath));\n          break;\n        }\n      case 'move_node':\n        {\n          var commonPath = Path.common(Path.parent(op.path), Path.parent(op.newPath));\n          matches.push(...getMatches(e, commonPath));\n          break;\n        }\n    }\n    apply(op);\n    for (var [path, key] of matches) {\n      var [node] = Editor.node(e, path);\n      NODE_TO_KEY.set(node, key);\n    }\n  };\n  e.setFragmentData = data => {\n    var {\n      selection\n    } = e;\n    if (!selection) {\n      return;\n    }\n    var [start, end] = Range.edges(selection);\n    var startVoid = Editor.void(e, {\n      at: start.path\n    });\n    var endVoid = Editor.void(e, {\n      at: end.path\n    });\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return;\n    } // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n\n    var domRange = ReactEditor.toDOMRange(e, selection);\n    var contents = domRange.cloneContents();\n    var attach = contents.childNodes[0]; // Make sure attach is non-empty, since empty nodes will not get copied.\n\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node;\n      }\n    }); // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n\n    if (endVoid) {\n      var [voidNode] = endVoid;\n      var r = domRange.cloneRange();\n      var domNode = ReactEditor.toDOMNode(e, voidNode);\n      r.setEndAfter(domNode);\n      contents = r.cloneContents();\n    } // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]');\n    } // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(zw => {\n      var isNewline = zw.getAttribute('data-slate-zero-width') === 'n';\n      zw.textContent = isNewline ? '\\n' : '';\n    }); // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n\n    if (isDOMText(attach)) {\n      var span = attach.ownerDocument.createElement('span'); // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n\n      span.style.whiteSpace = 'pre';\n      span.appendChild(attach);\n      contents.appendChild(span);\n      attach = span;\n    }\n    var fragment = e.getFragment();\n    var string = JSON.stringify(fragment);\n    var encoded = window.btoa(encodeURIComponent(string));\n    attach.setAttribute('data-slate-fragment', encoded);\n    data.setData('application/x-slate-fragment', encoded); // Add the content to a <div> so that we can get its inner HTML.\n\n    var div = contents.ownerDocument.createElement('div');\n    div.appendChild(contents);\n    div.setAttribute('hidden', 'true');\n    contents.ownerDocument.body.appendChild(div);\n    data.setData('text/html', div.innerHTML);\n    data.setData('text/plain', getPlainText(div));\n    contents.ownerDocument.body.removeChild(div);\n    return data;\n  };\n  e.insertData = data => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data);\n    }\n  };\n  e.insertFragmentData = data => {\n    /**\r\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\r\n     */\n    var fragment = data.getData('application/x-slate-fragment') || getSlateFragmentAttribute(data);\n    if (fragment) {\n      var decoded = decodeURIComponent(window.atob(fragment));\n      var parsed = JSON.parse(decoded);\n      e.insertFragment(parsed);\n      return true;\n    }\n    return false;\n  };\n  e.insertTextData = data => {\n    var text = data.getData('text/plain');\n    if (text) {\n      var lines = text.split(/\\r\\n|\\r|\\n/);\n      var split = false;\n      for (var line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, {\n            always: true\n          });\n        }\n        e.insertText(line);\n        split = true;\n      }\n      return true;\n    }\n    return false;\n  };\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      var onContextChange = EDITOR_TO_ON_CHANGE.get(e);\n      if (onContextChange) {\n        onContextChange();\n      }\n      onChange();\n    });\n  };\n  return e;\n};\nvar getMatches = (e, path) => {\n  var matches = [];\n  for (var [n, p] of Editor.levels(e, {\n    at: path\n  })) {\n    var key = ReactEditor.findKey(e, n);\n    matches.push([p, key]);\n  }\n  return matches;\n};\nexport { DefaultElement, DefaultLeaf, DefaultPlaceholder, Editable, ReactEditor, Slate, useEditor, useFocused, useReadOnly, useSelected, useSlate, useSlateSelection, useSlateSelector, useSlateStatic, useSlateWithV, withReact };","map":{"version":3,"mappings":";;;;;;;;AAAe,SAASA,eAAe,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EACvD,IAAID,GAAG,IAAID,GAAG,EAAE;IACdG,MAAM,CAACC,cAAc,CAACJ,GAAG,EAAEC,GAAG,EAAE;MAC9BC,KAAK,EAAEA,KAAK;MACZG,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE;IAChB,CAAK,CAAC;EACN,CAAG,MAAM;IACLP,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;EACpB;EAEE,OAAOF,GAAG;AACZ;ACbe,SAASQ,6BAA6B,CAACC,MAAM,EAAEC,QAAQ,EAAE;EACtE,IAAID,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE;EAC7B,IAAIE,MAAM,GAAG,EAAE;EACf,IAAIC,UAAU,GAAGT,MAAM,CAACU,IAAI,CAACJ,MAAM,CAAC;EACpC,IAAIR,GAAG,EAAEa,CAAC;EAEV,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACtCb,GAAG,GAAGW,UAAU,CAACE,CAAC,CAAC;IACnB,IAAIJ,QAAQ,CAACM,OAAO,CAACf,GAAG,CAAC,IAAI,CAAC,EAAE;IAChCU,MAAM,CAACV,GAAG,CAAC,GAAGQ,MAAM,CAACR,GAAG,CAAC;EAC7B;EAEE,OAAOU,MAAM;AACf;ACZe,SAASM,wBAAwB,CAACR,MAAM,EAAEC,QAAQ,EAAE;EACjE,IAAID,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE;EAC7B,IAAIE,MAAM,GAAGO,6BAA4B,CAACT,MAAM,EAAEC,QAAQ,CAAC;EAC3D,IAAIT,GAAG,EAAEa,CAAC;EAEV,IAAIX,MAAM,CAACgB,qBAAqB,EAAE;IAChC,IAAIC,gBAAgB,GAAGjB,MAAM,CAACgB,qBAAqB,CAACV,MAAM,CAAC;IAE3D,KAAKK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,gBAAgB,CAACL,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5Cb,GAAG,GAAGmB,gBAAgB,CAACN,CAAC,CAAC;MACzB,IAAIJ,QAAQ,CAACM,OAAO,CAACf,GAAG,CAAC,IAAI,CAAC,EAAE;MAChC,IAAI,CAACE,MAAM,CAACkB,SAAS,CAACC,oBAAoB,CAACC,IAAI,CAACd,MAAM,EAAER,GAAG,CAAC,EAAE;MAC9DU,MAAM,CAACV,GAAG,CAAC,GAAGQ,MAAM,CAACR,GAAG,CAAC;IAC/B;EACA;EAEE,OAAOU,MAAM;AACf;;AClBA;;;AAIA,IAAIa,CAAC,GAAG,CAAR;AAEA;;;;;MAKaC;EAGXC;IACE,KAAKC,EAAL,aAAaH,CAAC,EAAd;EACD;;;ACXH;;;;AAKO,IAAMI,aAAa,GAA0B,IAAIC,OAAJ,EAA7C;AACA,IAAMC,cAAc,GAA4B,IAAID,OAAJ,EAAhD;AAEP;;;;;AAIO,IAAME,gBAAgB,GAA4B,IAAIF,OAAJ,EAAlD;AACA,IAAMG,iBAAiB,GAAiC,IAAIH,OAAJ,EAAxD;AAEA,IAAMI,6BAA6B,GAGtC,IAAIJ,OAAJ,EAHG;AAIA,IAAMK,eAAe,GAA+B,IAAIL,OAAJ,EAApD;AACA,IAAMM,eAAe,GAA+B,IAAIN,OAAJ,EAApD;AACA,IAAMO,WAAW,GAAuB,IAAIP,OAAJ,EAAxC;AACA,IAAMQ,wBAAwB,GAGjC,IAAIR,OAAJ,EAHG;AAKP;;;;AAIO,IAAMS,YAAY,GAA6B,IAAIT,OAAJ,EAA/C;AACA,IAAMU,UAAU,GAA6B,IAAIV,OAAJ,EAA7C;AAGA,IAAMW,YAAY,GAA6B,IAAIX,OAAJ,EAA/C;AAEA,IAAMY,wBAAwB,GAGjC,IAAIZ,OAAJ,EAHG;AAKP;;;;AAIO,IAAMa,mBAAmB,GAAG,IAAIb,OAAJ,EAA5B;AAEP;;;;AAIO,IAAMc,wBAAwB,GAGjC,IAAId,OAAJ,EAHG;AAKA,IAAMe,iCAAiC,GAG1C,IAAIf,OAAJ,EAHG;AAKA,IAAMgB,oBAAoB,GAG7B,IAAIhB,OAAJ,EAHG;AAKP;;;;AAIO,IAAMiB,uBAAuB,GAGhC,IAAIjB,OAAJ,EAHG;AAKA,IAAMkB,wBAAwB,GAGjC,IAAIlB,OAAJ,EAHG;AAKA,IAAMmB,2BAA2B,GAGpC,IAAInB,OAAJ,EAHG;AAKA,IAAMoB,sBAAsB,GAAgC,IAAIpB,OAAJ,EAA5D;AAEP;;;;AAIO,IAAMqB,kBAAkB,GAAIC,MAAM,CAAC,aAAD,CAAlC;AACA,IAAMC,uBAAuB,GAAID,MAAM,CAC5C,kBAD4C,CAAvC;;AClGP;;;AAUA,IAAOE,OAAO,GAAGC,UAAU,CAACC,IAA5B;AA0BA;;;;AAIO,IAAMC,cAAc,GAAItD,KAAD;EAC5B,OACGA,KAAK,IAAIA,KAAK,CAACuD,aAAf,IAAgCvD,KAAK,CAACuD,aAAN,CAAoBC,WAArD,IAAqE,IADvE;AAGD,CAJM;AAMP;;;;AAIO,IAAMC,YAAY,GAAIzD,KAAD;EAC1B,OAAO0D,SAAS,CAAC1D,KAAD,CAAT,IAAoBA,KAAK,CAAC2D,QAAN,KAAmB,CAA9C;AACD,CAFM;AAIP;;;;AAIO,IAAMC,YAAY,GAAI5D,KAAD;EAC1B,OAAO0D,SAAS,CAAC1D,KAAD,CAAT,IAAoBA,KAAK,CAAC2D,QAAN,KAAmB,CAA9C;AACD,CAFM;AAIP;;;;AAIO,IAAMD,SAAS,GAAI1D,KAAD;EACvB,IAAM6D,MAAM,GAAGP,cAAc,CAACtD,KAAD,CAA7B;EACA,OAAO,CAAC,CAAC6D,MAAF,IAAY7D,KAAK,YAAY6D,MAAM,CAACC,IAA3C;AACD,CAHM;AAKP;;;;AAIO,IAAMC,cAAc,GAAI/D,KAAD;EAC5B,IAAM6D,MAAM,GAAG7D,KAAK,IAAIA,KAAK,CAACgE,UAAf,IAA6BV,cAAc,CAACtD,KAAK,CAACgE,UAAP,CAA1D;EACA,OAAO,CAAC,CAACH,MAAF,IAAY7D,KAAK,YAAY6D,MAAM,CAACI,SAA3C;AACD,CAHM;AAKP;;;;AAIO,IAAMC,SAAS,GAAIlE,KAAD;EACvB,OAAO0D,SAAS,CAAC1D,KAAD,CAAT,IAAoBA,KAAK,CAAC2D,QAAN,KAAmB,CAA9C;AACD,CAFM;AAIP;;;;AAIO,IAAMQ,oBAAoB,GAAIC,KAAD;EAClC,OACEA,KAAK,CAACC,aAAN,IACAD,KAAK,CAACC,aAAN,CAAoBC,OAApB,CAA4B,YAA5B,MAA8C,EAD9C,IAEAF,KAAK,CAACC,aAAN,CAAoBE,KAApB,CAA0B1D,MAA1B,KAAqC,CAHvC;AAKD,CANM;AAQP;;;;AAIO,IAAM2D,iBAAiB,GAAIC,QAAD;EAC/B,IAAI,CAACC,IAAD,EAAOC,MAAP,IAAiBF,QAArB;EAGA;;EACA,IAAIb,YAAY,CAACc,IAAD,CAAZ,IAAsBA,IAAI,CAACE,UAAL,CAAgB/D,MAA1C,EAAkD;IAChD,IAAIgE,MAAM,GAAGF,MAAM,KAAKD,IAAI,CAACE,UAAL,CAAgB/D,MAAxC;IACA,IAAIiE,KAAK,GAAGD,MAAM,GAAGF,MAAM,GAAG,CAAZ,GAAgBA,MAAlC;IACC,CAACD,IAAD,EAAOI,KAAP,IAAgBC,wBAAwB,CACvCL,IADuC,EAEvCI,KAFuC,EAGvCD,MAAM,GAAG,UAAH,GAAgB,SAHiB,CAAxC,CAH+C;;IAShDA,MAAM,GAAGC,KAAK,GAAGH,MAAjB,CATgD;IAYhD;;IACA,OAAOf,YAAY,CAACc,IAAD,CAAZ,IAAsBA,IAAI,CAACE,UAAL,CAAgB/D,MAA7C,EAAqD;MACnD,IAAMD,CAAC,GAAGiE,MAAM,GAAGH,IAAI,CAACE,UAAL,CAAgB/D,MAAhB,GAAyB,CAA5B,GAAgC,CAAhD;MACA6D,IAAI,GAAGM,gBAAgB,CAACN,IAAD,EAAO9D,CAAP,EAAUiE,MAAM,GAAG,UAAH,GAAgB,SAAhC,CAAvB;IACD,CAhB+C;;IAmBhDF,MAAM,GAAGE,MAAM,IAAIH,IAAI,CAACO,WAAL,IAAoB,IAA9B,GAAqCP,IAAI,CAACO,WAAL,CAAiBpE,MAAtD,GAA+D,CAAxE;EACD;;EAGD,OAAO,CAAC6D,IAAD,EAAOC,MAAP,CAAP;AACD,CA7BM;AA+BP;;;;AAIO,IAAMO,aAAa,GAAG;EAC3B,OAAO,CAAC,EACNrB,MAAM,CAACsB,QAAP,CAAgBC,aAAhB,IAAiCvB,MAAM,CAACsB,QAAP,CAAgBC,aAAhB,CAA8BC,UADzD,CAAR;AAGD,CAJM;AAMP;;;;;AAKO,IAAMN,wBAAwB,GAAG,CACtCO,MADsC,EAEtCR,KAFsC,EAGtCS,SAHsC;EAKtC,IAAM;IAAEX;EAAF,IAAiBU,MAAvB;EACA,IAAIE,KAAK,GAAGZ,UAAU,CAACE,KAAD,CAAtB;EACA,IAAIlE,CAAC,GAAGkE,KAAR;EACA,IAAIW,YAAY,GAAG,KAAnB;EACA,IAAIC,aAAa,GAAG,KAApB;EAGA;;EACA,OACEjC,YAAY,CAAC+B,KAAD,CAAZ,IACC5B,YAAY,CAAC4B,KAAD,CAAZ,IAAuBA,KAAK,CAACZ,UAAN,CAAiB/D,MAAjB,KAA4B,CADpD,IAEC+C,YAAY,CAAC4B,KAAD,CAAZ,IAAuBA,KAAK,CAACG,YAAN,CAAmB,iBAAnB,MAA0C,OAHpE,EAIE;IACA,IAAIF,YAAY,IAAIC,aAApB,EAAmC;MACjC;IACD;IAED,IAAI9E,CAAC,IAAIgE,UAAU,CAAC/D,MAApB,EAA4B;MAC1B4E,YAAY,GAAG,IAAf;MACA7E,CAAC,GAAGkE,KAAK,GAAG,CAAZ;MACAS,SAAS,GAAG,UAAZ;MACA;IACD;IAED,IAAI3E,CAAC,GAAG,CAAR,EAAW;MACT8E,aAAa,GAAG,IAAhB;MACA9E,CAAC,GAAGkE,KAAK,GAAG,CAAZ;MACAS,SAAS,GAAG,SAAZ;MACA;IACD;IAEDC,KAAK,GAAGZ,UAAU,CAAChE,CAAD,CAAlB;IACAkE,KAAK,GAAGlE,CAAR;IACAA,CAAC,IAAI2E,SAAS,KAAK,SAAd,GAA0B,CAA1B,GAA8B,CAAC,CAApC;EACD;EAED,OAAO,CAACC,KAAD,EAAQV,KAAR,CAAP;AACD,CA1CM;AA4CP;;;;;AAKO,IAAME,gBAAgB,GAAG,CAC9BM,MAD8B,EAE9BR,KAF8B,EAG9BS,SAH8B;EAK9B,IAAM,CAACC,KAAD,IAAUT,wBAAwB,CAACO,MAAD,EAASR,KAAT,EAAgBS,SAAhB,CAAxC;EACA,OAAOC,KAAP;AACD,CAPM;AASP;;;;;;;AAOO,IAAMI,YAAY,GAAIC,OAAD;EAC1B,IAAIC,IAAI,GAAG,EAAX;EAEA,IAAI5B,SAAS,CAAC2B,OAAD,CAAT,IAAsBA,OAAO,CAACE,SAAlC,EAA6C;IAC3C,OAAOF,OAAO,CAACE,SAAf;EACD;EAED,IAAInC,YAAY,CAACiC,OAAD,CAAhB,EAA2B;IACzB,KAAK,IAAMG,SAAX,IAAwBC,KAAK,CAACC,IAAN,CAAWL,OAAO,CAACjB,UAAnB,CAAxB,EAAwD;MACtDkB,IAAI,IAAIF,YAAY,CAACI,SAAD,CAApB;IACD;IAED,IAAMG,OAAO,GAAGC,gBAAgB,CAACP,OAAD,CAAhB,CAA0BQ,gBAA1B,CAA2C,SAA3C,CAAhB;IAEA,IAAIF,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,MAAnC,IAA6CN,OAAO,CAACS,OAAR,KAAoB,IAArE,EAA2E;MACzER,IAAI,IAAI,IAAR;IACD;EACF;EAED,OAAOA,IAAP;AACD,CApBM;AAsBP;;;;AAGA,IAAMS,kBAAkB,GAAG,8BAA3B;AACO,IAAMC,yBAAyB,GACpCC,YADuC;EAGvC,IAAMC,QAAQ,GAAGD,YAAY,CAACnC,OAAb,CAAqB,WAArB,CAAjB;EACA,IAAM,GAAGqC,QAAH,IAAeD,QAAQ,CAACE,KAAT,CAAeL,kBAAf,KAAsC,EAA3D;EACA,OAAOI,QAAP;AACD,CANM;AA2BP;;;;AAIO,IAAME,iBAAiB,GAAG,CAC/BC,MAD+B,EAE/BC,QAF+B,EAG/BC,KAH+B;EAK/B,IAAM;IAAEvG;EAAF,IAAasG,QAAnB;EACA,IAAInD,YAAY,CAACnD,MAAD,CAAZ,IAAwBA,MAAM,CAACwG,OAAP,CAAe,2BAAf,CAA5B,EAAyE;IACvE,OAAO,KAAP;EACD;EAED,IAAM;IAAE9B;EAAF,IAAe+B,WAAW,CAACC,SAAZ,CAAsBL,MAAtB,CAArB;EACA,IAAI3B,QAAQ,CAACiC,QAAT,CAAkB3G,MAAlB,CAAJ,EAA+B;IAC7B,OAAOyG,WAAW,CAACG,UAAZ,CAAuBP,MAAvB,EAA+BrG,MAA/B,EAAuC;MAAE6G,QAAQ,EAAE;IAAZ,CAAvC,CAAP;EACD;EAED,IAAMC,cAAc,GAAGP,KAAK,CAACQ,IAAN,CAAWC;QAAC;MAAEC,UAAF;MAAcC;IAAd;IACjC,KAAK,IAAMjD,IAAX,IAAmBgD,UAAnB,EAA+B;MAC7B,IAAIhD,IAAI,KAAKjE,MAAT,IAAmBiE,IAAI,CAAC0C,QAAL,CAAc3G,MAAd,CAAvB,EAA8C;QAC5C,OAAO,IAAP;MACD;IACF;IAED,KAAK,IAAMiE,KAAX,IAAmBiD,YAAnB,EAAiC;MAC/B,IAAIjD,KAAI,KAAKjE,MAAT,IAAmBiE,KAAI,CAAC0C,QAAL,CAAc3G,MAAd,CAAvB,EAA8C;QAC5C,OAAO,IAAP;MACD;IACF;EACF,CAZsB,CAAvB;EAcA,IAAI,CAAC8G,cAAD,IAAmBA,cAAc,KAAKR,QAA1C,EAAoD;IAClD,OAAO,KAAP;EACD;;EAGD,OAAOF,iBAAiB,CAACC,MAAD,EAASS,cAAT,EAAyBP,KAAzB,CAAxB;AACD,CAnCM;AC9QA,IAAMY,4BAA4B,GACvCC,QAAQ,CAACC,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAAR,IAA6C,EADxC;AAGA,IAAMC,MAAM,GACjB,OAAOC,SAAP,KAAqB,WAArB,IACA,OAAOrE,MAAP,KAAkB,WADlB,IAEA,mBAAmBsE,IAAnB,CAAwBD,SAAS,CAACE,SAAlC,CAFA,IAGA,CAACvE,MAAM,CAACwE,QAJH;AAMA,IAAMC,QAAQ,GACnB,OAAOJ,SAAP,KAAqB,WAArB,IAAoC,WAAWC,IAAX,CAAgBD,SAAS,CAACE,SAA1B,CAD/B;AAGA,IAAMG,UAAU,GACrB,OAAOL,SAAP,KAAqB,WAArB,IAAoC,UAAUC,IAAV,CAAeD,SAAS,CAACE,SAAzB,CAD/B;AAGA,IAAMI,UAAU,GACrB,OAAON,SAAP,KAAqB,WAArB,IACA,mCAAmCC,IAAnC,CAAwCD,SAAS,CAACE,SAAlD,CAFK;AAIA,IAAMK,SAAS,GACpB,OAAOP,SAAP,KAAqB,WAArB,IACA,2BAA2BC,IAA3B,CAAgCD,SAAS,CAACE,SAA1C,CAFK;;AAKA,IAAMM,cAAc,GACzB,OAAOR,SAAP,KAAqB,WAArB,IACA,0CAA0CC,IAA1C,CAA+CD,SAAS,CAACE,SAAzD,CAFK;AAIA,IAAMO,SAAS,GACpB,OAAOT,SAAP,KAAqB,WAArB,IAAoC,UAAUC,IAAV,CAAeD,SAAS,CAACE,SAAzB,CAD/B;AAIP;;AACO,IAAMQ,gBAAgB,GAC3B,OAAOV,SAAP,KAAqB,WAArB,IACA,4CAA4CC,IAA5C,CAAiDD,SAAS,CAACE,SAA3D,CAFK;;AAKA,IAAMS,iBAAiB,GAC5B,OAAOX,SAAP,KAAqB,WAArB,IACA,oEAAoEC,IAApE,CACED,SAAS,CAACE,SADZ,CAFK;;AAOA,IAAMU,YAAY,GACvB,OAAOZ,SAAP,KAAqB,WAArB,IAAoC,cAAcC,IAAd,CAAmBD,SAAS,CAACE,SAA7B,CAD/B;;AAIA,IAAMW,YAAY,GACvB,OAAOb,SAAP,KAAqB,WAArB,IAAoC,cAAcC,IAAd,CAAmBD,SAAS,CAACE,SAA7B,CAD/B;;AAIA,IAAMY,gBAAgB,GAC3B,OAAOd,SAAP,KAAqB,WAArB,IAAoC,WAAWC,IAAX,CAAgBD,SAAS,CAACE,SAA1B,CAD/B;AAIP;;AACO,IAAMa,WAAW,GAAG,CAAC,EAC1B,OAAOpF,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACsB,QAAd,KAA2B,WAD3B,IAEA,OAAOtB,MAAM,CAACsB,QAAP,CAAgB+D,aAAvB,KAAyC,WAHf,CAArB;AAOP;;AACO,IAAMC,wBAAwB,GACnC,CAACP,gBAAD,IACA,CAACF,cADD;AAAA;AAGA,OAAOtF,UAAP,KAAsB,WAHtB,IAIAA,UAAU,CAACgG,UAJX;AAAA;AAMA,OAAOhG,UAAU,CAACgG,UAAX,CAAsBjI,SAAtB,CAAgCkI,eAAvC,KAA2D,UAPtD;ICXMnC,WAAW,GAAG;EACzB;;;EAIAoC,WAAW,CAACxC,MAAD;IACT,OAAO,CAAC,CAACxE,YAAY,CAACiH,GAAb,CAAiBzC,MAAjB,CAAT;EACD,CAPwB;EASzB;;;EAIAK,SAAS,CAACL,MAAD;IACP,IAAMjD,MAAM,GAAGhC,gBAAgB,CAAC0H,GAAjB,CAAqBzC,MAArB,CAAf;IACA,IAAI,CAACjD,MAAL,EAAa;MACX,MAAM,IAAI2F,KAAJ,CAAU,sDAAV,CAAN;IACD;IACD,OAAO3F,MAAP;EACD,CAnBwB;EAqBzB;;;EAIA4F,OAAO,CAAC3C,MAAD,EAAsBpC,IAAtB;IACL,IAAI3E,GAAG,GAAGmC,WAAW,CAACqH,GAAZ,CAAgB7E,IAAhB,CAAV;IAEA,IAAI,CAAC3E,GAAL,EAAU;MACRA,GAAG,GAAG,IAAIwB,GAAJ,EAAN;MACAW,WAAW,CAACwH,GAAZ,CAAgBhF,IAAhB,EAAsB3E,GAAtB;IACD;IAED,OAAOA,GAAP;EACD,CAlCwB;EAoCzB;;;EAIA4J,QAAQ,CAAC7C,MAAD,EAAsBpC,IAAtB;IACN,IAAMkF,IAAI,GAAS,EAAnB;IACA,IAAIpE,KAAK,GAAGd,IAAZ;IAEA,OAAO,IAAP,EAAa;MACX,IAAMY,MAAM,GAAG1D,cAAc,CAAC2H,GAAf,CAAmB/D,KAAnB,CAAf;MAEA,IAAIF,MAAM,IAAI,IAAd,EAAoB;QAClB,IAAIuE,MAAM,CAACC,QAAP,CAAgBtE,KAAhB,CAAJ,EAA4B;UAC1B,OAAOoE,IAAP;QACD,CAFD,MAEO;UACL;QACD;MACF;MAED,IAAMhJ,CAAC,GAAGc,aAAa,CAAC6H,GAAd,CAAkB/D,KAAlB,CAAV;MAEA,IAAI5E,CAAC,IAAI,IAAT,EAAe;QACb;MACD;MAEDgJ,IAAI,CAACG,OAAL,CAAanJ,CAAb;MACA4E,KAAK,GAAGF,MAAR;IACD;IAED,MAAM,IAAIkE,KAAJ,mDACuCQ,QAAQ,CAACC,SAAT,CAAmBvF,IAAnB,CADvC,EAAN;EAGD,CApEwB;EAsEzB;;;EAIAwF,wBAAwB,CAACpD,MAAD;IACtB,IAAMqD,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAX;IACA,IAAMuD,IAAI,GAAGF,EAAE,CAACG,WAAH,EAAb;IAEA,IACE,CAACD,IAAI,YAAYE,QAAhB,IAA4BF,IAAI,YAAYG,UAA7C,KACAH,IAAI,CAACI,YAAL,IAAqB,IAFvB,EAGE;MACA,OAAOJ,IAAP;IACD;IAED,OAAOF,EAAE,CAAC5G,aAAV;EACD,CAtFwB;EAwFzB;;;EAIAmH,SAAS,CAAC5D,MAAD;IACP,OAAO,CAAC,CAACzE,UAAU,CAACkH,GAAX,CAAezC,MAAf,CAAT;EACD,CA9FwB;EAgGzB;;;EAIA6D,UAAU,CAAC7D,MAAD;IACR,OAAO,CAAC,CAAC1E,YAAY,CAACmH,GAAb,CAAiBzC,MAAjB,CAAT;EACD,CAtGwB;EAwGzB;;;EAIA8D,IAAI,CAAC9D,MAAD;IACF,IAAMqD,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAX;IACA,IAAMuD,IAAI,GAAGnD,WAAW,CAACgD,wBAAZ,CAAqCpD,MAArC,CAAb;IACAzE,UAAU,CAACqH,GAAX,CAAe5C,MAAf,EAAuB,KAAvB;IAEA,IAAIuD,IAAI,CAACjF,aAAL,KAAuB+E,EAA3B,EAA+B;MAC7BA,EAAE,CAACS,IAAH;IACD;EACF,CApHwB;EAsHzB;;;EAIAC,KAAK,CAAC/D,MAAD;IACH,IAAMqD,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAX;IACA,IAAMuD,IAAI,GAAGnD,WAAW,CAACgD,wBAAZ,CAAqCpD,MAArC,CAAb;IACAzE,UAAU,CAACqH,GAAX,CAAe5C,MAAf,EAAuB,IAAvB;IAEA,IAAIuD,IAAI,CAACjF,aAAL,KAAuB+E,EAA3B,EAA+B;MAC7BA,EAAE,CAACU,KAAH,CAAS;QAAEC,aAAa,EAAE;MAAjB,CAAT;IACD;EACF,CAlIwB;EAoIzB;;;EAIAC,QAAQ,CAACjE,MAAD;IACN,IAAM;MAAEkE;IAAF,IAAgBlE,MAAtB;IACA,IAAMuD,IAAI,GAAGnD,WAAW,CAACgD,wBAAZ,CAAqCpD,MAArC,CAAb;IACA,IAAMmE,YAAY,GAAGZ,IAAI,CAACI,YAAL,EAArB;IAEA,IAAIQ,YAAY,IAAIA,YAAY,CAACC,UAAb,GAA0B,CAA9C,EAAiD;MAC/CD,YAAY,CAACE,eAAb;IACD;IAED,IAAIH,SAAJ,EAAe;MACbI,UAAU,CAACL,QAAX,CAAoBjE,MAApB;IACD;EACF,CApJwB;EAsJzB;;;EAIAO,UAAU,CACRP,MADQ,EAERrG,MAFQ;QAGR4K,8EAAkC;IAElC,IAAM;MAAE/D,QAAQ,GAAG;IAAb,IAAuB+D,OAA7B;IACA,IAAMC,QAAQ,GAAGpE,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAjB;IACA,IAAIyE,QAAJ;IAGA;IACA;IACA;;IACA,IAAI;MACFA,QAAQ,GAAI3H,YAAY,CAACnD,MAAD,CAAZ,GACRA,MADQ,GAERA,MAAM,CAAC+K,aAFX;IAGD,CAJD,CAIE,OAAOC,GAAP,EAAY;MACZ,IACE,CAACA,GAAG,CAACC,OAAJ,CAAYC,QAAZ,CAAqB,iDAArB,CADH,EAEE;QACA,MAAMF,GAAN;MACD;IACF;IAED,IAAI,CAACF,QAAL,EAAe;MACb,OAAO,KAAP;IACD;IAED,OACEA,QAAQ,CAACK,OAAT,4BAA4CN,QAA5C,KACC,CAAChE,QAAD,IAAaiE,QAAQ,CAACM,iBAAtB,GACG,IADH,GAEI,OAAON,QAAQ,CAACM,iBAAhB,KAAsC,SAAtC;IAAA;IACC;IACAN,QAAQ,CAACK,OAAT,CAAiB,2BAAjB,MAAkDN,QAFpD,IAGA,CAAC,CAACC,QAAQ,CAAC5F,YAAT,CAAsB,uBAAtB,CANN,CADF;EASD,CAhMwB;EAkMzB;;;EAIAmG,UAAU,CAAChF,MAAD,EAAsBiF,IAAtB;IACRjF,MAAM,CAACgF,UAAP,CAAkBC,IAAlB;EACD,CAxMwB;EA0MzB;;;EAIAC,kBAAkB,CAAClF,MAAD,EAAsBiF,IAAtB;IAChB,OAAOjF,MAAM,CAACkF,kBAAP,CAA0BD,IAA1B,CAAP;EACD,CAhNwB;EAkNzB;;;EAIAE,cAAc,CAACnF,MAAD,EAAsBiF,IAAtB;IACZ,OAAOjF,MAAM,CAACmF,cAAP,CAAsBF,IAAtB,CAAP;EACD,CAxNwB;EA0NzB;;;EAIAG,eAAe,CACbpF,MADa,EAEbiF,IAFa,EAGbI,WAHa;IAKbrF,MAAM,CAACoF,eAAP,CAAuBH,IAAvB,EAA6BI,WAA7B;EACD,CApOwB;EAsOzB;;;EAIA/B,SAAS,CAACtD,MAAD,EAAsBpC,IAAtB;IACP,IAAM0H,cAAc,GAAGjK,wBAAwB,CAACoH,GAAzB,CAA6BzC,MAA7B,CAAvB;IACA,IAAMjB,OAAO,GAAGgE,MAAM,CAACC,QAAP,CAAgBpF,IAAhB,IACZ5C,iBAAiB,CAACyH,GAAlB,CAAsBzC,MAAtB,CADY,GAEZsF,cAFY,aAEZA,cAFY,uBAEZA,cAAc,CAAE7C,GAAhB,CAAoBrC,WAAW,CAACuC,OAAZ,CAAoB3C,MAApB,EAA4BpC,IAA5B,CAApB,CAFJ;IAIA,IAAI,CAACmB,OAAL,EAAc;MACZ,MAAM,IAAI2D,KAAJ,sDAC0CQ,QAAQ,CAACC,SAAT,CAAmBvF,IAAnB,CAD1C,EAAN;IAGD;IAED,OAAOmB,OAAP;EACD,CAvPwB;EAyPzB;;;EAIAwG,UAAU,CAACvF,MAAD,EAAsBwF,KAAtB;IACR,IAAM,CAAC5H,IAAD,IAASmF,MAAM,CAACnF,IAAP,CAAYoC,MAAZ,EAAoBwF,KAAK,CAAC1C,IAA1B,CAAf;IACA,IAAMO,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BpC,IAA9B,CAAX;IACA,IAAID,QAAJ;IAGA;;IACA,IAAIoF,MAAM,CAAC0C,IAAP,CAAYzF,MAAZ,EAAoB;MAAE0F,EAAE,EAAEF;IAAN,CAApB,CAAJ,EAAwC;MACtCA,KAAK,GAAG;QAAE1C,IAAI,EAAE0C,KAAK,CAAC1C,IAAd;QAAoBjF,MAAM,EAAE;MAA5B,CAAR;IACD;IAGD;IACA;;IACA,IAAM8H,QAAQ,iDAAd;IACA,IAAMC,KAAK,GAAGzG,KAAK,CAACC,IAAN,CAAWiE,EAAE,CAACwC,gBAAH,CAAoBF,QAApB,CAAX,CAAd;IACA,IAAIG,KAAK,GAAG,CAAZ;IAEA,KAAK,IAAIhM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8L,KAAK,CAAC7L,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,IAAMkF,IAAI,GAAG4G,KAAK,CAAC9L,CAAD,CAAlB;MACA,IAAMiF,OAAO,GAAGC,IAAI,CAAClB,UAAL,CAAgB,CAAhB,CAAhB;MAEA,IAAIiB,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACZ,WAAR,IAAuB,IAA9C,EAAoD;QAClD;MACD;MAED,IAAM;QAAEpE;MAAF,IAAagF,OAAO,CAACZ,WAA3B;MACA,IAAM4H,IAAI,GAAG/G,IAAI,CAACH,YAAL,CAAkB,mBAAlB,CAAb;MACA,IAAMmH,UAAU,GAAGD,IAAI,IAAI,IAAR,GAAehM,MAAf,GAAwBgH,QAAQ,CAACgF,IAAD,EAAO,EAAP,CAAnD;MACA,IAAME,GAAG,GAAGH,KAAK,GAAGE,UAApB,CAXqC;MAcrC;;MACA,IAAME,QAAQ,GAAGN,KAAK,CAAC9L,CAAC,GAAG,CAAL,CAAtB;MACA,IACE0L,KAAK,CAAC3H,MAAN,KAAiBoI,GAAjB,IACAC,QADA,aACAA,QADA,eACAA,QAAQ,CAAEC,YAAV,CAAuB,6BAAvB,CAFF,EAGE;QAAA;QACA,IAAMC,OAAO,GAAGF,QAAQ,CAACpI,UAAT,CAAoB,CAApB,CAAhB;QAEAH,QAAQ,GAAG;QAAA;QAET;QACA;QACA;QACA;QACAyI,OAAO,YAAY/J,OAAnB,GAA6B+J,OAA7B,GAAuCF,QAN9B,EAOT,iCAAQ,CAAC/H,WAAT,wEAAsBkI,UAAtB,CAAiC,QAAjC,IAA6C,CAA7C,GAAiD,CAPxC,CAAX;QASA;MACD;MAED,IAAIb,KAAK,CAAC3H,MAAN,IAAgBoI,GAApB,EAAyB;QACvB,IAAMpI,MAAM,GAAGyI,IAAI,CAACC,GAAL,CAASxM,MAAT,EAAiBuM,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYhB,KAAK,CAAC3H,MAAN,GAAeiI,KAA3B,CAAjB,CAAf;QACAnI,QAAQ,GAAG,CAACoB,OAAD,EAAUlB,MAAV,CAAX;QACA;MACD;MAEDiI,KAAK,GAAGG,GAAR;IACD;IAED,IAAI,CAACtI,QAAL,EAAe;MACb,MAAM,IAAI+E,KAAJ,wDAC4CQ,QAAQ,CAACC,SAAT,CAC9CqC,KAD8C,CAD5C,EAAN;IAKD;IAED,OAAO7H,QAAP;EACD,CAnUwB;EAqUzB;;;;;;;;EASA8I,UAAU,CAACzG,MAAD,EAAsB0G,KAAtB;IACR,IAAM;MAAEC,MAAF;MAAU5C;IAAV,IAAoB2C,KAA1B;IACA,IAAME,UAAU,GAAGC,KAAK,CAACD,UAAN,CAAiBF,KAAjB,CAAnB;IACA,IAAMI,SAAS,GAAG1G,WAAW,CAACmF,UAAZ,CAAuBvF,MAAvB,EAA+B2G,MAA/B,CAAlB;IACA,IAAMI,QAAQ,GAAGF,KAAK,CAACG,WAAN,CAAkBN,KAAlB,IACbI,SADa,GAEb1G,WAAW,CAACmF,UAAZ,CAAuBvF,MAAvB,EAA+B+D,KAA/B,CAFJ;IAIA,IAAMhH,MAAM,GAAGqD,WAAW,CAACC,SAAZ,CAAsBL,MAAtB,CAAf;IACA,IAAMiH,QAAQ,GAAGlK,MAAM,CAACsB,QAAP,CAAgB6I,WAAhB,EAAjB;IACA,IAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BR,UAAU,GAAGG,QAAH,GAAcD,SAAzD;IACA,IAAM,CAACO,OAAD,EAAUC,SAAV,IAAuBV,UAAU,GAAGE,SAAH,GAAeC,QAAtD;IAGA;IACA;;IACA,IAAMQ,OAAO,GAAIzK,YAAY,CAACqK,SAAD,CAAZ,GACbA,SADa,GAEbA,SAAS,CAACzC,aAFd;IAGA,IAAM8C,kBAAkB,GAAG,CAAC,CAACD,OAAO,CAAC1I,YAAR,CAAqB,uBAArB,CAA7B;IACA,IAAM4I,KAAK,GAAI3K,YAAY,CAACuK,OAAD,CAAZ,GACXA,OADW,GAEXA,OAAO,CAAC3C,aAFZ;IAGA,IAAMgD,gBAAgB,GAAG,CAAC,CAACD,KAAK,CAAC5I,YAAN,CAAmB,uBAAnB,CAA3B;IAEAoI,QAAQ,CAACU,QAAT,CAAkBR,SAAlB,EAA6BK,kBAAkB,GAAG,CAAH,GAAOJ,WAAtD;IACAH,QAAQ,CAACW,MAAT,CAAgBP,OAAhB,EAAyBK,gBAAgB,GAAG,CAAH,GAAOJ,SAAhD;IACA,OAAOL,QAAP;EACD,CA1WwB;EA4WzB;;;EAIAY,WAAW,CAAC7H,MAAD,EAAsBjB,OAAtB;IACT,IAAI+I,KAAK,GAAGhL,YAAY,CAACiC,OAAD,CAAZ,GAAwBA,OAAxB,GAAkCA,OAAO,CAAC2F,aAAtD;IAEA,IAAIoD,KAAK,IAAI,CAACA,KAAK,CAAC3B,YAAN,CAAmB,iBAAnB,CAAd,EAAqD;MACnD2B,KAAK,GAAGA,KAAK,CAAChD,OAAN,qBAAR;IACD;IAED,IAAMlH,IAAI,GAAGkK,KAAK,GAAG5M,eAAe,CAACuH,GAAhB,CAAoBqF,KAApB,CAAH,GAA+C,IAAjE;IAEA,IAAI,CAAClK,IAAL,EAAW;MACT,MAAM,IAAI8E,KAAJ,sDAAwDoF,KAAxD,EAAN;IACD;IAED,OAAOlK,IAAP;EACD,CA9XwB;EAgYzB;;;EAIAmK,cAAc,CAAC/H,MAAD,EAAsB1C,KAAtB;IACZ,IAAI,iBAAiBA,KAArB,EAA4B;MAC1BA,KAAK,GAAGA,KAAK,CAAC0K,WAAd;IACD;IAED,IAAM;MAAEC,OAAO,EAAEC,CAAX;MAAcC,OAAO,EAAEC,CAAvB;MAA0BzO;IAA1B,IAAqC2D,KAA3C;IAEA,IAAI4K,CAAC,IAAI,IAAL,IAAaE,CAAC,IAAI,IAAtB,EAA4B;MAC1B,MAAM,IAAI1F,KAAJ,0DAA4DpF,KAA5D,EAAN;IACD;IAED,IAAMM,IAAI,GAAGwC,WAAW,CAACyH,WAAZ,CAAwB7H,MAAxB,EAAgC1C,KAAK,CAAC3D,MAAtC,CAAb;IACA,IAAMmJ,IAAI,GAAG1C,WAAW,CAACyC,QAAZ,CAAqB7C,MAArB,EAA6BpC,IAA7B,CAAb;IAGA;IACA;;IACA,IAAImF,MAAM,CAACsF,MAAP,CAAcrI,MAAd,EAAsBpC,IAAtB,CAAJ,EAAiC;MAC/B,IAAM0K,IAAI,GAAG3O,MAAM,CAAC4O,qBAAP,EAAb;MACA,IAAMC,MAAM,GAAGxI,MAAM,CAACyI,QAAP,CAAgB7K,IAAhB,IACXsK,CAAC,GAAGI,IAAI,CAACI,IAAT,GAAgBJ,IAAI,CAACI,IAAL,GAAYJ,IAAI,CAACK,KAAjB,GAAyBT,CAD9B,GAEXE,CAAC,GAAGE,IAAI,CAACM,GAAT,GAAeN,IAAI,CAACM,GAAL,GAAWN,IAAI,CAACO,MAAhB,GAAyBT,CAF5C;MAIA,IAAMU,IAAI,GAAG/F,MAAM,CAACyC,KAAP,CAAaxF,MAAb,EAAqB8C,IAArB,EAA2B;QACtCgG,IAAI,EAAEN,MAAM,GAAG,OAAH,GAAa;MADa,CAA3B,CAAb;MAGA,IAAMhD,KAAK,GAAGgD,MAAM,GAChBzF,MAAM,CAACgG,MAAP,CAAc/I,MAAd,EAAsB8I,IAAtB,CADgB,GAEhB/F,MAAM,CAACiG,KAAP,CAAahJ,MAAb,EAAqB8I,IAArB,CAFJ;MAIA,IAAItD,KAAJ,EAAW;QACT,IAAMkB,MAAK,GAAG3D,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqBwF,KAArB,CAAd;QACA,OAAOkB,MAAP;MACD;IACF;;IAGD,IAAIO,QAAJ;IACA,IAAM;MAAE5I;IAAF,IAAe+B,WAAW,CAACC,SAAZ,CAAsBL,MAAtB,CAArB;;IAGA,IAAI3B,QAAQ,CAAC4K,mBAAb,EAAkC;MAChChC,QAAQ,GAAG5I,QAAQ,CAAC4K,mBAAT,CAA6Bf,CAA7B,EAAgCE,CAAhC,CAAX;IACD,CAFD,MAEO;MACL,IAAMc,QAAQ,GAAG7K,QAAQ,CAAC8K,sBAAT,CAAgCjB,CAAhC,EAAmCE,CAAnC,CAAjB;MAEA,IAAIc,QAAJ,EAAc;QACZjC,QAAQ,GAAG5I,QAAQ,CAAC6I,WAAT,EAAX;QACAD,QAAQ,CAACU,QAAT,CAAkBuB,QAAQ,CAACE,UAA3B,EAAuCF,QAAQ,CAACrL,MAAhD;QACAoJ,QAAQ,CAACW,MAAT,CAAgBsB,QAAQ,CAACE,UAAzB,EAAqCF,QAAQ,CAACrL,MAA9C;MACD;IACF;IAED,IAAI,CAACoJ,QAAL,EAAe;MACb,MAAM,IAAIvE,KAAJ,0DAA4DpF,KAA5D,EAAN;IACD;;IAGD,IAAMoJ,KAAK,GAAGtG,WAAW,CAACiJ,YAAZ,CAAyBrJ,MAAzB,EAAiCiH,QAAjC,EAA2C;MACvDqC,UAAU,EAAE,KAD2C;MAEvDC,aAAa,EAAE;IAFwC,CAA3C,CAAd;IAIA,OAAO7C,KAAP;EACD,CAncwB;EAqczB;;;EAIA8C,YAAY,CACVxJ,MADU,EAEVrC,QAFU,EAGV4G,OAHU;IAQV,IAAM;MAAE+E,UAAF;MAAcC;IAAd,IAAgChF,OAAtC;IACA,IAAM,CAACkF,WAAD,EAAcC,aAAd,IAA+BJ,UAAU,GAC3C3L,QAD2C,GAE3CD,iBAAiB,CAACC,QAAD,CAFrB;IAGA,IAAMgM,UAAU,GAAGF,WAAW,CAACE,UAA/B;IACA,IAAIC,QAAQ,GAAsB,IAAlC;IACA,IAAI/L,MAAM,GAAG,CAAb;IAEA,IAAI8L,UAAJ,EAAgB;MAAA;MACd,IAAMnF,QAAQ,GAAGpE,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAjB;MACA,IAAM6J,iBAAiB,GAAGF,UAAU,CAAC7E,OAAX,CAAmB,0BAAnB,CAA1B,CAFc;MAId;MACA;MACA;;MACA,IAAMgF,QAAQ,GACZD,iBAAiB,IAAIrF,QAAQ,CAAClE,QAAT,CAAkBuJ,iBAAlB,CAArB,GACIA,iBADJ,GAEI,IAHN;MAIA,IAAIE,QAAQ,GAAGJ,UAAU,CAAC7E,OAAX,CAAmB,mBAAnB,CAAf;MACA,IAAI/F,OAAO,GAAsB,IAAjC,CAZc;MAed;;MACA,IAAIgL,QAAJ,EAAc;QACZH,QAAQ,GAAGG,QAAQ,CAACjF,OAAT,CAAiB,0BAAjB,CAAX;QAEA,IAAI8E,QAAJ,EAAc;UACZ,IAAM7M,MAAM,GAAGqD,WAAW,CAACC,SAAZ,CAAsBL,MAAtB,CAAf;UACA,IAAM0G,KAAK,GAAG3J,MAAM,CAACsB,QAAP,CAAgB6I,WAAhB,EAAd;UACAR,KAAK,CAACiB,QAAN,CAAeiC,QAAf,EAAyB,CAAzB;UACAlD,KAAK,CAACkB,MAAN,CAAa6B,WAAb,EAA0BC,aAA1B;UAEA,IAAMM,QAAQ,GAAGtD,KAAK,CAACuD,aAAN,EAAjB;UACA,IAAMC,QAAQ,GAAG,CACf,GAAG/K,KAAK,CAAC9E,SAAN,CAAgB8P,KAAhB,CAAsB5P,IAAtB,CACDyP,QAAQ,CAACnE,gBAAT,CAA0B,yBAA1B,CADC,CADY,EAIf,GAAG1G,KAAK,CAAC9E,SAAN,CAAgB8P,KAAhB,CAAsB5P,IAAtB,CACDyP,QAAQ,CAACnE,gBAAT,CAA0B,yBAA1B,CADC,CAJY,CAAjB;UASAqE,QAAQ,CAACE,OAAT,CAAiB/G,EAAE;YACjB;YACA;YACA,IACE5B,UAAU,IACV,CAAC6H,UADD,IAEAjG,EAAE,CAAC8C,YAAH,CAAgB,uBAAhB,CAFA,IAGA9C,EAAE,CAAClF,WAAH,CAAepE,MAAf,GAAwB,CAHxB,IAIAsJ,EAAE,CAACgH,WAAH,KAAmB,QALrB,EAME;cACA,IAAIhH,EAAE,CAAClF,WAAH,CAAekI,UAAf,CAA0B,QAA1B,CAAJ,EAAyC;gBACvChD,EAAE,CAAClF,WAAH,GAAiBkF,EAAE,CAAClF,WAAH,CAAegM,KAAf,CAAqB,CAArB,CAAjB;cACD;cAED;YACD;YAED9G,EAAG,CAACsG,UAAJ,CAAgBW,WAAhB,CAA4BjH,EAA5B;UACD,CAlBD,EAhBY;UAqCZ;UACA;UACA;UACA;;UACAxF,MAAM,GAAGmM,QAAQ,CAAC7L,WAAT,CAAsBpE,MAA/B;UACAgF,OAAO,GAAG6K,QAAV;QACD;MACF,CA/CD,MA+CO,IAAIE,QAAJ,EAAc;QACnB;QACA;QACA;QACA,IAAMS,SAAS,GAAGT,QAAQ,CAACjE,gBAAT,CAA0B,mBAA1B,CAAlB;QACA,KAAK,IAAI7H,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGuM,SAAS,CAACxQ,MAAtC,EAA8CiE,KAAK,EAAnD,EAAuD;UACrD,IAAMwM,OAAO,GAAGD,SAAS,CAACvM,KAAD,CAAzB;UACA,IAAIoC,WAAW,CAACG,UAAZ,CAAuBP,MAAvB,EAA+BwK,OAA/B,CAAJ,EAA6C;YAC3CT,QAAQ,GAAGS,OAAX;YACA;UACD;QACF,CAXkB;;QAcnB,IAAI,CAACT,QAAL,EAAe;UACblM,MAAM,GAAG,CAAT;QACD,CAFD,MAEO;UACL+L,QAAQ,GAAGG,QAAQ,CAACjF,OAAT,CAAiB,0BAAjB,CAAX;UACA/F,OAAO,GAAGgL,QAAV;UACAlM,MAAM,GAAGkB,OAAO,CAACZ,WAAR,CAAqBpE,MAA9B;UACAgF,OAAO,CAAC8G,gBAAR,CAAyB,yBAAzB,EAAoDuE,OAApD,CAA4D/G,EAAE;YAC5DxF,MAAM,IAAIwF,EAAE,CAAClF,WAAH,CAAgBpE,MAA1B;UACD,CAFD;QAGD;MACF;MAED,IACEgF,OAAO,IACPlB,MAAM,KAAKkB,OAAO,CAACZ,WAAR,CAAqBpE,MADhC;MAAA;MAGA;MACA0H,UAJA,IAKA1C,OAAO,CAACF,YAAR,CAAqB,uBAArB,MAAkD,GALlD,4BAMAE,OAAO,CAACZ,WANR,iDAMAsM,qBAAqBpE,UAArB,CAAgC,QAAhC,CANA,KAYCsD,UAAU,CAACxD,YAAX,CAAwB,uBAAxB,KAIEzE,UAAU,6BAAI3C,OAAO,CAACZ,WAAZ,kDAAIuM,sBAAqBC,QAArB,CAA8B,MAA9B,CAhBjB,CADF,EAkBE;QACA9M,MAAM;MACP;IACF;IAED,IAAI4D,UAAU,IAAI,CAACmI,QAAf,IAA2B,CAACN,UAAhC,EAA4C;MAC1C,IAAM1L,IAAI,GAAG+L,UAAU,CAACxD,YAAX,CAAwB,iBAAxB,IACTwD,UADS,GAETA,UAAU,CAAC7E,OAAX,CAAmB,mBAAnB,CAFJ;MAIA,IAAIlH,IAAI,IAAIwC,WAAW,CAACG,UAAZ,CAAuBP,MAAvB,EAA+BpC,IAA/B,EAAqC;QAAE4C,QAAQ,EAAE;MAAZ,CAArC,CAAZ,EAAsE;QACpE,IAAMoK,UAAS,GAAGxK,WAAW,CAACyH,WAAZ,CAAwB7H,MAAxB,EAAgCpC,IAAhC,CAAlB;QACA,IAAI;UAAEkF,IAAI,EAAJA,KAAF;UAAQjF,MAAM,EAANA;QAAR,IAAmBkF,MAAM,CAAC+C,KAAP,CACrB9F,MADqB,EAErBI,WAAW,CAACyC,QAAZ,CAAqB7C,MAArB,EAA6B4K,UAA7B,CAFqB,CAAvB;QAKA,IAAI,CAAChN,IAAI,CAACiN,aAAL,CAAmB,mBAAnB,CAAL,EAA8C;UAC5ChN,OAAM,GAAG6L,aAAT;QACD;QAED,OAAO;UAAE5G,IAAI,EAAJA,KAAF;UAAQjF,MAAM,EAANA;QAAR,CAAP;MACD;IACF;IAED,IAAI,CAAC+L,QAAL,EAAe;MACb,IAAIL,aAAJ,EAAmB;QACjB,OAAO,IAAP;MACD;MACD,MAAM,IAAI7G,KAAJ,wDAC4C/E,QAD5C,EAAN;IAGD;IAGD;IACA;;IACA,IAAMiN,SAAS,GAAGxK,WAAW,CAACyH,WAAZ,CAAwB7H,MAAxB,EAAgC4J,QAAhC,CAAlB;IACA,IAAM9G,IAAI,GAAG1C,WAAW,CAACyC,QAAZ,CAAqB7C,MAArB,EAA6B4K,SAA7B,CAAb;IACA,OAAO;MAAE9H,IAAF;MAAQjF;IAAR,CAAP;EACD,CA5mBwB;EA8mBzB;;;EAIAwL,YAAY,CACVrJ,MADU,EAEViH,QAFU,EAGV1C,OAHU;IAQV,IAAM;MAAE+E,UAAF;MAAcC;IAAd,IAAgChF,OAAtC;IACA,IAAMlB,EAAE,GAAGpG,cAAc,CAACgK,QAAD,CAAd,GACPA,QAAQ,CAAC/J,UADF,GAEP+J,QAAQ,CAAC6D,cAFb;IAGA,IAAI5N,UAAJ;IACA,IAAI6N,YAAJ;IACA,IAAIC,SAAJ;IACA,IAAIC,WAAJ;IACA,IAAIjE,WAAJ;IAEA,IAAI3D,EAAJ,EAAQ;MACN,IAAIpG,cAAc,CAACgK,QAAD,CAAlB,EAA8B;QAC5B/J,UAAU,GAAG+J,QAAQ,CAAC/J,UAAtB;QACA6N,YAAY,GAAG9D,QAAQ,CAAC8D,YAAxB;QACAC,SAAS,GAAG/D,QAAQ,CAAC+D,SAArB;QACAC,WAAW,GAAGhE,QAAQ,CAACgE,WAAvB,CAJ4B;QAM5B;QACA;QACA;;QACA,IAAIpJ,SAAS,IAAIzD,aAAa,EAA9B,EAAkC;UAChC4I,WAAW,GACTC,QAAQ,CAAC/J,UAAT,KAAwB+J,QAAQ,CAAC+D,SAAjC,IACA/D,QAAQ,CAAC8D,YAAT,KAA0B9D,QAAQ,CAACgE,WAFrC;QAGD,CAJD,MAIO;UACLjE,WAAW,GAAGC,QAAQ,CAACD,WAAvB;QACD;MACF,CAhBD,MAgBO;QACL9J,UAAU,GAAG+J,QAAQ,CAAC6D,cAAtB;QACAC,YAAY,GAAG9D,QAAQ,CAACG,WAAxB;QACA4D,SAAS,GAAG/D,QAAQ,CAACiE,YAArB;QACAD,WAAW,GAAGhE,QAAQ,CAACK,SAAvB;QACAN,WAAW,GAAGC,QAAQ,CAACkE,SAAvB;MACD;IACF;IAED,IACEjO,UAAU,IAAI,IAAd,IACA8N,SAAS,IAAI,IADb,IAEAD,YAAY,IAAI,IAFhB,IAGAE,WAAW,IAAI,IAJjB,EAKE;MACA,MAAM,IAAIvI,KAAJ,wDAC4CuE,QAD5C,EAAN;IAGD;IAED,IAAMN,MAAM,GAAGvG,WAAW,CAACoJ,YAAZ,CACbxJ,MADa,EAEb,CAAC9C,UAAD,EAAa6N,YAAb,CAFa,EAGb;MAAEzB,UAAF;MAAcC;IAAd,CAHa,CAAf;IAKA,IAAI,CAAC5C,MAAL,EAAa;MACX,OAAO,IAAP;IACD;IAED,IAAM5C,KAAK,GAAGiD,WAAW,GACrBL,MADqB,GAErBvG,WAAW,CAACoJ,YAAZ,CAAyBxJ,MAAzB,EAAiC,CAACgL,SAAD,EAAYC,WAAZ,CAAjC,EAA2D;MACzD3B,UADyD;MAEzDC;IAFyD,CAA3D,CAFJ;IAMA,IAAI,CAACxF,KAAL,EAAY;MACV,OAAO,IAAP;IACD;IAED,IAAI2C,KAAK,GAAU;MAAEC,MAAM,EAAEA,MAAV;MAA2B5C,KAAK,EAAEA;IAAlC,CAAnB;IAEA;IACA;IACA;;IACA,IACE8C,KAAK,CAACuE,UAAN,CAAiB1E,KAAjB,KACAG,KAAK,CAACwE,SAAN,CAAgB3E,KAAhB,CADA,IAEA5J,YAAY,CAACkO,SAAD,CAFZ,IAGAjI,MAAM,CAAC0C,IAAP,CAAYzF,MAAZ,EAAoB;MAAE0F,EAAE,EAAEgB,KAAK,CAAC3C,KAAZ;MAAmBuH,IAAI,EAAE;IAAzB,CAApB,CAJF,EAKE;MACA5E,KAAK,GAAG3D,MAAM,CAACwI,WAAP,CAAmBvL,MAAnB,EAA2B0G,KAA3B,EAAkC;QAAE8E,KAAK,EAAE;MAAT,CAAlC,CAAR;IACD;IAED,OAAQ9E,KAAR;EACD,CA3sBwB;EA6sBzB+E,QAAQ,CAACzL,MAAD,EAAsB0G,KAAtB;IACN,IAAM;MAAEC,MAAF;MAAU5C;IAAV,IAAoB2C,KAA1B;IACA,OACE3D,MAAM,CAAC2I,OAAP,CAAe1L,MAAf,EAAuB2G,MAAM,CAAC7D,IAA9B,KAAuCC,MAAM,CAAC2I,OAAP,CAAe1L,MAAf,EAAuB+D,KAAK,CAACjB,IAA7B,CADzC;EAGD,CAltBwB;EAotBzB;;;EAGA6I,oBAAoB,CAAC3L,MAAD;;IAClB,iDAAwB,CAACyC,GAAzB,CAA6BzC,MAA7B;EACD,CAztBwB;EA2tBzB;;;EAGA4L,mBAAmB,CAAC5L,MAAD;IACjB,OAAOlE,uBAAuB,CAAC2G,GAAxB,CAA4BzC,MAA5B,CAAP;EACD;AAhuBwB;;ACtD3B;;;;AAIO,IAAM6L,yBAAyB,GAAG1J,WAAW,GAChD2J,eADgD,GAEhDC,SAFG;;;ACJA,IAAMC,cAAc,GAAG,CAACC,IAAD,EAAWC,IAAX,KAC5B/S,MAAM,CAACU,IAAP,CAAYoS,IAAZ,EAAkBlS,MAAlB,KAA6BZ,MAAM,CAACU,IAAP,CAAYqS,IAAZ,EAAkBnS,MAA/C,IACAZ,MAAM,CAACU,IAAP,CAAYoS,IAAZ,EAAkBE,KAAlB,CACElT,GAAG,IAAIiT,IAAI,CAACE,cAAL,CAAoBnT,GAApB,KAA4BgT,IAAI,CAAChT,GAAD,CAAJ,KAAciT,IAAI,CAACjT,GAAD,CADvD,CAFK;AAMP;;;;;;;;AAQO,IAAMoT,yBAAyB,GAAG,CACvCC,IADuC,EAEvCC,OAFuC;EAIvC,IAAID,IAAI,CAACvS,MAAL,KAAgBwS,OAAO,CAACxS,MAA5B,EAAoC;IAClC,OAAO,KAAP;EACD;EAED,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwS,IAAI,CAACvS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;IACpC,IAAM4M,KAAK,GAAG4F,IAAI,CAACxS,CAAD,CAAlB;IACA,IAAM0S,KAAK,GAAGD,OAAO,CAACzS,CAAD,CAArB;IAEA,IAAmD2S,aAAnD,4BAAqE/F,KAArE;IACA,IAAmDgG,aAAnD,4BAAqEF,KAArE;IAEA,IACE,CAAC3F,KAAK,CAAC8F,MAAN,CAAajG,KAAb,EAAoB8F,KAApB,CAAD,IACA9F,KAAK,CAACxK,kBAAD,CAAL,KAA8BsQ,KAAK,CAACtQ,kBAAD,CADnC,IAEA,CAAC8P,cAAc,CAACS,aAAD,EAAgBC,aAAhB,CAHjB,EAIE;MACA,OAAO,KAAP;IACD;EACF;EAED,OAAO,IAAP;AACD,CAzBM;;ACTP;;;;AAIA,IAAME,MAAM,GAAIC,KAAD;EAMb,IAAM;IAAE9O,MAAF;IAAU+O,IAAV;IAAgBtO,MAAhB;IAAwBQ;EAAxB,IAAiC6N,KAAvC;EACA,IAAM7M,MAAM,GAAG+M,cAAc,EAA7B;EACA,IAAMjK,IAAI,GAAG1C,WAAW,CAACyC,QAAZ,CAAqB7C,MAArB,EAA6BhB,IAA7B,CAAb;EACA,IAAMgO,UAAU,GAAGC,IAAI,CAACzO,MAAL,CAAYsE,IAAZ,CAAnB;EACA,IAAMoK,iBAAiB,GAAGJ,IAAI,CAAC1Q,uBAAD,CAAJ,KAAkC,IAA5D;EAGA;;EACA,IAAI4D,MAAM,CAACqI,MAAP,CAAc7J,MAAd,CAAJ,EAA2B;IACzB,oBAAOwC,oBAACmM,eAAD;MAAiBpT,MAAM,EAAEiD,IAAI,CAACoQ,MAAL,CAAY5O,MAAZ,EAAoBzE;KAA7C,CAAP;EACD;EAGD;EACA;;EACA,IACE+S,IAAI,CAAC9N,IAAL,KAAc,EAAd,IACAR,MAAM,CAAC6O,QAAP,CAAgB7O,MAAM,CAAC6O,QAAP,CAAgBtT,MAAhB,GAAyB,CAAzC,MAAgDiF,IADhD,IAEA,CAACgB,MAAM,CAACyI,QAAP,CAAgBjK,MAAhB,CAFD,IAGAuE,MAAM,CAACqK,MAAP,CAAcpN,MAAd,EAAsBgN,UAAtB,MAAsC,EAJxC,EAKE;IACA,oBAAOhM,oBAACmM,eAAD;MAAiBG,WAAW;MAACJ,iBAAiB,EAAEA;KAAhD,CAAP;EACD;EAGD;EACA;;EACA,IAAIJ,IAAI,CAAC9N,IAAL,KAAc,EAAlB,EAAsB;IACpB,oBAAOgC,oBAACmM,eAAD;MAAiBD,iBAAiB,EAAEA;KAApC,CAAP;EACD;EAGD;;EACA,IAAInP,MAAM,IAAI+O,IAAI,CAAC9N,IAAL,CAAUmL,KAAV,CAAgB,CAAC,CAAjB,MAAwB,IAAtC,EAA4C;IAC1C,oBAAOnJ,oBAACuM,UAAD;MAAYC,UAAU;MAACxO,IAAI,EAAE8N,IAAI,CAAC9N;KAAlC,CAAP;EACD;EAED,oBAAOgC,oBAACuM,UAAD;IAAYvO,IAAI,EAAE8N,IAAI,CAAC9N;GAAvB,CAAP;AACD,CA5CD;AA8CA;;;;AAGA,IAAMuO,UAAU,GAAIV,KAAD;EACjB,IAAM;IAAE7N,IAAF;IAAQwO,UAAU,GAAG;EAArB,IAA+BX,KAArC;EAEA,IAAMY,GAAG,GAAGC,MAAM,CAAkB,IAAlB,CAAlB;EAEA,IAAMC,cAAc,GAAG;IACrB,iBAAU3O,IAAV,aAAUA,IAAV,cAAUA,IAAV,GAAkB,EAAlB,SAAuBwO,UAAU,GAAG,IAAH,GAAU,EAA3C;EACD,CAFD;EAKA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA3B,yBAAyB,CAAC;IACxB;IACA,IAAM+B,gBAAgB,GAAGD,cAAc,EAAvC;IAEA,IAAIF,GAAG,CAACjD,OAAJ,IAAeiD,GAAG,CAACjD,OAAJ,CAAYrM,WAAZ,KAA4ByP,gBAA/C,EAAiE;MAC/DH,GAAG,CAACjD,OAAJ,CAAYrM,WAAZ,GAA0ByP,gBAA1B;IACD;IAGD;EACD,CAVwB,CAAzB;EAaA;;EACA,IAAI,CAACH,GAAG,CAACjD,OAAT,EAAkB;IAChB,oBACExJ;;MAAwByM,GAAG,EAAEA;KAA7B,EACGE,cAAc,EADjB,CADF;EAKD;;EAGD,oBAAO3M;;IAAwByM,GAAG,EAAEA;GAA7B,CAAP;AACD,CA1CD;AA4CA;;;;AAIO,IAAMN,eAAe,GAAIN,KAAD;EAK7B,IAAM;IAAE9S,MAAM,GAAG,CAAX;IAAcuT,WAAW,GAAG,KAA5B;IAAmCJ,iBAAiB,GAAG;EAAvD,IAAiEL,KAAvE;EAEA,IAAMgB,UAAU,GAAG;IACjB,yBAAyBP,WAAW,GAAG,GAAH,GAAS,GAD5B;IAEjB,qBAAqBvT;EAFJ,CAAnB;EAKA,IAAImT,iBAAJ,EAAuB;IACrBW,UAAU,CAAC,6BAAD,CAAV,GAA4C,IAA5C;EACD;EAED,oBACE7M,8CAAU6M,WAAV,EACG,CAACpM,UAAD,IAAe,CAAC6L,WAAhB,GAA8B,QAA9B,GAAyC,IAD5C,EAEGA,WAAW,gBAAGtM,+BAAH,GAAY,IAF1B,CADF;AAMD,CAtBM;;ACzGP;;;;AAIO,IAAM8M,aAAa,gBAAGC,aAAa,CAAqB,IAArB,CAAnC;AAEP;;;;IAIahB,cAAc,GAAG;EAC5B,IAAM/M,MAAM,GAAGgO,UAAU,CAACF,aAAD,CAAzB;EAEA,IAAI,CAAC9N,MAAL,EAAa;IACX,MAAM,IAAI0C,KAAJ,kFAAN;EAGD;EAED,OAAO1C,MAAP;AACD;;ACbD;;;;AAIA,IAAMiO,IAAI,GAAIpB,KAAD;EAQX,IAAM;IACJC,IADI;IAEJ/O,MAFI;IAGJiB,IAHI;IAIJR,MAJI;IAKJ0P,iBALI;IAMJC,UAAU,GAAItB,KAAD,iBAA4B7L,oBAACoN,WAAD,oBAAiBvB,MAAjB;EANrC,IAOFA,KAPJ;EASA,IAAMwB,cAAc,GAAGX,MAAM,CAAyB,IAAzB,CAA7B;EACA,IAAM1N,MAAM,GAAG+M,cAAc,EAA7B;EAEAhB,SAAS,CAAC;IACR,IAAMuC,aAAa,GAAGD,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAE7D,OAAtC;IACA,IAAMhG,QAAQ,GAAGpE,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAjB;IAEA,IAAI,CAACsO,aAAD,IAAkB,CAAC9J,QAAvB,EAAiC;MAC/B;IACD;IAEDA,QAAQ,CAAC+J,KAAT,CAAeC,SAAf,aAA8BF,aAAa,CAACG,YAA5C;IACAxT,6BAA6B,CAAC2H,GAA9B,CAAkC5C,MAAlC,EAA0CsO,aAA1C;IAEA,OAAO;MACL9J,QAAQ,CAAC+J,KAAT,CAAeC,SAAf,GAA2B,MAA3B;MACAvT,6BAA6B,CAACyT,MAA9B,CAAqC1O,MAArC;IACD,CAHD;EAID,CAfQ,EAeN,CAACqO,cAAD,EAAiBvB,IAAjB,CAfM,CAAT;EAiBA,IAAIO,QAAQ,gBACVrM,oBAAC4L,MAAD;IAAQ7O,MAAM,EAAEA;IAAQ+O,IAAI,EAAEA;IAAMtO,MAAM,EAAEA;IAAQQ,IAAI,EAAEA;GAA1D,CADF;EAIA,IAAI8N,IAAI,CAAC5Q,kBAAD,CAAR,EAA8B;IAC5B,IAAMyS,gBAAgB,GAA2B;MAC/CtB,QAAQ,EAAEP,IAAI,CAAC8B,WADgC;MAE/Cf,UAAU,EAAE;QACV,0BAA0B,IADhB;QAEVU,KAAK,EAAE;UACLrF,QAAQ,EAAE,UADL;UAEL2F,aAAa,EAAE,MAFV;UAGLlG,KAAK,EAAE,MAHF;UAILmG,QAAQ,EAAE,MAJL;UAKLzP,OAAO,EAAE,OALJ;UAML0P,OAAO,EAAE,OANJ;UAOLC,UAAU,EAAE,MAPP;UAQLC,cAAc,EAAE;QARX,CAFG;QAYVC,eAAe,EAAE,KAZP;QAaVzB,GAAG,EAAEY;MAbK;IAFmC,CAAjD;IAmBAhB,QAAQ,gBACNrM,oBAACA,KAAK,CAACmO,QAAP,QACGjB,iBAAiB,CAACS,gBAAD,CADpB,EAEGtB,QAFH,CADF;EAMD;EAGD;EACA;;EACA,IAAMQ,UAAU,GAEZ;IACF,mBAAmB;EADjB,CAFJ;EAMA,OAAOM,UAAU,CAAC;IAAEN,UAAF;IAAcR,QAAd;IAAwBP,IAAxB;IAA8B9N;EAA9B,CAAD,CAAjB;AACD,CA/ED;AAiFA,IAAMoQ,YAAY,gBAAGpO,KAAK,CAACqO,IAAN,CAAWpB,IAAX,EAAiB,CAACqB,IAAD,EAAOC,IAAP;EACpC,OACEA,IAAI,CAAC/Q,MAAL,KAAgB8Q,IAAI,CAAC9Q,MAArB,IACA+Q,IAAI,CAACxR,MAAL,KAAgBuR,IAAI,CAACvR,MADrB,IAEAwR,IAAI,CAACpB,UAAL,KAAoBmB,IAAI,CAACnB,UAFzB,IAGAoB,IAAI,CAACrB,iBAAL,KAA2BoB,IAAI,CAACpB,iBAHhC,IAIAqB,IAAI,CAACvQ,IAAL,KAAcsQ,IAAI,CAACtQ,IAJnB,IAKAzC,MAAI,CAACoQ,MAAL,CAAY4C,IAAI,CAACzC,IAAjB,EAAuBwC,IAAI,CAACxC,IAA5B,CALA,IAMAyC,IAAI,CAACzC,IAAL,CAAU5Q,kBAAV,MAAkCoT,IAAI,CAACxC,IAAL,CAAU5Q,kBAAV,CAPpC;AASD,CAVoB,CAArB;IAYakS,WAAW,GAAIvB,KAAD;EACzB,IAAM;IAAEgB,UAAF;IAAcR;EAAd,IAA2BR,KAAjC;EACA,oBAAO7L,8CAAU6M,WAAV,EAAuBR,QAAvB,CAAP;AACD;;AClGD;;;;AAIA,IAAM9Q,IAAI,GAAIsQ,KAAD;EAQX,IAAM;IACJ2C,WADI;IAEJzR,MAFI;IAGJS,MAHI;IAIJ0P,iBAJI;IAKJC,UALI;IAMJnP;EANI,IAOF6N,KAPJ;EAQA,IAAM7M,MAAM,GAAG+M,cAAc,EAA7B;EACA,IAAMU,GAAG,GAAGC,MAAM,CAAkB,IAAlB,CAAlB;EACA,IAAM+B,MAAM,GAAGC,MAAS,CAACF,WAAV,CAAsBxQ,IAAtB,EAA4BwQ,WAA5B,CAAf;EACA,IAAMvW,GAAG,GAAGmH,WAAW,CAACuC,OAAZ,CAAoB3C,MAApB,EAA4BhB,IAA5B,CAAZ;EACA,IAAMqO,QAAQ,GAAG,EAAjB;EAEA,KAAK,IAAIvT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2V,MAAM,CAAC1V,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;IACtC,IAAMgT,IAAI,GAAG2C,MAAM,CAAC3V,CAAD,CAAnB;IAEAuT,QAAQ,CAACsC,IAAT,eACE3O,oBAACiN,YAAD;MACElQ,MAAM,EAAEA,MAAM,IAAIjE,CAAC,KAAK2V,MAAM,CAAC1V,MAAP,GAAgB;MACxCd,GAAG,YAAKA,GAAG,CAAC0B,EAAT,cAAeb,CAAf;MACHoU,iBAAiB,EAAEA;MACnBpB,IAAI,EAAEA;MACN9N,IAAI,EAAEA;MACNR,MAAM,EAAEA;MACR2P,UAAU,EAAEA;KAPd,CADF;EAWD;;EAGDtC,yBAAyB,CAAC;IACxB,IAAMvG,cAAc,GAAGjK,wBAAwB,CAACoH,GAAzB,CAA6BzC,MAA7B,CAAvB;IACA,IAAIyN,GAAG,CAACjD,OAAR,EAAiB;MACflF,cAAc,SAAd,kBAAc,WAAd,0BAAc,CAAE1C,GAAhB,CAAoB3J,GAApB,EAAyBwU,GAAG,CAACjD,OAA7B;MACArP,eAAe,CAACyH,GAAhB,CAAoB5D,IAApB,EAA0ByO,GAAG,CAACjD,OAA9B;MACAtP,eAAe,CAAC0H,GAAhB,CAAoB6K,GAAG,CAACjD,OAAxB,EAAiCxL,IAAjC;IACD,CAJD,MAIO;MACLsG,cAAc,SAAd,kBAAc,WAAd,0BAAc,CAAEoJ,MAAhB,CAAuBzV,GAAvB;MACAkC,eAAe,CAACuT,MAAhB,CAAuB1P,IAAvB;IACD;EACF,CAVwB,CAAzB;EAYA,oBACEgC;uBAAsB;IAAOyM,GAAG,EAAEA;GAAlC,EACGJ,QADH,CADF;AAKD,CAxDD;AA0DA,IAAMuC,YAAY,gBAAG5O,KAAK,CAACqO,IAAN,CAAW9S,IAAX,EAAiB,CAAC+S,IAAD,EAAOC,IAAP;EACpC,OACEA,IAAI,CAAC/Q,MAAL,KAAgB8Q,IAAI,CAAC9Q,MAArB,IACA+Q,IAAI,CAACxR,MAAL,KAAgBuR,IAAI,CAACvR,MADrB,IAEAwR,IAAI,CAACpB,UAAL,KAAoBmB,IAAI,CAACnB,UAFzB,IAGAoB,IAAI,CAACvQ,IAAL,KAAcsQ,IAAI,CAACtQ,IAHnB,IAIAqN,yBAAyB,CAACkD,IAAI,CAACC,WAAN,EAAmBF,IAAI,CAACE,WAAxB,CAL3B;AAOD,CARoB,CAArB;;ACtDA;;;;AAIA,IAAMK,OAAO,GAAIhD,KAAD;EAQd,IAAM;IACJ2C,WADI;IAEJM,OAFI;IAGJC,aAAa,GAAIC,CAAD,iBAA2BhP,oBAACiP,cAAD,oBAAoBD,EAApB,CAHvC;IAIJ9B,iBAJI;IAKJC,UALI;IAMJjK;EANI,IAOF2I,KAPJ;EAQA,IAAM7M,MAAM,GAAG+M,cAAc,EAA7B;EACA,IAAMmD,QAAQ,GAAGC,WAAW,EAA5B;EACA,IAAM1H,QAAQ,GAAGzI,MAAM,CAACyI,QAAP,CAAgBqH,OAAhB,CAAjB;EACA,IAAM7W,GAAG,GAAGmH,WAAW,CAACuC,OAAZ,CAAoB3C,MAApB,EAA4B8P,OAA5B,CAAZ;EACA,IAAMrC,GAAG,GAAG2C,WAAW,CACpB3C,GAAD;IACE;IACA,IAAMnI,cAAc,GAAGjK,wBAAwB,CAACoH,GAAzB,CAA6BzC,MAA7B,CAAvB;IACA,IAAIyN,GAAJ,EAAS;MACPnI,cAAc,SAAd,kBAAc,WAAd,0BAAc,CAAE1C,GAAhB,CAAoB3J,GAApB,EAAyBwU,GAAzB;MACAtS,eAAe,CAACyH,GAAhB,CAAoBkN,OAApB,EAA6BrC,GAA7B;MACAvS,eAAe,CAAC0H,GAAhB,CAAoB6K,GAApB,EAAyBqC,OAAzB;IACD,CAJD,MAIO;MACLxK,cAAc,SAAd,kBAAc,WAAd,0BAAc,CAAEoJ,MAAhB,CAAuBzV,GAAvB;MACAkC,eAAe,CAACuT,MAAhB,CAAuBoB,OAAvB;IACD;EACF,CAZoB,EAarB,CAAC9P,MAAD,EAAS/G,GAAT,EAAc6W,OAAd,CAbqB,CAAvB;EAeA,IAAIzC,QAAQ,GAAoBgD,WAAW,CAAC;IAC1Cb,WAD0C;IAE1C5R,IAAI,EAAEkS,OAFoC;IAG1CC,aAH0C;IAI1C7B,iBAJ0C;IAK1CC,UAL0C;IAM1CjK;EAN0C,CAAD,CAA3C;EAUA;;EACA,IAAM2J,UAAU,GAOZ;IACF,mBAAmB,SADjB;IAEFJ;EAFE,CAPJ;EAYA,IAAIhF,QAAJ,EAAc;IACZoF,UAAU,CAAC,mBAAD,CAAV,GAAkC,IAAlC;EACD;EAGD;;EACA,IAAI,CAACpF,QAAD,IAAa1F,MAAM,CAACuN,UAAP,CAAkBtQ,MAAlB,EAA0B8P,OAA1B,CAAjB,EAAqD;IACnD,IAAM9Q,IAAI,GAAGhC,IAAI,CAACoQ,MAAL,CAAY0C,OAAZ,CAAb;IACA,IAAMS,GAAG,GAAGC,YAAY,CAACxR,IAAD,CAAxB;IAEA,IAAIuR,GAAG,KAAK,KAAZ,EAAmB;MACjB1C,UAAU,CAAC0C,GAAX,GAAiBA,GAAjB;IACD;EACF;;EAGD,IAAIxN,MAAM,CAACsF,MAAP,CAAcrI,MAAd,EAAsB8P,OAAtB,CAAJ,EAAoC;IAClCjC,UAAU,CAAC,iBAAD,CAAV,GAAgC,IAAhC;IAEA,IAAI,CAACqC,QAAD,IAAazH,QAAjB,EAA2B;MACzBoF,UAAU,CAACqB,eAAX,GAA6B,KAA7B;IACD;IAED,IAAMuB,GAAG,GAAGhI,QAAQ,GAAG,MAAH,GAAY,KAAhC;IACA,IAAM,CAAC,CAACzJ,KAAD,CAAD,IAAWhC,IAAI,CAAC4I,KAAL,CAAWkK,OAAX,CAAjB;IAEAzC,QAAQ,gBACNrM,oBAACyP,GAAD;;MAEElC,KAAK,EAAE;QACL1F,MAAM,EAAE,GADH;QAEL6H,KAAK,EAAE,aAFF;QAGLC,OAAO,EAAE,MAHJ;QAILzH,QAAQ,EAAE;MAJL;KAFT,eASElI,oBAACzE,YAAD;MACE2R,iBAAiB,EAAEA;MACnBsB,WAAW,EAAE;MACbzR,MAAM,EAAE;MACRS,MAAM,EAAEsR;MACR9Q,IAAI,EAAEA;KALR,CATF,CADF;IAoBApE,aAAa,CAACgI,GAAd,CAAkB5D,KAAlB,EAAwB,CAAxB;IACAlE,cAAc,CAAC8H,GAAf,CAAmB5D,KAAnB,EAAyB8Q,OAAzB;EACD;EAED,OAAOC,aAAa,CAAC;IAAElC,UAAF;IAAcR,QAAd;IAAwByC;EAAxB,CAAD,CAApB;AACD,CA7GD;AA+GA,IAAMc,eAAe,gBAAG5P,KAAK,CAACqO,IAAN,CAAWQ,OAAX,EAAoB,CAACP,IAAD,EAAOC,IAAP;EAC1C,OACED,IAAI,CAACQ,OAAL,KAAiBP,IAAI,CAACO,OAAtB,IACAR,IAAI,CAACS,aAAL,KAAuBR,IAAI,CAACQ,aAD5B,IAEAT,IAAI,CAACnB,UAAL,KAAoBoB,IAAI,CAACpB,UAFzB,IAGA9B,yBAAyB,CAACiD,IAAI,CAACE,WAAN,EAAmBD,IAAI,CAACC,WAAxB,CAHzB,KAICF,IAAI,CAACpL,SAAL,KAAmBqL,IAAI,CAACrL,SAAxB,IACE,CAAC,CAACoL,IAAI,CAACpL,SAAP,IACC,CAAC,CAACqL,IAAI,CAACrL,SADR,IAEC2C,KAAK,CAAC8F,MAAN,CAAa2C,IAAI,CAACpL,SAAlB,EAA6BqL,IAAI,CAACrL,SAAlC,CAPJ,CADF;AAUD,CAXuB,CAAxB;AAaA;;;;IAIa+L,cAAc,GAAIpD,KAAD;EAC5B,IAAM;IAAEgB,UAAF;IAAcR,QAAd;IAAwByC;EAAxB,IAAoCjD,KAA1C;EACA,IAAM7M,MAAM,GAAG+M,cAAc,EAA7B;EACA,IAAM0D,GAAG,GAAGzQ,MAAM,CAACyI,QAAP,CAAgBqH,OAAhB,IAA2B,MAA3B,GAAoC,KAAhD;EACA,oBACE9O,oBAACyP,GAAD,oBAAS5C;IAAYU,KAAK,EAAE;MAAErF,QAAQ,EAAE;IAAZ;IAA5B,EACGmE,QADH,CADF;AAKD;;AC/JD;;;;AAIO,IAAMwD,eAAe,gBAAG9C,aAAa,CAC1C,MAAM,EADoC,CAArC;AAIP;;;;AAIO,IAAM+C,WAAW,GAAG;EACzB,OAAO9C,UAAU,CAAC6C,eAAD,CAAjB;AACD,CAFM;;ACbP;;;;AAIO,IAAME,eAAe,gBAAGhD,aAAa,CAAC,KAAD,CAArC;AAEP;;;;IAIaiD,WAAW,GAAG;EACzB,OAAOhD,UAAU,CAAC+C,eAAD,CAAjB;AACD;;ACED;;;;AAIA,IAAMV,WAAW,GAAIxD,KAAD;EAQlB,IAAM;IACJ2C,WADI;IAEJ5R,IAFI;IAGJmS,aAHI;IAIJ7B,iBAJI;IAKJC,UALI;IAMJjK;EANI,IAOF2I,KAPJ;EAQA,IAAMoE,QAAQ,GAAGH,WAAW,EAA5B;EACA,IAAM9Q,MAAM,GAAG+M,cAAc,EAA7B;EACA,IAAMjK,IAAI,GAAG1C,WAAW,CAACyC,QAAZ,CAAqB7C,MAArB,EAA6BpC,IAA7B,CAAb;EACA,IAAMyP,QAAQ,GAAG,EAAjB;EACA,IAAM6D,WAAW,GACfrB,SAAO,CAACsB,SAAR,CAAkBvT,IAAlB,KACA,CAACoC,MAAM,CAACyI,QAAP,CAAgB7K,IAAhB,CADD,IAEAmF,MAAM,CAACuN,UAAP,CAAkBtQ,MAAlB,EAA0BpC,IAA1B,CAHF;EAKA,KAAK,IAAI9D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8D,IAAI,CAACyP,QAAL,CAActT,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;IAC7C,IAAMkW,CAAC,GAAGlN,IAAI,CAACsO,MAAL,CAAYtX,CAAZ,CAAV;IACA,IAAMU,CAAC,GAAGoD,IAAI,CAACyP,QAAL,CAAcvT,CAAd,CAAV;IACA,IAAMb,GAAG,GAAGmH,WAAW,CAACuC,OAAZ,CAAoB3C,MAApB,EAA4BxF,CAA5B,CAAZ;IACA,IAAMkM,KAAK,GAAG3D,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqBgQ,CAArB,CAAd;IACA,IAAMqB,GAAG,GAAGnN,SAAS,IAAI2C,KAAK,CAACyK,YAAN,CAAmB5K,KAAnB,EAA0BxC,SAA1B,CAAzB;IACA,IAAMqN,EAAE,GAAGN,QAAQ,CAAC,CAACzW,CAAD,EAAIwV,CAAJ,CAAD,CAAnB;IAEA,KAAK,IAAMwB,GAAX,IAAkBhC,WAAlB,EAA+B;MAC7B,IAAMiC,CAAC,GAAG5K,KAAK,CAACyK,YAAN,CAAmBE,GAAnB,EAAwB9K,KAAxB,CAAV;MAEA,IAAI+K,CAAJ,EAAO;QACLF,EAAE,CAAC5B,IAAH,CAAQ8B,CAAR;MACD;IACF;IAED,IAAI5B,SAAO,CAACsB,SAAR,CAAkB3W,CAAlB,CAAJ,EAA0B;MACxB6S,QAAQ,CAACsC,IAAT,eACE3O,oBAAC+P,eAAe,CAACW,QAAjB;QAA0BzY,GAAG,qBAAcA,GAAG,CAAC0B,EAAlB;QAAwBzB,KAAK,EAAE,CAAC,CAACmY;OAA9D,eACErQ,oBAAC2Q,eAAD;QACEnC,WAAW,EAAE+B;QACbzB,OAAO,EAAEtV;QACTvB,GAAG,EAAEA,GAAG,CAAC0B;QACToV,aAAa,EAAEA;QACf7B,iBAAiB,EAAEA;QACnBC,UAAU,EAAEA;QACZjK,SAAS,EAAEmN;OAPb,CADF,CADF;IAaD,CAdD,MAcO;MACLhE,QAAQ,CAACsC,IAAT,eACE3O,oBAAC4Q,YAAD;QACEpC,WAAW,EAAE+B;QACbtY,GAAG,EAAEA,GAAG,CAAC0B;QACToD,MAAM,EAAEmT,WAAW,IAAIpX,CAAC,KAAK8D,IAAI,CAACyP,QAAL,CAActT,MAAd,GAAuB;QACpDyE,MAAM,EAAEZ;QACRsQ,iBAAiB,EAAEA;QACnBC,UAAU,EAAEA;QACZnP,IAAI,EAAExE;OAPR,CADF;IAWD;IAEDI,aAAa,CAACgI,GAAd,CAAkBpI,CAAlB,EAAqBV,CAArB;IACAgB,cAAc,CAAC8H,GAAf,CAAmBpI,CAAnB,EAAsBoD,IAAtB;EACD;EAED,OAAOyP,QAAP;AACD,CA1ED;;AClBA;;;;AAIO,IAAMwE,eAAe,gBAAG9D,aAAa,CAAC,KAAD,CAArC;AAEP;;;;IAIaoC,WAAW,GAAG;EACzB,OAAOnC,UAAU,CAAC6D,eAAD,CAAjB;AACD;ACAM,IAAMC,YAAY,gBAAG/D,aAAa,CAG/B,IAH+B,CAAlC;AAKP;;;;IAIagE,QAAQ,GAAG;EACtB,IAAMC,OAAO,GAAGhE,UAAU,CAAC8D,YAAD,CAA1B;EAEA,IAAI,CAACE,OAAL,EAAc;IACZ,MAAM,IAAItP,KAAJ,4EAAN;EAGD;EAED,IAAM;IAAE1C;EAAF,IAAagS,OAAnB;EACA,OAAOhS,MAAP;AACD;IAEYiS,aAAa,GAAG;EAC3B,IAAMD,OAAO,GAAGhE,UAAU,CAAC8D,YAAD,CAA1B;EAEA,IAAI,CAACE,OAAL,EAAc;IACZ,MAAM,IAAItP,KAAJ,4EAAN;EAGD;EAED,OAAOsP,OAAP;AACD;AC9CM,IAAME,YAAY,GAAG,CAArB;;ACGP;;;;AAIA,IAAMC,OAAO,GAAG;EACdC,IAAI,EAAE,OADQ;EAEdC,OAAO,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,IAA1B,EAAgC,WAAhC,EAA6C,OAA7C,CAFK;EAGdC,YAAY,EAAE,MAHA;EAIdC,WAAW,EAAE,OAJC;EAKdC,gBAAgB,EAAE,WALJ;EAMdC,eAAe,EAAE,YANH;EAOdC,cAAc,EAAE,kBAPF;EAQdC,aAAa,EAAE,eARD;EASdC,cAAc,EAAE,YATF;EAUdC,aAAa,EAAE,aAVD;EAWdC,MAAM,EAAE,OAXM;EAYdC,eAAe,EAAE,aAZH;EAadC,UAAU,EAAE,OAbE;EAcdC,IAAI,EAAE;AAdQ,CAAhB;AAiBA,IAAMC,aAAa,GAAG;EACpBC,gBAAgB,EAAE,QADE;EAEpBC,eAAe,EAAE,UAFG;EAGpBZ,gBAAgB,EAAE,UAHE;EAIpBC,eAAe,EAAE,WAJG;EAKpBC,cAAc,EAAE,CAAC,gBAAD,EAAmB,QAAnB,CALI;EAMpBC,aAAa,EAAE,CAAC,aAAD,EAAgB,QAAhB,CANK;EAOpBU,kBAAkB,EAAE,sBAPA;EAQpBC,iBAAiB,EAAE,CAAC,mBAAD,EAAsB,QAAtB,CARC;EASpBC,kBAAkB,EAAE,sBATA;EAUpBC,iBAAiB,EAAE,mBAVC;EAWpBC,kBAAkB,EAAE,cAXA;EAYpBC,iBAAiB,EAAE,gBAZC;EAapBC,IAAI,EAAE,aAbc;EAcpBC,kBAAkB,EAAE;AAdA,CAAtB;AAiBA,IAAMC,eAAe,GAAG;EACtBN,kBAAkB,EAAE,uBADE;EAEtBC,iBAAiB,EAAE,oBAFG;EAGtBG,IAAI,EAAE,CAAC,QAAD,EAAW,cAAX;AAHgB,CAAxB;AAMA;;;;AAIA,IAAMG,MAAM,GAAI7a,GAAD;EACb,IAAM8a,OAAO,GAAG5B,OAAO,CAAClZ,GAAD,CAAvB;EACA,IAAM+a,KAAK,GAAGd,aAAa,CAACja,GAAD,CAA3B;EACA,IAAMgb,OAAO,GAAGJ,eAAe,CAAC5a,GAAD,CAA/B;EACA,IAAMib,SAAS,GAAGH,OAAO,IAAII,WAAW,CAACJ,OAAD,CAAxC;EACA,IAAMK,OAAO,GAAGJ,KAAK,IAAIG,WAAW,CAACH,KAAD,CAApC;EACA,IAAMK,SAAS,GAAGJ,OAAO,IAAIE,WAAW,CAACF,OAAD,CAAxC;EAEA,OAAQ3W,KAAD;IACL,IAAI4W,SAAS,IAAIA,SAAS,CAAC5W,KAAD,CAA1B,EAAmC,OAAO,IAAP;IACnC,IAAIkE,QAAQ,IAAI4S,OAAZ,IAAuBA,OAAO,CAAC9W,KAAD,CAAlC,EAA2C,OAAO,IAAP;IAC3C,IAAI,CAACkE,QAAD,IAAa6S,SAAb,IAA0BA,SAAS,CAAC/W,KAAD,CAAvC,EAAgD,OAAO,IAAP;IAChD,OAAO,KAAP;EACD,CALD;AAMD,CAdD;AAgBA;;;;AAIA,cAAe;EACbgX,MAAM,EAAER,MAAM,CAAC,MAAD,CADD;EAEbS,SAAS,EAAET,MAAM,CAAC,SAAD,CAFJ;EAGbU,cAAc,EAAEV,MAAM,CAAC,cAAD,CAHT;EAIbW,aAAa,EAAEX,MAAM,CAAC,aAAD,CAJR;EAKbY,gBAAgB,EAAEZ,MAAM,CAAC,gBAAD,CALX;EAMba,eAAe,EAAEb,MAAM,CAAC,eAAD,CANV;EAObc,oBAAoB,EAAEd,MAAM,CAAC,oBAAD,CAPf;EAQbe,mBAAmB,EAAEf,MAAM,CAAC,mBAAD,CARd;EASbgB,oBAAoB,EAAEhB,MAAM,CAAC,oBAAD,CATf;EAUbiB,mBAAmB,EAAEjB,MAAM,CAAC,mBAAD,CAVd;EAWbkB,gBAAgB,EAAElB,MAAM,CAAC,gBAAD,CAXX;EAYbmB,eAAe,EAAEnB,MAAM,CAAC,eAAD,CAZV;EAaboB,oBAAoB,EAAEpB,MAAM,CAAC,oBAAD,CAbf;EAcbqB,mBAAmB,EAAErB,MAAM,CAAC,mBAAD,CAdd;EAebsB,QAAQ,EAAEtB,MAAM,CAAC,QAAD,CAfH;EAgBbuB,kBAAkB,EAAEvB,MAAM,CAAC,kBAAD,CAhBb;EAiBbwB,iBAAiB,EAAExB,MAAM,CAAC,iBAAD,CAjBZ;EAkBbyB,kBAAkB,EAAEzB,MAAM,CAAC,kBAAD,CAlBb;EAmBb0B,iBAAiB,EAAE1B,MAAM,CAAC,iBAAD,CAnBZ;EAoBb2B,MAAM,EAAE3B,MAAM,CAAC,MAAD,CApBD;EAqBb4B,WAAW,EAAE5B,MAAM,CAAC,iBAAD,CArBN;EAsBb6B,YAAY,EAAE7B,MAAM,CAAC,YAAD,CAtBP;EAuBb8B,oBAAoB,EAAE9B,MAAM,CAAC,oBAAD,CAvBf;EAwBb+B,MAAM,EAAE/B,MAAM,CAAC,MAAD;AAxBD,CAAf;AC7DO,IAAMgC,uBAAuB,GAAG,CACrC9V,MADqC,EAErC+V,iBAFqC;EAIrC,IAAIC,iBAAiB,GAAqB,EAA1C;EAEA,IAAMC,KAAK,GAAG;IACZD,iBAAiB,GAAG,EAApB;EACD,CAFD;EAIA,IAAME,iBAAiB,GAAIC,SAAD;IACxB,IAAI,CAACJ,iBAAiB,CAACvL,OAAvB,EAAgC;MAC9B;IACD;IAED,IAAM4L,gBAAgB,GAAGD,SAAS,CAACE,MAAV,CAAiBpW,QAAQ,IAChDF,iBAAiB,CAACC,MAAD,EAASC,QAAT,EAAmBkW,SAAnB,CADM,CAAzB;IAIAH,iBAAiB,CAACrG,IAAlB,CAAuB,GAAGyG,gBAA1B;EACD,CAVD;EAYA,SAASE,UAAT;IACEN,iBAAiB,CAACO,OAAlB,GAA4BnM,OAA5B,CAAoCnK,QAAQ;MAC1C,IAAIA,QAAQ,CAACuW,IAAT,KAAkB,eAAtB,EAAuC;QACrCvW,QAAQ,CAACtG,MAAT,CAAgBwE,WAAhB,GAA8B8B,QAAQ,CAACwW,QAAvC;QACA;MACD;MAEDxW,QAAQ,CAACY,YAAT,CAAsBuJ,OAAtB,CAA8BxM,IAAI;QAChCqC,QAAQ,CAACtG,MAAT,CAAgB+c,YAAhB,CAA6B9Y,IAA7B,EAAmCqC,QAAQ,CAAC0W,WAA5C;MACD,CAFD;MAIA1W,QAAQ,CAACW,UAAT,CAAoBwJ,OAApB,CAA4BxM,IAAI;QAC9BqC,QAAQ,CAACtG,MAAT,CAAgB2Q,WAAhB,CAA4B1M,IAA5B;MACD,CAFD;IAGD,CAbD;;IAgBAqY,KAAK;EACN;EAED,OAAO;IACLC,iBADK;IAELI,UAFK;IAGLL;EAHK,CAAP;AAKD,CA/CM;ACFP,IAAMW,0BAAwB,GAAyB;EACrDC,OAAO,EAAE,IAD4C;EAErDC,SAAS,EAAE,IAF0C;EAGrDC,aAAa,EAAE,IAHsC;EAIrDC,qBAAqB,EAAE;AAJ8B,CAAvD;AAaA;;AACA,MAAMC,mBAAN,SAAkCC,SAAlC;EAAAxc;;IAEE,eAA6C,IAA7C;IAEQ,eAAoC,IAApC;IACA,wBAA4C,IAA5C;EA6CT;EA3CCyc,OAAO;;IACL,IAAM;MAAEvZ;IAAF,IAAW,KAAKiP,KAAtB;IACA,IAAI,CAACjP,IAAI,CAAC4M,OAAV,EAAmB;MACjB,MAAM,IAAI9H,KAAJ,CAAU,wDAAV,CAAN;IACD;IAED,8BAAK0U,gBAAL,gFAAuBD,OAAvB,CAA+BvZ,IAAI,CAAC4M,OAApC,EAA6CoM,0BAA7C;EACD;EAEDS,iBAAiB;IACf,IAAM;MAAEtB;IAAF,IAAwB,KAAKlJ,KAAnC;IACA,IAAM7M,MAAM,GAAG,KAAKgS,OAApB;IAEA,KAAKsF,OAAL,GAAexB,uBAAuB,CAAC9V,MAAD,EAAS+V,iBAAT,CAAtC;IACA,KAAKqB,gBAAL,GAAwB,IAAIG,gBAAJ,CAAqB,KAAKD,OAAL,CAAapB,iBAAlC,CAAxB;IAEA,KAAKiB,OAAL;EACD;EAEDK,uBAAuB;;IACrB,IAAMC,gBAAgB,6BAAG,KAAKL,gBAAR,2DAAGM,uBAAuBC,WAAvB,EAAzB;IACA,IAAIF,gBAAJ,aAAIA,gBAAJ,eAAIA,gBAAgB,CAAE1d,MAAtB,EAA8B;MAAA;MAC5B,sBAAKud,OAAL,gEAAcpB,iBAAd,CAAgCuB,gBAAhC;IACD;IAED,+BAAKL,gBAAL,kFAAuBQ,UAAvB;IACA,uBAAKN,OAAL,kEAAchB,UAAd;IAEA,OAAO,IAAP;EACD;EAEDuB,kBAAkB;;IAChB,uBAAKP,OAAL,kEAAcrB,KAAd;IACA,KAAKkB,OAAL;EACD;EAEDW,oBAAoB;;IAClB,+BAAKV,gBAAL,kFAAuBQ,UAAvB;EACD;EAEDG,MAAM;IACJ,OAAO,KAAKlL,KAAL,CAAWQ,QAAlB;EACD;;AAhDM4J,kCAAcnJ,aAAd;AAmDF,IAAMkK,UAAU,GAAmCvW,UAAU,GAChEwV,mBADgE,GAEhEtW;EAAA,IAAC;IAAE0M;EAAF,CAAD;EAAA,oBAAkBrM,0CAAGqM,QAAH,CAAlB;AAAA,CAFG;;AC3DP;;;;;SAIgB4K,gBAAgBjY,QAAgBkY;EAC9C,IAAM;IAAEpV,IAAF;IAAQqV;EAAR,IAAiBD,QAAvB;EACA,IAAI,CAACnV,MAAM,CAAC2I,OAAP,CAAe1L,MAAf,EAAuB8C,IAAvB,CAAL,EAAmC;IACjC,OAAO,KAAP;EACD;EAED,IAAMlF,IAAI,GAAGZ,IAAI,CAACyF,GAAL,CAASzC,MAAT,EAAiB8C,IAAjB,CAAb;EACA,IAAI,CAACvG,MAAI,CAAC6b,MAAL,CAAYxa,IAAZ,CAAL,EAAwB;IACtB,OAAO,KAAP;EACD;EAED,IAAIua,IAAI,CAACrS,KAAL,KAAelI,IAAI,CAACoB,IAAL,CAAUjF,MAAzB,IAAmCoe,IAAI,CAACnZ,IAAL,CAAUjF,MAAV,KAAqB,CAA5D,EAA+D;IAC7D,OACE6D,IAAI,CAACoB,IAAL,CAAUmL,KAAV,CAAgBgO,IAAI,CAACrS,KAArB,EAA4BqS,IAAI,CAACrS,KAAL,GAAaqS,IAAI,CAACnZ,IAAL,CAAUjF,MAAnD,MAA+Doe,IAAI,CAACnZ,IADtE;EAGD;EAED,IAAMqZ,QAAQ,GAAGpL,IAAI,CAACsC,IAAL,CAAUzM,IAAV,CAAjB;EACA,IAAI,CAACC,MAAM,CAAC2I,OAAP,CAAe1L,MAAf,EAAuBqY,QAAvB,CAAL,EAAuC;IACrC,OAAO,KAAP;EACD;EAED,IAAMC,QAAQ,GAAGtb,IAAI,CAACyF,GAAL,CAASzC,MAAT,EAAiBqY,QAAjB,CAAjB;EACA,OAAO9b,MAAI,CAAC6b,MAAL,CAAYE,QAAZ,KAAyBA,QAAQ,CAACtZ,IAAT,CAAcqH,UAAd,CAAyB8R,IAAI,CAACnZ,IAA9B,CAAhC;AACD;AAED,SAASuZ,eAAT,CAAyBvZ,IAAzB;oCAA0CwZ;IAAAA;;EACxC,OAAOA,KAAK,CAACC,MAAN,CACL,CAACzZ,IAAD,EAAOmZ,IAAP,KACEnZ,IAAI,CAACmL,KAAL,CAAW,CAAX,EAAcgO,IAAI,CAACrS,KAAnB,IAA4BqS,IAAI,CAACnZ,IAAjC,GAAwCA,IAAI,CAACmL,KAAL,CAAWgO,IAAI,CAAClS,GAAhB,CAFrC,EAGLjH,IAHK,CAAP;AAKD;AAED,SAAS0Z,yBAAT,CAAmCC,GAAnC,EAAgDpM,OAAhD;EACE,IAAMxS,MAAM,GAAGuM,IAAI,CAACC,GAAL,CAASoS,GAAG,CAAC5e,MAAb,EAAqBwS,OAAO,CAACxS,MAA7B,CAAf;EAEA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;IAC/B,IAAI6e,GAAG,CAACC,MAAJ,CAAW9e,CAAX,MAAkByS,OAAO,CAACqM,MAAR,CAAe9e,CAAf,CAAtB,EAAyC;MACvC,OAAOA,CAAP;IACD;EACF;EAED,OAAOC,MAAP;AACD;AAED,SAAS8e,yBAAT,CACEF,GADF,EAEEpM,OAFF,EAGE/F,GAHF;EAKE,IAAMzM,MAAM,GAAGuM,IAAI,CAACC,GAAL,CAASoS,GAAG,CAAC5e,MAAb,EAAqBwS,OAAO,CAACxS,MAA7B,EAAqCyM,GAArC,CAAf;EAEA,KAAK,IAAI1M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;IAC/B,IACE6e,GAAG,CAACC,MAAJ,CAAWD,GAAG,CAAC5e,MAAJ,GAAaD,CAAb,GAAiB,CAA5B,MAAmCyS,OAAO,CAACqM,MAAR,CAAerM,OAAO,CAACxS,MAAR,GAAiBD,CAAjB,GAAqB,CAApC,CADrC,EAEE;MACA,OAAOA,CAAP;IACD;EACF;EAED,OAAOC,MAAP;AACD;AAED;;;;SAGgB+e,oBAAoBC,YAAoBZ;EACtD,IAAM;IAAErS,KAAF;IAASG,GAAT;IAAcjH;EAAd,IAAuBmZ,IAA7B;EACA,IAAMa,WAAW,GAAGD,UAAU,CAAC5O,KAAX,CAAiBrE,KAAjB,EAAwBG,GAAxB,CAApB;EAEA,IAAMgT,YAAY,GAAGP,yBAAyB,CAACM,WAAD,EAAcha,IAAd,CAA9C;EACA,IAAMwH,GAAG,GAAGF,IAAI,CAACC,GAAL,CACVyS,WAAW,CAACjf,MAAZ,GAAqBkf,YADX,EAEVja,IAAI,CAACjF,MAAL,GAAckf,YAFJ,CAAZ;EAIA,IAAMC,YAAY,GAAGL,yBAAyB,CAACG,WAAD,EAAcha,IAAd,EAAoBwH,GAApB,CAA9C;EAEA,IAAM2S,UAAU,GAAe;IAC7BrT,KAAK,EAAEA,KAAK,GAAGmT,YADc;IAE7BhT,GAAG,EAAEA,GAAG,GAAGiT,YAFkB;IAG7Bla,IAAI,EAAEA,IAAI,CAACmL,KAAL,CAAW8O,YAAX,EAAyBja,IAAI,CAACjF,MAAL,GAAcmf,YAAvC;EAHuB,CAA/B;EAMA,IAAIC,UAAU,CAACrT,KAAX,KAAqBqT,UAAU,CAAClT,GAAhC,IAAuCkT,UAAU,CAACna,IAAX,CAAgBjF,MAAhB,KAA2B,CAAtE,EAAyE;IACvE,OAAO,IAAP;EACD;EAED,OAAOof,UAAP;AACD;AAED;;;;;SAIgBC,iBACdL,YACAM,GACAC;EAEA,IAAMxT,KAAK,GAAGQ,IAAI,CAACC,GAAL,CAAS8S,CAAC,CAACvT,KAAX,EAAkBwT,CAAC,CAACxT,KAApB,CAAd;EACA,IAAMyT,OAAO,GAAGjT,IAAI,CAACE,GAAL,CACd,CADc,EAEdF,IAAI,CAACC,GAAL,CAAS8S,CAAC,CAACvT,KAAF,GAAUuT,CAAC,CAACra,IAAF,CAAOjF,MAA1B,EAAkCuf,CAAC,CAACrT,GAApC,IAA2CqT,CAAC,CAACxT,KAF/B,CAAhB;EAKA,IAAM0T,OAAO,GAAGjB,eAAe,CAACQ,UAAD,EAAaM,CAAb,EAAgBC,CAAhB,CAA/B;EACA,IAAMG,QAAQ,GAAGnT,IAAI,CAACE,GAAL,CACf8S,CAAC,CAACxT,KAAF,GAAUwT,CAAC,CAACta,IAAF,CAAOjF,MADF,EAEfsf,CAAC,CAACvT,KAAF,GACEuT,CAAC,CAACra,IAAF,CAAOjF,MADT,IAEGsf,CAAC,CAACvT,KAAF,GAAUuT,CAAC,CAACra,IAAF,CAAOjF,MAAjB,GAA0Buf,CAAC,CAACxT,KAA5B,GAAoCwT,CAAC,CAACta,IAAF,CAAOjF,MAA3C,GAAoD,CAFvD,IAGEwf,OALa,CAAjB;EAQA,IAAMva,IAAI,GAAGwa,OAAO,CAACrP,KAAR,CAAcrE,KAAd,EAAqB2T,QAArB,CAAb;EACA,IAAMxT,GAAG,GAAGK,IAAI,CAACE,GAAL,CAAS6S,CAAC,CAACpT,GAAX,EAAgBqT,CAAC,CAACrT,GAAF,GAAQoT,CAAC,CAACra,IAAF,CAAOjF,MAAf,IAAyBsf,CAAC,CAACpT,GAAF,GAAQoT,CAAC,CAACvT,KAAnC,CAAhB,CAAZ;EACA,OAAOgT,mBAAmB,CAACC,UAAD,EAAa;IAAEjT,KAAF;IAASG,GAAT;IAAcjH;EAAd,CAAb,CAA1B;AACD;AAED;;;;SAGgB0a,YAAYxB;EAC1B,IAAM;IAAEpV,IAAF;IAAQqV;EAAR,IAAiBD,QAAvB;EACA,OAAO;IACLvR,MAAM,EAAE;MAAE7D,IAAF;MAAQjF,MAAM,EAAEsa,IAAI,CAACrS;IAArB,CADH;IAEL/B,KAAK,EAAE;MAAEjB,IAAF;MAAQjF,MAAM,EAAEsa,IAAI,CAAClS;IAArB;EAFF,CAAP;AAID;AAED;;;;;;;SAMgB0T,eAAe3Z,QAAgBwF;EAC7C,IAAI;IAAE1C,IAAF;IAAQjF;EAAR,IAAmB2H,KAAvB;EACA,IAAI,CAACzC,MAAM,CAAC2I,OAAP,CAAe1L,MAAf,EAAuB8C,IAAvB,CAAL,EAAmC;IACjC,OAAO,IAAP;EACD;EAED,IAAIgK,IAAI,GAAG9P,IAAI,CAACyF,GAAL,CAASzC,MAAT,EAAiB8C,IAAjB,CAAX;EACA,IAAI,CAACvG,MAAI,CAAC6b,MAAL,CAAYtL,IAAZ,CAAL,EAAwB;IACtB,OAAO,IAAP;EACD;EAED,IAAM8M,WAAW,GAAG7W,MAAM,CAAC8W,KAAP,CAAa7Z,MAAb,EAAqB;IACvCF,KAAK,EAAEtF,CAAC,IAAIuI,MAAM,CAAC+W,OAAP,CAAe9Z,MAAf,EAAuBxF,CAAvB,CAD2B;IAEvCkL,EAAE,EAAE5C;EAFmC,CAArB,CAApB;EAKA,IAAI,CAAC8W,WAAL,EAAkB;IAChB,OAAO,IAAP;EACD;EAED,OAAO/b,MAAM,GAAGiP,IAAI,CAAC9N,IAAL,CAAUjF,MAA1B,EAAkC;IAChC,IAAMggB,KAAK,GAAGhX,MAAM,CAACwM,IAAP,CAAYvP,MAAZ,EAAoB;MAAE0F,EAAE,EAAE5C,IAAN;MAAYhD,KAAK,EAAEvD,MAAI,CAAC6b;IAAxB,CAApB,CAAd;IACA,IAAI,CAAC2B,KAAD,IAAU,CAAC9M,IAAI,CAAC+M,YAAL,CAAkBD,KAAK,CAAC,CAAD,CAAvB,EAA4BH,WAAW,CAAC,CAAD,CAAvC,CAAf,EAA4D;MAC1D,OAAO,IAAP;IACD;IAED/b,MAAM,IAAIiP,IAAI,CAAC9N,IAAL,CAAUjF,MAApB;IACA+S,IAAI,GAAGiN,KAAK,CAAC,CAAD,CAAZ;IACAjX,IAAI,GAAGiX,KAAK,CAAC,CAAD,CAAZ;EACD;EAED,OAAO;IAAEjX,IAAF;IAAQjF;EAAR,CAAP;AACD;AAED;;;;SAGgBoc,eAAeja,QAAgB0G;EAC7C,IAAMC,MAAM,GAAGgT,cAAc,CAAC3Z,MAAD,EAAS0G,KAAK,CAACC,MAAf,CAA7B;EACA,IAAI,CAACA,MAAL,EAAa;IACX,OAAO,IAAP;EACD;EAED,IAAIE,KAAK,CAACG,WAAN,CAAkBN,KAAlB,CAAJ,EAA8B;IAC5B,OAAO;MAAEC,MAAF;MAAU5C,KAAK,EAAE4C;IAAjB,CAAP;EACD;EAED,IAAM5C,KAAK,GAAG4V,cAAc,CAAC3Z,MAAD,EAAS0G,KAAK,CAAC3C,KAAf,CAA5B;EACA,IAAI,CAACA,KAAL,EAAY;IACV,OAAO,IAAP;EACD;EAED,OAAO;IAAE4C,MAAF;IAAU5C;EAAV,CAAP;AACD;SAEemW,sBACdla,QACAwF,OACA2U;EAEA,IAAMC,YAAY,GAAGte,uBAAuB,CAAC2G,GAAxB,CAA4BzC,MAA5B,CAArB;EACA,IAAMkY,QAAQ,GAAGkC,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAE1Z,IAAd,CAAmBC;IAAA,IAAC;MAAEmC;IAAF,CAAD;IAAA,OAClCmK,IAAI,CAACN,MAAL,CAAY7J,IAAZ,EAAkB0C,KAAK,CAAC1C,IAAxB,CADkC;EAAA,CAAnB,CAAjB;EAIA,IAAI,CAACoV,QAAD,IAAa1S,KAAK,CAAC3H,MAAN,IAAgBqa,QAAQ,CAACC,IAAT,CAAcrS,KAA/C,EAAsD;IACpD,OAAOuU,KAAK,CAACC,SAAN,CAAgB9U,KAAhB,EAAuB2U,EAAvB,EAA2B;MAAEI,QAAQ,EAAE;IAAZ,CAA3B,CAAP;EACD;EAED,IAAM;IAAEpC;EAAF,IAAWD,QAAjB;EAEA;;EACA,IAAI1S,KAAK,CAAC3H,MAAN,IAAgBsa,IAAI,CAACrS,KAAL,GAAaqS,IAAI,CAACnZ,IAAL,CAAUjF,MAA3C,EAAmD;IACjD,IAAM4M,OAAM,GAAG;MAAE7D,IAAI,EAAE0C,KAAK,CAAC1C,IAAd;MAAoBjF,MAAM,EAAEsa,IAAI,CAACrS;IAAjC,CAAf;IACA,IAAM0U,YAAW,GAAGH,KAAK,CAACC,SAAN,CAAgB3T,OAAhB,EAAwBwT,EAAxB,EAA4B;MAC9CI,QAAQ,EAAE;IADoC,CAA5B,CAApB;IAIA,IAAI,CAACC,YAAL,EAAkB;MAChB,OAAO,IAAP;IACD;IAED,OAAO;MACL1X,IAAI,EAAE0X,YAAW,CAAC1X,IADb;MAELjF,MAAM,EAAE2c,YAAW,CAAC3c,MAAZ,GAAqB2H,KAAK,CAAC3H,MAA3B,GAAoCsa,IAAI,CAACrS;IAF5C,CAAP;EAID;;EAGD,IAAMa,MAAM,GAAG;IACb7D,IAAI,EAAE0C,KAAK,CAAC1C,IADC;IAEbjF,MAAM,EAAE2H,KAAK,CAAC3H,MAAN,GAAesa,IAAI,CAACnZ,IAAL,CAAUjF,MAAzB,GAAkCoe,IAAI,CAAClS,GAAvC,GAA6CkS,IAAI,CAACrS;EAF7C,CAAf;EAIA,IAAM0U,WAAW,GAAGH,KAAK,CAACC,SAAN,CAAgB3T,MAAhB,EAAwBwT,EAAxB,EAA4B;IAC9CI,QAAQ,EAAE;EADoC,CAA5B,CAApB;EAGA,IAAI,CAACC,WAAL,EAAkB;IAChB,OAAO,IAAP;EACD;EAED,IACEL,EAAE,CAAC3D,IAAH,KAAY,YAAZ,IACAvJ,IAAI,CAACN,MAAL,CAAYwN,EAAE,CAACrX,IAAf,EAAqB0C,KAAK,CAAC1C,IAA3B,CADA,IAEA6D,MAAM,CAAC9I,MAAP,GAAgBsc,EAAE,CAACjR,QAFnB,IAGAiP,IAAI,CAACrS,KAAL,GAAaqU,EAAE,CAACjR,QAJlB,EAKE;IACA,OAAOsR,WAAP;EACD;EAED,OAAO;IACL1X,IAAI,EAAE0X,WAAW,CAAC1X,IADb;IAELjF,MAAM,EAAE2c,WAAW,CAAC3c,MAAZ,GAAqBsa,IAAI,CAACnZ,IAAL,CAAUjF,MAA/B,GAAwCoe,IAAI,CAAClS,GAA7C,GAAmDkS,IAAI,CAACrS;EAF3D,CAAP;AAID;SAEe2U,sBACdza,QACA0G,OACAyT;EAEA,IAAMxT,MAAM,GAAGuT,qBAAqB,CAACla,MAAD,EAAS0G,KAAK,CAACC,MAAf,EAAuBwT,EAAvB,CAApC;EACA,IAAI,CAACxT,MAAL,EAAa;IACX,OAAO,IAAP;EACD;EAED,IAAIE,KAAK,CAACG,WAAN,CAAkBN,KAAlB,CAAJ,EAA8B;IAC5B,OAAO;MAAEC,MAAF;MAAU5C,KAAK,EAAE4C;IAAjB,CAAP;EACD;EAED,IAAM5C,KAAK,GAAGmW,qBAAqB,CAACla,MAAD,EAAS0G,KAAK,CAAC3C,KAAf,EAAsBoW,EAAtB,CAAnC;EACA,IAAI,CAACpW,KAAL,EAAY;IACV,OAAO,IAAP;EACD;EAED,OAAO;IAAE4C,MAAF;IAAU5C;EAAV,CAAP;AACD;SAEe2W,kBACdxC,UACAiC;EAEA,IAAM;IAAErX,IAAF;IAAQqV,IAAR;IAAcxd;EAAd,IAAqBud,QAA3B;EAEA,QAAQiC,EAAE,CAAC3D,IAAX;IACE,KAAK,aAAL;MAAoB;QAClB,IAAI,CAACvJ,IAAI,CAACN,MAAL,CAAYwN,EAAE,CAACrX,IAAf,EAAqBA,IAArB,CAAD,IAA+BqX,EAAE,CAACtc,MAAH,IAAasa,IAAI,CAAClS,GAArD,EAA0D;UACxD,OAAOiS,QAAP;QACD;QAED,IAAIiC,EAAE,CAACtc,MAAH,IAAasa,IAAI,CAACrS,KAAtB,EAA6B;UAC3B,OAAO;YACLqS,IAAI,EAAE;cACJrS,KAAK,EAAEqU,EAAE,CAACnb,IAAH,CAAQjF,MAAR,GAAiBoe,IAAI,CAACrS,KADzB;cAEJG,GAAG,EAAEkU,EAAE,CAACnb,IAAH,CAAQjF,MAAR,GAAiBoe,IAAI,CAAClS,GAFvB;cAGJjH,IAAI,EAAEmZ,IAAI,CAACnZ;YAHP,CADD;YAMLrE,EANK;YAOLmI;UAPK,CAAP;QASD;QAED,OAAO;UACLqV,IAAI,EAAE;YACJrS,KAAK,EAAEqS,IAAI,CAACrS,KADR;YAEJG,GAAG,EAAEkS,IAAI,CAAClS,GAAL,GAAWkU,EAAE,CAACnb,IAAH,CAAQjF,MAFpB;YAGJiF,IAAI,EAAEmZ,IAAI,CAACnZ;UAHP,CADD;UAMLrE,EANK;UAOLmI;QAPK,CAAP;MASD;IACD,KAAK,aAAL;MAAoB;QAClB,IAAI,CAACmK,IAAI,CAACN,MAAL,CAAYwN,EAAE,CAACrX,IAAf,EAAqBA,IAArB,CAAD,IAA+BqX,EAAE,CAACtc,MAAH,IAAasa,IAAI,CAAClS,GAArD,EAA0D;UACxD,OAAOiS,QAAP;QACD;QAED,IAAIiC,EAAE,CAACtc,MAAH,GAAYsc,EAAE,CAACnb,IAAH,CAAQjF,MAApB,IAA8Boe,IAAI,CAACrS,KAAvC,EAA8C;UAC5C,OAAO;YACLqS,IAAI,EAAE;cACJrS,KAAK,EAAEqS,IAAI,CAACrS,KAAL,GAAaqU,EAAE,CAACnb,IAAH,CAAQjF,MADxB;cAEJkM,GAAG,EAAEkS,IAAI,CAAClS,GAAL,GAAWkU,EAAE,CAACnb,IAAH,CAAQjF,MAFpB;cAGJiF,IAAI,EAAEmZ,IAAI,CAACnZ;YAHP,CADD;YAMLrE,EANK;YAOLmI;UAPK,CAAP;QASD;QAED,OAAO;UACLqV,IAAI,EAAE;YACJrS,KAAK,EAAEqS,IAAI,CAACrS,KADR;YAEJG,GAAG,EAAEkS,IAAI,CAAClS,GAAL,GAAWkU,EAAE,CAACnb,IAAH,CAAQjF,MAFpB;YAGJiF,IAAI,EAAEmZ,IAAI,CAACnZ;UAHP,CADD;UAMLrE,EANK;UAOLmI;QAPK,CAAP;MASD;IACD,KAAK,YAAL;MAAmB;QACjB,IAAI,CAACmK,IAAI,CAACN,MAAL,CAAYwN,EAAE,CAACrX,IAAf,EAAqBA,IAArB,CAAD,IAA+BqX,EAAE,CAACjR,QAAH,IAAeiP,IAAI,CAAClS,GAAvD,EAA4D;UAC1D,OAAO;YACLkS,IADK;YAELxd,EAFK;YAGLmI,IAAI,EAAEmK,IAAI,CAACqN,SAAL,CAAexX,IAAf,EAAqBqX,EAArB,EAAyB;cAAEI,QAAQ,EAAE;YAAZ,CAAzB;UAHD,CAAP;QAKD;QAED,IAAIJ,EAAE,CAACjR,QAAH,GAAciP,IAAI,CAACrS,KAAvB,EAA8B;UAC5B,OAAO;YACLqS,IAAI,EAAE;cACJrS,KAAK,EAAEqS,IAAI,CAACrS,KADR;cAEJG,GAAG,EAAEK,IAAI,CAACC,GAAL,CAAS4T,EAAE,CAACjR,QAAZ,EAAsBiP,IAAI,CAAClS,GAA3B,CAFD;cAGJjH,IAAI,EAAEmZ,IAAI,CAACnZ;YAHP,CADD;YAMLrE,EANK;YAOLmI;UAPK,CAAP;QASD;QAED,OAAO;UACLqV,IAAI,EAAE;YACJrS,KAAK,EAAEqS,IAAI,CAACrS,KAAL,GAAaqU,EAAE,CAACjR,QADnB;YAEJjD,GAAG,EAAEkS,IAAI,CAAClS,GAAL,GAAWkU,EAAE,CAACjR,QAFf;YAGJlK,IAAI,EAAEmZ,IAAI,CAACnZ;UAHP,CADD;UAMLrE,EANK;UAOLmI,IAAI,EAAEmK,IAAI,CAACqN,SAAL,CAAexX,IAAf,EAAqBqX,EAArB,EAAyB;YAAEI,QAAQ,EAAE;UAAZ,CAAzB;QAPD,CAAP;MASD;IACD,KAAK,YAAL;MAAmB;QACjB,IAAI,CAACtN,IAAI,CAACN,MAAL,CAAYwN,EAAE,CAACrX,IAAf,EAAqBA,IAArB,CAAL,EAAiC;UAC/B,OAAO;YACLqV,IADK;YAELxd,EAFK;YAGLmI,IAAI,EAAEmK,IAAI,CAACqN,SAAL,CAAexX,IAAf,EAAqBqX,EAArB;UAHD,CAAP;QAKD;QAED,OAAO;UACLhC,IAAI,EAAE;YACJrS,KAAK,EAAEqS,IAAI,CAACrS,KAAL,GAAaqU,EAAE,CAACjR,QADnB;YAEJjD,GAAG,EAAEkS,IAAI,CAAClS,GAAL,GAAWkU,EAAE,CAACjR,QAFf;YAGJlK,IAAI,EAAEmZ,IAAI,CAACnZ;UAHP,CADD;UAMLrE,EANK;UAOLmI,IAAI,EAAEmK,IAAI,CAACqN,SAAL,CAAexX,IAAf,EAAqBqX,EAArB;QAPD,CAAP;MASD;EAAA;EAGH,IAAMQ,OAAO,GAAG1N,IAAI,CAACqN,SAAL,CAAexX,IAAf,EAAqBqX,EAArB,CAAhB;EACA,IAAI,CAACQ,OAAL,EAAc;IACZ,OAAO,IAAP;EACD;EAED,OAAO;IACLxC,IADK;IAELrV,IAAI,EAAE6X,OAFD;IAGLhgB;EAHK,CAAP;AAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpYD;;AACA,IAAMigB,aAAa,GAAG,EAAtB;;AAGA,IAAMC,WAAW,GAAG,GAApB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,KAAd;SA8BgBC;MAA0B;IACxC/a,MADwC;IAExCgb,4BAFwC;IAGxCC;EAHwC;EAKxC,IAAIC,QAAQ,GAAuB,KAAnC;EACA,IAAIC,uBAAuB,GAAyC,IAApE;EACA,IAAIC,cAAc,GAAyC,IAA3D;EACA,IAAIC,eAAe,GAAyC,IAA5D;EAEA,IAAIC,SAAS,GAAG,CAAhB;EACA,IAAIC,kBAAkB,GAA8B,KAApD;EAEA,IAAMC,qBAAqB,GAAG;IAC5B,IAAMC,gBAAgB,GAAGzf,2BAA2B,CAACyG,GAA5B,CAAgCzC,MAAhC,CAAzB;IACAhE,2BAA2B,CAAC0S,MAA5B,CAAmC1O,MAAnC;IAEA,IAAIyb,gBAAJ,EAAsB;MACpB,IAAM;QAAEvX;MAAF,IAAgBlE,MAAtB;MACA,IAAMmZ,UAAU,GAAGc,cAAc,CAACja,MAAD,EAASyb,gBAAT,CAAjC;MAIA,IAAItC,UAAU,KAAK,CAACjV,SAAD,IAAc,CAAC2C,KAAK,CAAC8F,MAAN,CAAawM,UAAb,EAAyBjV,SAAzB,CAApB,CAAd,EAAwE;QACtEI,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0BmZ,UAA1B;MACD;IACF;EACF,CAdD;EAgBA,IAAMwC,aAAa,GAAG;IACpB,IAAMC,MAAM,GAAG7f,wBAAwB,CAAC0G,GAAzB,CAA6BzC,MAA7B,CAAf;IACAjE,wBAAwB,CAAC2S,MAAzB,CAAgC1O,MAAhC;IACA,IAAI,CAAC4b,MAAL,EAAa;MACX;IACD;IAED,IAAIA,MAAM,CAAClW,EAAX,EAAe;MACb,IAAM/L,MAAM,GAAG0gB,KAAK,CAACwB,OAAN,CAAcD,MAAM,CAAClW,EAArB,IACXiU,cAAc,CAAC3Z,MAAD,EAAS4b,MAAM,CAAClW,EAAhB,CADH,GAEXuU,cAAc,CAACja,MAAD,EAAS4b,MAAM,CAAClW,EAAhB,CAFlB;MAIA,IAAI,CAAC/L,MAAL,EAAa;QACX;MACD;MAED,IAAM+f,YAAW,GAAG3W,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqBrG,MAArB,CAApB;MACA,IAAI,CAACqG,MAAM,CAACkE,SAAR,IAAqB,CAAC2C,KAAK,CAAC8F,MAAN,CAAa3M,MAAM,CAACkE,SAApB,EAA+BwV,YAA/B,CAA1B,EAAuE;QACrEpV,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0BrG,MAA1B;MACD;IACF;IAEDiiB,MAAM,CAACE,GAAP;EACD,CAvBD;EAyBA,IAAMC,KAAK,GAAG;;IACZ,IAAIX,cAAJ,EAAoB;MAClBY,YAAY,CAACZ,cAAD,CAAZ;MACAA,cAAc,GAAG,IAAjB;IACD;IAED,IAAIC,eAAJ,EAAqB;MACnBW,YAAY,CAACX,eAAD,CAAZ;MACAA,eAAe,GAAG,IAAlB;IACD;IAED,IAAI,CAACY,eAAe,EAAhB,IAAsB,CAACC,gBAAgB,EAA3C,EAA+C;MAC7CV,qBAAqB;MACrB;IACD;IAED,IAAI,CAACN,QAAL,EAAe;MACbA,QAAQ,GAAG,IAAX;MACAiB,UAAU,CAAC,MAAOjB,QAAQ,GAAG,KAAnB,CAAV;IACD;IAED,IAAIgB,gBAAgB,EAApB,EAAwB;MACtBhB,QAAQ,GAAG,QAAX;IACD;IAED,IAAMkB,YAAY,GAChBpc,MAAM,CAACkE,SAAP,IACAnB,MAAM,CAACsZ,QAAP,CAAgBrc,MAAhB,EAAwBA,MAAM,CAACkE,SAA/B,EAA0C;MAAEqW,QAAQ,EAAE;IAAZ,CAA1C,CAFF;IAGA1e,oBAAoB,CAAC+G,GAArB,CAAyB5C,MAAzB,EAAiCA,MAAM,CAACsc,KAAxC;IAEAxB,KAAK,CACH,OADG,EAEH/e,wBAAwB,CAAC0G,GAAzB,CAA6BzC,MAA7B,CAFG,EAGHlE,uBAAuB,CAAC2G,GAAxB,CAA4BzC,MAA5B,CAHG,CAAL;IAMA,IAAIuc,uBAAuB,GAAG,CAAC,2BAACzgB,uBAAuB,CAAC2G,GAAxB,CAA4BzC,MAA5B,CAAD,kDAACwc,sBAAqCziB,MAAtC,CAA/B;IAEA,IAAIoe,IAAJ;IACA,OAAQA,IAAI,6BAAGrc,uBAAuB,CAAC2G,GAAxB,CAA4BzC,MAA5B,CAAH,2DAAGyc,uBAAsC,CAAtC,CAAf,EAA0D;MAAA;MACxD,IAAMC,YAAY,GAAG9gB,iCAAiC,CAAC6G,GAAlC,CAAsCzC,MAAtC,CAArB;MAEA,IAAI0c,YAAY,KAAKC,SAArB,EAAgC;QAC9B/gB,iCAAiC,CAAC8S,MAAlC,CAAyC1O,MAAzC;QACAA,MAAM,CAACsc,KAAP,GAAeI,YAAf;MACD;MAED,IAAIA,YAAY,IAAInB,kBAAkB,KAAK,KAA3C,EAAkD;QAChDA,kBAAkB,GAAG,IAArB;MAED;MAED,IAAM7U,KAAK,GAAGgT,WAAW,CAACvB,IAAD,CAAzB;MACA,IAAI,CAACnY,MAAM,CAACkE,SAAR,IAAqB,CAAC2C,KAAK,CAAC8F,MAAN,CAAa3M,MAAM,CAACkE,SAApB,EAA+BwC,KAA/B,CAA1B,EAAiE;QAC/DpC,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0B0G,KAA1B;MACD;MAED,IAAIyR,IAAI,CAACA,IAAL,CAAUnZ,IAAd,EAAoB;QAClB+D,MAAM,CAAC6Z,UAAP,CAAkB5c,MAAlB,EAA0BmY,IAAI,CAACA,IAAL,CAAUnZ,IAApC;MACD,CAFD,MAEO;QACL+D,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB;MACD,CAtBuD;MAyBxD;;MACAlE,uBAAuB,CAAC8G,GAAxB,CACE5C,MADF,4BAEElE,uBAAuB,CAAC2G,GAAxB,CAA4BzC,MAA5B,CAFF,2DAEE8c,uBAAqCzG,MAArC,CACE0G;QAAA,IAAC;UAAEpiB;QAAF,CAAD;QAAA,OAAYA,EAAE,KAAKwd,IAAK,CAACxd,EAAzB;MAAA,CADF,CAFF;MAOA,IAAI,CAACsd,eAAe,CAACjY,MAAD,EAASmY,IAAT,CAApB,EAAoC;QAElCoE,uBAAuB,GAAG,KAA1B;QACAxgB,wBAAwB,CAAC2S,MAAzB,CAAgC1O,MAAhC;QACAnE,oBAAoB,CAAC6S,MAArB,CAA4B1O,MAA5B;QACAkb,QAAQ,GAAG,QAAX,CALkC;QAQlC;;QACAlf,2BAA2B,CAAC0S,MAA5B,CAAmC1O,MAAnC;QACAgb,4BAA4B,CAACgC,MAA7B;QACA/B,oBAAoB,CAAC+B,MAArB;QACAZ,YAAY,SAAZ,gBAAY,WAAZ,wBAAY,CAAEa,KAAd;MACD;IACF;IAED,IAAM/Y,SAAS,GAAGkY,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEa,KAAd,EAAlB;IACA,IACE/Y,SAAS,IACT,CAAClI,2BAA2B,CAACyG,GAA5B,CAAgCzC,MAAhC,CADD,KAEC,CAACA,MAAM,CAACkE,SAAR,IAAqB,CAAC2C,KAAK,CAAC8F,MAAN,CAAazI,SAAb,EAAwBlE,MAAM,CAACkE,SAA/B,CAFvB,CADF,EAIE;MACAI,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0BkE,SAA1B;IACD;IAED,IAAIgY,gBAAgB,EAApB,EAAwB;MACtBP,aAAa;MACb;IACD;IAGD;IACA;;IACA,IAAIY,uBAAJ,EAA6B;MAE3BvB,4BAA4B;IAC7B;IAEDA,4BAA4B,CAACe,KAA7B;IACAd,oBAAoB,CAACc,KAArB;IAEAP,qBAAqB;IAErB,IAAM0B,SAAS,GAAGrhB,oBAAoB,CAAC4G,GAArB,CAAyBzC,MAAzB,CAAlB;IACAnE,oBAAoB,CAAC6S,MAArB,CAA4B1O,MAA5B;IACA,IAAIkd,SAAS,KAAKP,SAAlB,EAA6B;MAC3B3c,MAAM,CAACsc,KAAP,GAAeY,SAAf;MACAld,MAAM,CAACmd,QAAP;IACD;EACF,CAzHD;EA2HA,IAAMC,oBAAoB,GACxBC,MAD2B;IAG3B,IAAIlC,uBAAJ,EAA6B;MAC3Ba,YAAY,CAACb,uBAAD,CAAZ;IACD;IAEDA,uBAAuB,GAAGgB,UAAU,CAAC;MACnC3gB,YAAY,CAACoH,GAAb,CAAiB5C,MAAjB,EAAyB,KAAzB;MACA+b,KAAK;IACN,CAHmC,EAGjCnB,aAHiC,CAApC;EAID,CAXD;EAaA,IAAM0C,sBAAsB,GAC1BD,MAD6B;IAK7B7hB,YAAY,CAACoH,GAAb,CAAiB5C,MAAjB,EAAyB,IAAzB;IAEA,IAAImb,uBAAJ,EAA6B;MAC3Ba,YAAY,CAACb,uBAAD,CAAZ;MACAA,uBAAuB,GAAG,IAA1B;IACD;EACF,CAXD;EAaA,IAAMoC,2BAA2B,GAAG,SAA9BA,2BAA8B;QAACC,gFAAY;IAC/C,IAAMC,kBAAkB,GAAGxiB,6BAA6B,CAACwH,GAA9B,CAAkCzC,MAAlC,CAA3B;IACA,IAAI,CAACyd,kBAAL,EAAyB;MACvB;IACD;IAED,IAAIxB,eAAe,MAAMuB,SAAzB,EAAoC;MAClCC,kBAAkB,CAAClP,KAAnB,CAAyBlP,OAAzB,GAAmC,MAAnC;MACA;IACD;IAEDoe,kBAAkB,CAAClP,KAAnB,CAAyBmP,cAAzB,CAAwC,SAAxC;EACD,CAZD;EAcA,IAAMC,SAAS,GAAG,CAAC7a,IAAD,EAAaqV,IAAb;;IAGhB,IAAMiC,YAAY,6BAAGte,uBAAuB,CAAC2G,GAAxB,CAA4BzC,MAA5B,CAAH,2EAA0C,EAA5D;IACAlE,uBAAuB,CAAC8G,GAAxB,CAA4B5C,MAA5B,EAAoCoa,YAApC;IAEA,IAAMzgB,MAAM,GAAGqD,IAAI,CAAC8P,IAAL,CAAU9M,MAAV,EAAkB8C,IAAlB,CAAf;IACA,IAAM8a,GAAG,GAAGxD,YAAY,CAACyD,SAAb,CAAuBC,MAAM,IAAI7Q,IAAI,CAACN,MAAL,CAAYmR,MAAM,CAAChb,IAAnB,EAAyBA,IAAzB,CAAjC,CAAZ;IACA,IAAI8a,GAAG,GAAG,CAAV,EAAa;MACX,IAAMzE,UAAU,GAAGL,mBAAmB,CAACnf,MAAM,CAACqF,IAAR,EAAcmZ,IAAd,CAAtC;MACA,IAAIgB,UAAJ,EAAgB;QACdiB,YAAY,CAACzK,IAAb,CAAkB;UAAE7M,IAAF;UAAQqV,IAAR;UAAcxd,EAAE,EAAE2gB,SAAS;QAA3B,CAAlB;MACD;MAEDiC,2BAA2B;MAC3B;IACD;IAED,IAAMQ,MAAM,GAAG3E,gBAAgB,CAACzf,MAAM,CAACqF,IAAR,EAAcob,YAAY,CAACwD,GAAD,CAAZ,CAAkBzF,IAAhC,EAAsCA,IAAtC,CAA/B;IACA,IAAI,CAAC4F,MAAL,EAAa;MACX3D,YAAY,CAAC4D,MAAb,CAAoBJ,GAApB,EAAyB,CAAzB;MACAL,2BAA2B;MAC3B;IACD;IAEDnD,YAAY,CAACwD,GAAD,CAAZ,uCACKxD,YAAY,CAACwD,GAAD,CADjB;MAEEzF,IAAI,EAAE4F;IAFR;EAID,CA7BD;EA+BA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CACrBnC,GADqB;QAErB;MAAEpW;IAAF,wEAAiC;IAEjC6V,kBAAkB,GAAG,KAArB;IAGAvf,2BAA2B,CAAC0S,MAA5B,CAAmC1O,MAAnC;IACAgb,4BAA4B,CAACgC,MAA7B;IACA/B,oBAAoB,CAAC+B,MAArB;IAEA,IAAId,gBAAgB,EAApB,EAAwB;MACtBH,KAAK;IACN;IAEDhgB,wBAAwB,CAAC6G,GAAzB,CAA6B5C,MAA7B,EAAqC;MAAE0F,EAAF;MAAMoW;IAAN,CAArC;IAGA;IACA;;IACAT,eAAe,GAAGc,UAAU,CAACJ,KAAD,CAA5B;EACD,CArBD;EAuBA,IAAMmC,oBAAoB,GAAI5gB,KAAD;;IAC3B,IAAI8d,cAAJ,EAAoB;MAClBY,YAAY,CAACZ,cAAD,CAAZ;MACAA,cAAc,GAAG,IAAjB;IACD;IAED,IAAM;MAAE+C,SAAS,EAAE3H;IAAb,IAAsBlZ,KAA5B;IACA,IAAIoc,WAAW,GAAiB,IAAhC;IACA,IAAMzU,IAAI,GAAI3H,KAAa,CAACqC,YAAd,IAA8BrC,KAAK,CAAC2H,IAApC,IAA4C0X,SAA1D;IAEA,IACEpB,kBAAkB,KAAK,KAAvB,IACA/E,IAAI,KAAK,YADT,IAEAA,IAAI,KAAK,uBAHX,EAIE;MACA+E,kBAAkB,GAAG,KAArB;IACD;IAED,IAAI,CAAC6C,iBAAD,IAAuB9gB,KAAa,CAACiF,eAAd,EAA3B;IACA,IAAI6b,iBAAJ,EAAuB;MACrB1E,WAAW,GAAGtZ,WAAW,CAACiJ,YAAZ,CAAyBrJ,MAAzB,EAAiCoe,iBAAjC,EAAoD;QAChE9U,UAAU,EAAE,KADoD;QAEhEC,aAAa,EAAE;MAFiD,CAApD,CAAd;IAID;IAGD;;IACA,IAAMxM,MAAM,GAAGqD,WAAW,CAACC,SAAZ,CAAsBL,MAAtB,CAAf;IACA,IAAMmE,YAAY,GAAGpH,MAAM,CAAC4G,YAAP,EAArB;IACA,IAAI,CAAC+V,WAAD,IAAgBvV,YAApB,EAAkC;MAChCia,iBAAiB,GAAGja,YAApB;MACAuV,WAAW,GAAGtZ,WAAW,CAACiJ,YAAZ,CAAyBrJ,MAAzB,EAAiCmE,YAAjC,EAA+C;QAC3DmF,UAAU,EAAE,KAD+C;QAE3DC,aAAa,EAAE;MAF4C,CAA/C,CAAd;IAID;IAEDmQ,WAAW,oBAAGA,WAAH,yDAAkB1Z,MAAM,CAACkE,SAApC;IACA,IAAI,CAACwV,WAAL,EAAkB;MAChB;IACD;IAED,IAAI7S,KAAK,CAACuE,UAAN,CAAiBsO,WAAjB,KAAiClD,IAAI,CAACnQ,UAAL,CAAgB,QAAhB,CAArC,EAAgE;MAC9D,IAAM,CAACP,KAAD,EAAQG,GAAR,IAAeY,KAAK,CAACwX,KAAN,CAAY3E,WAAZ,CAArB;MACA,IAAM5M,IAAI,GAAG9P,IAAI,CAAC8P,IAAL,CAAU9M,MAAV,EAAkB8F,KAAK,CAAChD,IAAxB,CAAb;MAEA,IAAIgK,IAAI,CAAC9N,IAAL,CAAUjF,MAAV,KAAqB+L,KAAK,CAACjI,MAA3B,IAAqCoI,GAAG,CAACpI,MAAJ,KAAe,CAAxD,EAA2D;QACzD,IAAM0R,IAAI,GAAGxM,MAAM,CAACwM,IAAP,CAAYvP,MAAZ,EAAoB;UAAE0F,EAAE,EAAEI,KAAK,CAAChD,IAAZ;UAAkBhD,KAAK,EAAEvD,MAAI,CAAC6b;QAA9B,CAApB,CAAb;QACA,IAAI7I,IAAI,IAAItC,IAAI,CAACN,MAAL,CAAY4C,IAAI,CAAC,CAAD,CAAhB,EAAqBtJ,GAAG,CAACnD,IAAzB,CAAZ,EAA4C;UAC1C4W,WAAW,GAAG;YAAE/S,MAAM,EAAEV,GAAV;YAAelC,KAAK,EAAEkC;UAAtB,CAAd;QACD;MACF;IACF;IAED,IAAIY,KAAK,CAACuE,UAAN,CAAiBsO,WAAjB,KAAiClD,IAAI,CAACnQ,UAAL,CAAgB,QAAhB,CAArC,EAAgE;MAC9D,IAAI4G,IAAI,CAACN,MAAL,CAAY+M,WAAW,CAAC/S,MAAZ,CAAmB7D,IAA/B,EAAqC4W,WAAW,CAAC3V,KAAZ,CAAkBjB,IAAvD,CAAJ,EAAkE;QAChE,IAAM,CAACgD,MAAD,EAAQG,IAAR,IAAeY,KAAK,CAACwX,KAAN,CAAY3E,WAAZ,CAArB;QACA,OAAOiE,SAAS,CAACjE,WAAW,CAAC/S,MAAZ,CAAmB7D,IAApB,EAA0B;UACxC9D,IAAI,EAAE,EADkC;UAExCiH,GAAG,EAAEA,IAAG,CAACpI,MAF+B;UAGxCiI,KAAK,EAAEA,MAAK,CAACjI;QAH2B,CAA1B,CAAhB;MAKD;MAED,IAAMY,SAAS,GAAG+X,IAAI,CAAC7L,QAAL,CAAc,UAAd,IAA4B,UAA5B,GAAyC,SAA3D;MACA,OAAOsT,cAAc,CACnB,MAAMlb,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,EAA8B;QAAEvB;MAAF,CAA9B,CADa,EAEnB;QAAEiH,EAAE,EAAEgU;MAAN,CAFmB,CAArB;IAID;IAED,QAAQlD,IAAR;MACE,KAAK,qBAAL;MACA,KAAK,aAAL;MACA,KAAK,cAAL;QAAqB;UACnB,OAAOyH,cAAc,CAAC,MAAMlb,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,CAAP,EAAsC;YACzD0F,EAAE,EAAEgU;UADqD,CAAtC,CAArB;QAGD;MAED,KAAK,eAAL;MACA,KAAK,sBAAL;QAA6B;UAC3B,IAAM;YAAE/S;UAAF,IAAa+S,WAAnB;UACA,IAAI7S,KAAK,CAACG,WAAN,CAAkB0S,WAAlB,CAAJ,EAAoC;YAClC,IAAM4E,UAAU,GAAGthB,IAAI,CAAC8P,IAAL,CAAU9M,MAAV,EAAkB2G,MAAM,CAAC7D,IAAzB,CAAnB;YAEA,IAAI6D,MAAM,CAAC9I,MAAP,GAAgBygB,UAAU,CAACtf,IAAX,CAAgBjF,MAApC,EAA4C;cAC1C,OAAO4jB,SAAS,CAAChX,MAAM,CAAC7D,IAAR,EAAc;gBAC5B9D,IAAI,EAAE,EADsB;gBAE5B8G,KAAK,EAAEa,MAAM,CAAC9I,MAFc;gBAG5BoI,GAAG,EAAEU,MAAM,CAAC9I,MAAP,GAAgB;cAHO,CAAd,CAAhB;YAKD;UACF;UAED,OAAOogB,cAAc,CAAC,MAAMlb,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,CAAP,EAAqC;YACxD0F,EAAE,EAAEgU;UADoD,CAArC,CAArB;QAGD;MAED,KAAK,uBAAL;QAA8B;UAAA;UAC5B,IAAM;YAAE/S,MAAM,EAANA;UAAF,IAAa+S,WAAnB,CAD4B;UAI5B;UACA;;UACA,IAAM6E,eAAe,GAAGthB,cAAc,CAACmhB,iBAAD,CAAd,GACpBA,iBAAiB,CAACpX,WADE,GAEpB,CAAC,wBAACoX,iBAAD,+CAACI,mBAAmBrT,SAApB,CAFL;UAIA,IACEoT,eAAe,IACf1X,KAAK,CAACG,WAAN,CAAkB0S,WAAlB,CADA,IAEA/S,OAAM,CAAC9I,MAAP,GAAgB,CAHlB,EAIE;YACA,OAAO8f,SAAS,CAAChX,OAAM,CAAC7D,IAAR,EAAc;cAC5B9D,IAAI,EAAE,EADsB;cAE5B8G,KAAK,EAAEa,OAAM,CAAC9I,MAAP,GAAgB,CAFK;cAG5BoI,GAAG,EAAEU,OAAM,CAAC9I;YAHgB,CAAd,CAAhB;UAKD;UAED,OAAOogB,cAAc,CAAC,MAAMlb,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,CAAP,EAAsC;YACzD0F,EAAE,EAAEgU;UADqD,CAAtC,CAArB;QAGD;MAED,KAAK,sBAAL;QAA6B;UAC3B,OAAOuE,cAAc,CACnB;YACElb,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;cAAEye,IAAI,EAAE;YAAR,CAA9B;YACA1b,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;cAAEye,IAAI,EAAE;YAAR,CAA7B;UACD,CAJkB,EAKnB;YAAE/Y,EAAE,EAAEgU;UAAN,CALmB,CAArB;QAOD;MAED,KAAK,wBAAL;QAA+B;UAC7B,OAAOuE,cAAc,CACnB,MAAMlb,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;YAAEye,IAAI,EAAE;UAAR,CAA9B,CADa,EAEnB;YAAE/Y,EAAE,EAAEgU;UAAN,CAFmB,CAArB;QAID;MAED,KAAK,wBAAL;QAA+B;UAC7B,OAAOuE,cAAc,CACnB,MAAMlb,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;YAAEye,IAAI,EAAE;UAAR,CAA9B,CADa,EAEnB;YAAE/Y,EAAE,EAAEgU;UAAN,CAFmB,CAArB;QAID;MAED,KAAK,uBAAL;QAA8B;UAC5B,OAAOuE,cAAc,CACnB,MAAMlb,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;YAAEye,IAAI,EAAE;UAAR,CAA7B,CADa,EAEnB;YAAE/Y,EAAE,EAAEgU;UAAN,CAFmB,CAArB;QAID;MAED,KAAK,uBAAL;QAA8B;UAC5B,OAAOuE,cAAc,CACnB,MAAMlb,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;YAAEye,IAAI,EAAE;UAAR,CAA7B,CADa,EAEnB;YAAE/Y,EAAE,EAAEgU;UAAN,CAFmB,CAArB;QAID;MAED,KAAK,oBAAL;QAA2B;UACzB,OAAOuE,cAAc,CACnB,MAAMlb,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;YAAEye,IAAI,EAAE;UAAR,CAA9B,CADa,EAEnB;YAAE/Y,EAAE,EAAEgU;UAAN,CAFmB,CAArB;QAID;MAED,KAAK,mBAAL;QAA0B;UACxB,OAAOuE,cAAc,CACnB,MAAMlb,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;YAAEye,IAAI,EAAE;UAAR,CAA7B,CADa,EAEnB;YAAE/Y,EAAE,EAAEgU;UAAN,CAFmB,CAArB;QAID;MAED,KAAK,iBAAL;QAAwB;UACtB,OAAOuE,cAAc,CAAC,MAAMlb,MAAM,CAACgQ,eAAP,CAAuB/S,MAAvB,CAAP,EAAuC;YAC1D0F,EAAE,EAAEgU;UADsD,CAAvC,CAArB;QAGD;MAED,KAAK,iBAAL;QAAwB;UACtB,OAAOuE,cAAc,CAAC,MAAMlb,MAAM,CAAC2b,WAAP,CAAmB1e,MAAnB,CAAP,EAAmC;YACtD0F,EAAE,EAAEgU;UADkD,CAAnC,CAArB;QAGD;MACD,KAAK,uBAAL;MACA,KAAK,uBAAL;MACA,KAAK,uBAAL;MACA,KAAK,gBAAL;MACA,KAAK,iBAAL;MACA,KAAK,gBAAL;MACA,KAAK,uBAAL;MACA,KAAK,YAAL;QAAmB;UACjB,IAAI,KAAI,SAAJ,QAAI,WAAJ,gBAAI,CAAEhf,WAAN,CAAkBikB,IAAlB,MAA2B,cAA/B,EAA+C;YAC7C,OAAOV,cAAc,CAAC,MAAM7d,WAAW,CAAC4E,UAAZ,CAAuBhF,MAAvB,EAA+BiF,IAA/B,CAAP,EAA6C;cAChES,EAAE,EAAEgU;YAD4D,CAA7C,CAArB;UAGD;UAED,IAAI,OAAOzU,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACJ,QAAL,CAAc,IAAd,CAAhC,EAAqD;YACnD,OAAOoZ,cAAc,CAAC,MAAMlb,MAAM,CAACgQ,eAAP,CAAuB/S,MAAvB,CAAP,EAAuC;cAC1D0F,EAAE,EAAEmB,KAAK,CAACZ,GAAN,CAAUyT,WAAV;YADsD,CAAvC,CAArB;UAGD;UAED,IAAI1a,IAAI,GAAGiG,IAAH,aAAGA,IAAH,cAAGA,IAAH,GAAW,EAAnB,CAbiB;UAgBjB;;UACA,IAAIrJ,iCAAiC,CAAC6G,GAAlC,CAAsCzC,MAAtC,CAAJ,EAAmD;YACjDhB,IAAI,GAAGA,IAAI,CAAC4f,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAP;UACD;UAED,IAAI3R,IAAI,CAACN,MAAL,CAAY+M,WAAW,CAAC/S,MAAZ,CAAmB7D,IAA/B,EAAqC4W,WAAW,CAAC3V,KAAZ,CAAkBjB,IAAvD,CAAJ,EAAkE;YAChE,IAAM,CAACgD,OAAD,EAAQG,KAAR,IAAeY,KAAK,CAACwX,KAAN,CAAY3E,WAAZ,CAArB;YAEA,IAAMvB,IAAI,GAAG;cACXrS,KAAK,EAAEA,OAAK,CAACjI,MADF;cAEXoI,GAAG,EAAEA,KAAG,CAACpI,MAFE;cAGXmB;YAHW,CAAb,CAHgE;YAUhE;YACA;YACA;YACA;YACA;;YACA,IAAIA,IAAI,IAAIuc,kBAAR,IAA8B/E,IAAI,KAAK,uBAA3C,EAAoE;cAClE,IAAMqI,YAAY,GAChBtD,kBAAkB,CAACzV,KAAnB,GAA2ByV,kBAAkB,CAACvc,IAAnB,CAAwB8f,MAAxB,CAA+B,MAA/B,CAD7B;cAEA,IAAMC,YAAY,GAAG5G,IAAI,CAACrS,KAAL,GAAaqS,IAAI,CAACnZ,IAAL,CAAU8f,MAAV,CAAiB,MAAjB,CAAlC;cAEA,IACEC,YAAY,KAAKF,YAAY,GAAG,CAAhC,IACA1G,IAAI,CAAClS,GAAL,KACEsV,kBAAkB,CAACzV,KAAnB,GAA2ByV,kBAAkB,CAACvc,IAAnB,CAAwBjF,MAHvD,EAIE;gBAEAoe,IAAI,CAACrS,KAAL,IAAc,CAAd;gBACAyV,kBAAkB,GAAG,IAArB;gBACAyD,aAAa;cACd,CATD,MASO;gBACLzD,kBAAkB,GAAG,KAArB;cACD;YACF,CAjBD,MAiBO,IAAI/E,IAAI,KAAK,YAAb,EAA2B;cAChC,IAAI+E,kBAAkB,KAAK,IAA3B,EAAiC;gBAC/BA,kBAAkB,GAAGpD,IAArB;cACD,CAFD,MAEO,IACLoD,kBAAkB,IAClB1U,KAAK,CAACG,WAAN,CAAkB0S,WAAlB,CADA,IAEA6B,kBAAkB,CAACtV,GAAnB,GAAyBsV,kBAAkB,CAACvc,IAAnB,CAAwBjF,MAAjD,KACE+L,OAAK,CAACjI,MAJH,EAKL;gBACA0d,kBAAkB,uCACbA,kBADa;kBAEhBvc,IAAI,EAAEuc,kBAAkB,CAACvc,IAAnB,GAA0BA;gBAFhB,EAAlB;cAID,CAVM,MAUA;gBACLuc,kBAAkB,GAAG,KAArB;cACD;YACF,CAhBM,MAgBA;cACLA,kBAAkB,GAAG,KAArB;YACD;YAEDoC,SAAS,CAAC7X,OAAK,CAAChD,IAAP,EAAaqV,IAAb,CAAT;YACA;UACD;UAED,OAAO8F,cAAc,CAAC,MAAMlb,MAAM,CAAC6Z,UAAP,CAAkB5c,MAAlB,EAA0BhB,IAA1B,CAAP,EAAwC;YAC3D0G,EAAE,EAAEgU;UADuD,CAAxC,CAArB;QAGD;IAAA;EAEJ,CAxRD;EA0RA,IAAMwC,gBAAgB,GAAG;IACvB,OAAO,CAAC,CAACngB,wBAAwB,CAAC0G,GAAzB,CAA6BzC,MAA7B,CAAT;EACD,CAFD;EAIA,IAAMic,eAAe,GAAG;;IACtB,OAAO,CAAC,4BAACngB,uBAAuB,CAAC2G,GAAxB,CAA4BzC,MAA5B,CAAD,mDAACif,uBAAqCllB,MAAtC,CAAR;EACD,CAFD;EAIA,IAAMmlB,iBAAiB,GAAG;IACxB,OAAOhD,gBAAgB,MAAMD,eAAe,EAA5C;EACD,CAFD;EAIA,IAAMkD,UAAU,GAAG;IACjB,OAAOjE,QAAP;EACD,CAFD;EAIA,IAAMkE,gBAAgB,GAAI1Y,KAAD;IACvB1K,2BAA2B,CAAC4G,GAA5B,CAAgC5C,MAAhC,EAAwC0G,KAAxC;IAEA,IAAI0U,cAAJ,EAAoB;MAClBY,YAAY,CAACZ,cAAD,CAAZ;MACAA,cAAc,GAAG,IAAjB;IACD;IAED,IAAM;MAAElX;IAAF,IAAgBlE,MAAtB;IACA,IAAI,CAAC0G,KAAL,EAAY;MACV;IACD;IAED,IAAM2Y,WAAW,GACf,CAACnb,SAAD,IAAc,CAAC+I,IAAI,CAACN,MAAL,CAAYzI,SAAS,CAACyC,MAAV,CAAiB7D,IAA7B,EAAmC4D,KAAK,CAACC,MAAN,CAAa7D,IAAhD,CADjB;IAEA,IAAMwc,iBAAiB,GACrB,CAACpb,SAAD,IACA,CAAC+I,IAAI,CAACN,MAAL,CACCzI,SAAS,CAACyC,MAAV,CAAiB7D,IAAjB,CAAsBqH,KAAtB,CAA4B,CAA5B,EAA+B,CAAC,CAAhC,CADD,EAECzD,KAAK,CAACC,MAAN,CAAa7D,IAAb,CAAkBqH,KAAlB,CAAwB,CAAxB,EAA2B,CAAC,CAA5B,CAFD,CAFH;IAOA,IAAKkV,WAAW,IAAI9D,kBAAhB,IAAuC+D,iBAA3C,EAA8D;MAC5D/D,kBAAkB,GAAG,KAArB;IACD;IAED,IAAI8D,WAAW,IAAI,CAACpD,eAAe,EAAnC,EAAuC;MACrCb,cAAc,GAAGe,UAAU,CAACJ,KAAD,EAAQlB,WAAR,CAA3B;IACD;EACF,CA7BD;EA+BA,IAAM0E,WAAW,GAAG;IAClB,IAAIrD,gBAAgB,MAAM,CAACD,eAAe,EAA1C,EAA8C;MAE5CF,KAAK;IACN;EACF,CALD;EAOA,IAAMyD,aAAa,GAAIC,CAAD;IACpB;IACA;IACA;IACA;IACA;IACA,IAAI,CAACxD,eAAe,EAApB,EAAwB;MACtBsB,2BAA2B,CAAC,IAAD,CAA3B;MACApB,UAAU,CAACoB,2BAAD,CAAV;IACD;EACF,CAVD;EAYA,IAAMyB,aAAa,GAAG;IACpB,IAAI,CAAC9C,gBAAgB,EAArB,EAAyB;MACvBb,eAAe,GAAGc,UAAU,CAACJ,KAAD,CAA5B;IACD;EACF,CAJD;EAMA,IAAM2D,kBAAkB,GAAIvJ,SAAD;IACzB,IAAI8F,eAAe,MAAMC,gBAAgB,EAAzC,EAA6C;MAC3C;IACD;IAED,IACE/F,SAAS,CAACwJ,IAAV,CAAe1f,QAAQ,IAAIF,iBAAiB,CAACC,MAAD,EAASC,QAAT,EAAmBkW,SAAnB,CAA5C,CADF,EAEE;MAAA;;MACA;MACA;MACA,+CAAsB,CAAC1T,GAAvB,CAA2BzC,MAA3B;IACD;EACF,CAZD;EAcA,OAAO;IACL+b,KADK;IAELiD,aAFK;IAIL/C,eAJK;IAKLC,gBALK;IAMLgD,iBANK;IAQLC,UARK;IAULC,gBAVK;IAWLhC,oBAXK;IAYLE,sBAZK;IAaLY,oBAbK;IAcLsB,aAdK;IAgBLE,kBAhBK;IAiBLH;EAjBK,CAAP;AAmBD;SCjtBeK;EACd,IAAMC,YAAY,GAAGnS,MAAM,CAAC,KAAD,CAA3B;EAEA3B,SAAS,CAAC;IACR8T,YAAY,CAACrV,OAAb,GAAuB,IAAvB;IACA,OAAO;MACLqV,YAAY,CAACrV,OAAb,GAAuB,KAAvB;IACD,CAFD;EAGD,CALQ,EAKN,EALM,CAAT;EAOA,OAAOqV,YAAY,CAACrV,OAApB;AACD;SCResV,oBACdliB,MACAmiB,UACAxb;EAEA,IAAM,CAAC6S,gBAAD,IAAqB4I,QAAQ,CAAC,MAAM,IAAIzI,gBAAJ,CAAqBwI,QAArB,CAAP,CAAnC;EAEAlU,yBAAyB,CAAC;IACxB;IACA;IACAuL,gBAAgB,CAACO,WAAjB;EACD,CAJwB,CAAzB;EAMA5L,SAAS,CAAC;IACR,IAAI,CAACnO,IAAI,CAAC4M,OAAV,EAAmB;MACjB,MAAM,IAAI9H,KAAJ,CAAU,wDAAV,CAAN;IACD;IAED0U,gBAAgB,CAACD,OAAjB,CAAyBvZ,IAAI,CAAC4M,OAA9B,EAAuCjG,OAAvC;IACA,OAAO,MAAM6S,gBAAgB,CAACQ,UAAjB,EAAb;EACD,CAPQ,EAON,EAPM,CAAT;AAQD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRD,IAAMhB,wBAAwB,GAAyB;EACrDC,OAAO,EAAE,IAD4C;EAErDC,SAAS,EAAE,IAF0C;EAGrDC,aAAa,EAAE;AAHsC,CAAvD;SAMgBkJ;MAAuB;MACrCriB;IADqC;IAElC2G;EAEH,IAAI,CAAC9C,UAAL,EAAiB;IACf,OAAO,IAAP;EACD;EAED,IAAMzB,MAAM,GAAG+M,cAAc,EAA7B;EACA,IAAMmT,SAAS,GAAGN,YAAY,EAA9B;EAEA,IAAM,CAACO,YAAD,IAAiBH,QAAQ,CAAC,MAC9BjF,yBAAyB;IACvB/a;EADuB,GAEpBuE,OAFoB,EADI,CAA/B;EAOAub,mBAAmB,CACjBliB,IADiB,EAEjBuiB,YAAY,CAACT,kBAFI,EAGjB9I,wBAHiB,CAAnB;EAMAjb,wBAAwB,CAACiH,GAAzB,CAA6B5C,MAA7B,EAAqCmgB,YAAY,CAACnB,aAAlD;EACA,IAAIkB,SAAJ,EAAe;IACbC,YAAY,CAACpE,KAAb;EACD;EAED,OAAOoE,YAAP;AACD;SClDeC;EACd,IAAMpgB,MAAM,GAAG+M,cAAc,EAA7B;EAEA,IAAMgJ,iBAAiB,GAAGrI,MAAM,CAAU,KAAV,CAAhC;EACA,IAAM2S,mBAAmB,GAAG3S,MAAM,CAAS,CAAT,CAAlC;EAEA,IAAM4S,WAAW,GAAGlQ,WAAW,CAAC;IAC9B,IAAI2F,iBAAiB,CAACvL,OAAtB,EAA+B;MAC7B;IACD;IAEDuL,iBAAiB,CAACvL,OAAlB,GAA4B,IAA5B;IAEA,IAAMzN,MAAM,GAAGqD,WAAW,CAACC,SAAZ,CAAsBL,MAAtB,CAAf;IACAjD,MAAM,CAACwjB,oBAAP,CAA4BF,mBAAmB,CAAC7V,OAAhD;IAEA6V,mBAAmB,CAAC7V,OAApB,GAA8BzN,MAAM,CAACyjB,qBAAP,CAA6B;MACzDzK,iBAAiB,CAACvL,OAAlB,GAA4B,KAA5B;IACD,CAF6B,CAA9B;EAGD,CAb8B,EAa5B,EAb4B,CAA/B;EAeAuB,SAAS,CAAC,MAAM,MAAMwU,oBAAoB,CAACF,mBAAmB,CAAC7V,OAArB,CAAjC,EAAgE,EAAhE,CAAT;EAEA,OAAO;IACLuL,iBADK;IAELuK;EAFK,CAAP;AAID;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2CD,IAAMG,QAAQ,GAAI5T,KAAD,iBACf7L,oBAACA,KAAK,CAACmO,QAAP,QAAiBkB,WAAW,CAACxD,KAAD,CAA5B,CADF;AAmDA;;;;IAIa6T,QAAQ,GAAI7T,KAAD;EACtB,IAAM;MACJ8T,SADI;MAEJ1P,QAAQ,GAAG2P,eAFP;MAGJC,gBAAgB,EAAEC,qBAHd;MAIJlS,WAJI;MAKJsB,QAAQ,GAAG,KALP;MAMJH,aANI;MAOJ5B,UAPI;MAQJD,iBAAiB,GAAGrB,KAAK,iBAAI7L,oBAAC+f,kBAAD,oBAAwBlU,MAAxB,CARzB;MASJmU,uBAAuB,GAAGC,8BATtB;MAUJ1S,KAAK,GAAG,EAVJ;MAWJ2S,EAAE,EAAEhK,SAAS,GAAG;IAXZ,IAaFrK,KAbJ;IAYKgB,UAZL,4BAaIhB,KAbJ;EAcA,IAAM7M,MAAM,GAAG+R,QAAQ,EAAvB;;EAEA,IAAM,CAACvP,WAAD,EAAc2e,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;EACA,IAAMvS,GAAG,GAAGC,MAAM,CAAiB,IAAjB,CAAlB;EACA,IAAM0T,kBAAkB,GAAG1T,MAAM,CAAsB,EAAtB,CAAjC;EAEA,IAAM;IAAE4S,WAAF;IAAevK;EAAf,IAAqCqK,iBAAiB,EAA5D;EAEA,IAAM,GAAGiB,WAAH,IAAkBC,UAAU,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAV,EAAa,CAAb,CAAlC;EACAtlB,sBAAsB,CAAC2G,GAAvB,CAA2B5C,MAA3B,EAAmCqhB,WAAnC;;EAGA/lB,YAAY,CAACsH,GAAb,CAAiB5C,MAAjB,EAAyBkQ,QAAzB;;EAGA,IAAMsR,KAAK,GAAGC,OAAO,CACnB,OAAO;IACLC,oBAAoB,EAAE,KADjB;IAELC,mBAAmB,EAAE,KAFhB;IAGLC,aAAa,EAAE,IAHV;IAILC,kBAAkB,EAAE;EAJf,CAAP,CADmB,EAOnB,EAPmB,CAArB;EAWA;;EACA9V,SAAS,CAAC;IACR,IAAI0B,GAAG,CAACjD,OAAJ,IAAemW,SAAnB,EAA8B;MAC5BlT,GAAG,CAACjD,OAAJ,CAAYzG,KAAZ;IACD;EACF,CAJQ,EAIN,CAAC4c,SAAD,CAJM,CAAT;EAOA;EACA;EACA;EACA;;EACA,IAAM1F,oBAAoB,GAAG7K,WAAW,CACtC0R,QAAQ,CAAC;IACP,IACE,CAACrgB,UAAU,IAAI,CAACrB,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,CAAhB,MACC,CAACwhB,KAAK,CAACG,mBAAP,IAA8BI,mBAA9B,aAA8BA,mBAA9B,eAA8BA,mBAAmB,CAAE5C,UAArB,EAD/B,KAEA,CAACqC,KAAK,CAACE,oBAHT,EAIE;MACA,IAAMne,IAAI,GAAGnD,WAAW,CAACgD,wBAAZ,CAAqCpD,MAArC,CAAb;MACA,IAAM;QAAE1B;MAAF,IAAoBiF,IAA1B;MACA,IAAMF,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAX;MACA,IAAMmE,YAAY,GAAGZ,IAAI,CAACI,YAAL,EAArB;MAEA,IAAIrF,aAAa,KAAK+E,EAAtB,EAA0B;QACxBme,KAAK,CAACI,aAAN,GAAsBtjB,aAAtB;QACA/C,UAAU,CAACqH,GAAX,CAAe5C,MAAf,EAAuB,IAAvB;MACD,CAHD,MAGO;QACLzE,UAAU,CAACmT,MAAX,CAAkB1O,MAAlB;MACD;MAED,IAAI,CAACmE,YAAL,EAAmB;QACjB,OAAOG,UAAU,CAACL,QAAX,CAAoBjE,MAApB,CAAP;MACD;MAED,IAAM;QAAE9C,UAAF;QAAc8N;MAAd,IAA4B7G,YAAlC;MAEA,IAAM6d,oBAAoB,GACxBC,iBAAiB,CAACjiB,MAAD,EAAS9C,UAAT,CAAjB,IACAglB,6BAA6B,CAACliB,MAAD,EAAS9C,UAAT,CAF/B;MAIA,IAAMilB,mBAAmB,GACvBF,iBAAiB,CAACjiB,MAAD,EAASgL,SAAT,CAAjB,IACAkX,6BAA6B,CAACliB,MAAD,EAASgL,SAAT,CAF/B;MAIA,IAAIgX,oBAAoB,IAAIG,mBAA5B,EAAiD;QAC/C,IAAMzb,KAAK,GAAGtG,WAAW,CAACiJ,YAAZ,CAAyBrJ,MAAzB,EAAiCmE,YAAjC,EAA+C;UAC3DmF,UAAU,EAAE,KAD+C;UAE3DC,aAAa,EAAE;QAF4C,CAA/C,CAAd;QAKA,IAAI7C,KAAJ,EAAW;UACT,IACE,CAACtG,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,CAAD,IACA,EAAC+hB,mBAAD,aAACA,mBAAD,eAACA,mBAAmB,CAAE7C,iBAArB,EAAD,CADA,IAEA,EAAC6C,mBAAD,aAACA,mBAAD,eAACA,mBAAmB,CAAE5C,UAArB,EAAD,CAHF,EAIE;YACA7a,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0B0G,KAA1B;UACD,CAND,MAMO;YACLqb,mBAAmB,SAAnB,uBAAmB,WAAnB,+BAAmB,CAAE3C,gBAArB,CAAsC1Y,KAAtC;UACD;QACF;MACF,CA5CD;;MA+CA,IAAIwJ,QAAQ,KAAK,CAAC8R,oBAAD,IAAyB,CAACG,mBAA/B,CAAZ,EAAiE;QAC/D7d,UAAU,CAACL,QAAX,CAAoBjE,MAApB;MACD;IACF;EACF,CAxDO,EAwDL,GAxDK,CAD8B,EA0DtC,CAACkQ,QAAD,CA1DsC,CAAxC;EA6DA,IAAM8K,4BAA4B,GAAGyG,OAAO,CAC1C,MAAMW,QAAQ,CAACnH,oBAAD,EAAuB,CAAvB,CAD4B,EAE1C,CAACA,oBAAD,CAF0C,CAA5C;EAKA,IAAM8G,mBAAmB,GAAG9B,sBAAsB,CAAC;IACjDriB,IAAI,EAAE6P,GAD2C;IAEjDwN,oBAFiD;IAGjDD;EAHiD,CAAD,CAAlD;EAMAnP,yBAAyB,CAAC;IACxB;IACA,IAAI9O,MAAJ;IACA,IAAI0Q,GAAG,CAACjD,OAAJ,KAAgBzN,MAAM,GAAGP,cAAc,CAACiR,GAAG,CAACjD,OAAL,CAAvC,CAAJ,EAA2D;MACzDzP,gBAAgB,CAAC6H,GAAjB,CAAqB5C,MAArB,EAA6BjD,MAA7B;MACA/B,iBAAiB,CAAC4H,GAAlB,CAAsB5C,MAAtB,EAA8ByN,GAAG,CAACjD,OAAlC;MACArP,eAAe,CAACyH,GAAhB,CAAoB5C,MAApB,EAA4ByN,GAAG,CAACjD,OAAhC;MACAtP,eAAe,CAAC0H,GAAhB,CAAoB6K,GAAG,CAACjD,OAAxB,EAAiCxK,MAAjC;IACD,CALD,MAKO;MACL7E,eAAe,CAACuT,MAAhB,CAAuB1O,MAAvB;IACD;;IAGD,IAAM;MAAEkE;IAAF,IAAgBlE,MAAtB;IACA,IAAMuD,IAAI,GAAGnD,WAAW,CAACgD,wBAAZ,CAAqCpD,MAArC,CAAb;IACA,IAAMmE,YAAY,GAAGZ,IAAI,CAACI,YAAL,EAArB;IAEA,IACE,CAACQ,YAAD,IACA,CAAC/D,WAAW,CAACwD,SAAZ,CAAsB5D,MAAtB,CADD,IAEA+hB,mBAFA,aAEAA,mBAFA,eAEAA,mBAAmB,CAAE7F,gBAArB,EAHF,EAIE;MACA;IACD;IAED,IAAMmG,eAAe,GAAIC,WAAD;MACtB,IAAMC,eAAe,GAAGpe,YAAY,CAACqS,IAAb,KAAsB,MAA9C;;MAGA,IAAI,CAACtS,SAAD,IAAc,CAACqe,eAAnB,EAAoC;QAClC;MACD;;MAGD,IAAMC,aAAa,GAAGxnB,iBAAiB,CAACyH,GAAlB,CAAsBzC,MAAtB,CAAtB;MACA,IAAIyiB,uBAAuB,GAAG,KAA9B;MACA,IACED,aAAa,CAACliB,QAAd,CAAuB6D,YAAY,CAACjH,UAApC,KACAslB,aAAa,CAACliB,QAAd,CAAuB6D,YAAY,CAAC6G,SAApC,CAFF,EAGE;QACAyX,uBAAuB,GAAG,IAA1B;MACD;;MAGD,IACEF,eAAe,IACfE,uBADA,IAEAve,SAFA,IAGA,CAACoe,WAJH,EAKE;QACA,IAAMI,UAAU,GAAGtiB,WAAW,CAACiJ,YAAZ,CAAyBrJ,MAAzB,EAAiCmE,YAAjC,EAA+C;UAChEmF,UAAU,EAAE,IADoD;UAGhE;UACA;UACAC,aAAa,EAAE;QALiD,CAA/C,CAAnB;QAQA,IAAImZ,UAAU,IAAI7b,KAAK,CAAC8F,MAAN,CAAa+V,UAAb,EAAyBxe,SAAzB,CAAlB,EAAuD;UAAA;UACrD,IAAI,CAACsd,KAAK,CAACK,kBAAX,EAA+B;YAC7B;UACD,CAHoD;;UAMrD,IAAM;YAAE3kB;UAAF,IAAiBiH,YAAvB;UACA,IACEjH,UADF,aACEA,UADF,wCACEA,UAAU,CAAEwH,aADd,kDACEie,sBAA2Bxc,YAA3B,CACE,6BADF,CADF,EAIE;YACA;UACD;QACF;MACF;MAGD;MACA;MACA;;MACA,IAAIjC,SAAS,IAAI,CAAC9D,WAAW,CAACqL,QAAZ,CAAqBzL,MAArB,EAA6BkE,SAA7B,CAAlB,EAA2D;QACzDlE,MAAM,CAACkE,SAAP,GAAmB9D,WAAW,CAACiJ,YAAZ,CAAyBrJ,MAAzB,EAAiCmE,YAAjC,EAA+C;UAChEmF,UAAU,EAAE,KADoD;UAEhEC,aAAa,EAAE;QAFiD,CAA/C,CAAnB;QAIA;MACD;;MAGDiY,KAAK,CAACG,mBAAN,GAA4B,IAA5B;MAEA,IAAMiB,WAAW,GACf1e,SAAS,IAAI9D,WAAW,CAACqG,UAAZ,CAAuBzG,MAAvB,EAA+BkE,SAA/B,CADf;MAGA,IAAI0e,WAAJ,EAAiB;QACf,IAAI/b,KAAK,CAACD,UAAN,CAAiB1C,SAAjB,CAAJ,EAAkC;UAChCC,YAAY,CAAC0e,gBAAb,CACED,WAAW,CAAC1X,YADd,EAEE0X,WAAW,CAACtb,SAFd,EAGEsb,WAAW,CAAC9X,cAHd,EAIE8X,WAAW,CAACxb,WAJd;QAMD,CAPD,MAOO;UACLjD,YAAY,CAAC0e,gBAAb,CACED,WAAW,CAAC9X,cADd,EAEE8X,WAAW,CAACxb,WAFd,EAGEwb,WAAW,CAAC1X,YAHd,EAIE0X,WAAW,CAACtb,SAJd;QAMD;QACD0Z,uBAAuB,CAAChhB,MAAD,EAAS4iB,WAAT,CAAvB;MACD,CAjBD,MAiBO;QACLze,YAAY,CAACE,eAAb;MACD;MAED,OAAOue,WAAP;IACD,CA1FD;IA4FA,IAAMA,WAAW,GAAGP,eAAe,EAAnC;IACA,IAAMS,eAAe,GAAG,oBAAmB,SAAnB,uBAAmB,WAAnB,+BAAmB,CAAE3D,UAArB,QAAsC,QAA9D;IAEA,IAAI,CAAC1d,UAAD,IAAe,CAACqhB,eAApB,EAAqC;MACnC3G,UAAU,CAAC;QACT;QACA;QACA,IAAIyG,WAAW,IAAIlhB,UAAnB,EAA+B;UAC7B,IAAM2B,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAX;UACAqD,EAAE,CAACU,KAAH;QACD;QAEDyd,KAAK,CAACG,mBAAN,GAA4B,KAA5B;MACD,CATS,CAAV;MAUA;IACD;IAED,IAAIoB,SAAS,GAAyC,IAAtD;IACA,IAAMC,gBAAgB,GAAGxC,qBAAqB,CAAC;MAC7C,IAAIsC,eAAJ,EAAqB;QACnB,IAAMG,kBAAkB,GAAIX,WAAD;UACzB,IAAI;YACF,IAAMjf,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAX;YACAqD,EAAE,CAACU,KAAH;YAEAse,eAAe,CAACC,WAAD,CAAf;UACD,CALD,CAKE,OAAOY,CAAP,EAAU;UAAA;QAGb,CATD,CADmB;QAanB;QACA;QACA;;QACAD,kBAAkB;QAElBF,SAAS,GAAG5G,UAAU,CAAC;UACrB;UACA;UACA;UACA8G,kBAAkB,CAAC,IAAD,CAAlB;UACAzB,KAAK,CAACG,mBAAN,GAA4B,KAA5B;QACD,CANqB,CAAtB;MAOD;IACF,CA3B6C,CAA9C;IA6BA,OAAO;MACLpB,oBAAoB,CAACyC,gBAAD,CAApB;MACA,IAAID,SAAJ,EAAe;QACb/G,YAAY,CAAC+G,SAAD,CAAZ;MACD;IACF,CALD;EAMD,CA1KwB,CAAzB;EA6KA;EACA;EACA;;EACA,IAAMlC,gBAAgB,GAAGzQ,WAAW,CACjC9S,KAAD;IACEgjB,WAAW;IAEX,IACE,CAACpQ,QAAD,IACA+R,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CADjB,IAEA,CAACwpB,iBAAiB,CAAC7lB,KAAD,EAAQwjB,qBAAR,CAHpB,EAIE;MAAA;;MACA;MACA,IAAIiB,mBAAJ,EAAyB;QACvB,OAAOA,mBAAmB,CAAC7D,oBAApB,CAAyC5gB,KAAzC,CAAP;MACD,CAJD;MAOA;MACA;;MACA0d,4BAA4B,CAACe,KAA7B;MACAd,oBAAoB,CAACc,KAArB;MAEA,IAAM;QAAE7X;MAAF,IAAgBlE,MAAtB;MACA,IAAM;QAAEme,SAAS,EAAE3H;MAAb,IAAsBlZ,KAA5B;MACA,IAAM2H,IAAI,GAAI3H,KAAa,CAACqC,YAAd,IAA8BrC,KAAK,CAAC2H,IAApC,IAA4C0X,SAA1D;MAEA,IAAMyG,mBAAmB,GACvB5M,IAAI,KAAK,uBAAT,IAAoCA,IAAI,KAAK,uBAD/C,CAhBA;MAoBA;;MACA,IAAI4M,mBAAmB,IAAIhjB,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,CAA3B,EAA4D;QAC1D;MACD;MAED,IAAIqjB,MAAM,GAAG,KAAb;MACA,IACE7M,IAAI,KAAK,YAAT,IACAtS,SADA,IAEA2C,KAAK,CAACG,WAAN,CAAkB9C,SAAlB,CAFA;MAAA;MAIA;MACA;MACA5G,KAAK,CAAC2H,IANN,IAOA3H,KAAK,CAAC2H,IAAN,CAAWlL,MAAX,KAAsB,CAPtB,IAQA,UAAUsH,IAAV,CAAe/D,KAAK,CAAC2H,IAArB,CARA;MAAA;MAUA;MACA;MACAf,SAAS,CAACyC,MAAV,CAAiB9I,MAAjB,KAA4B,CAb9B,EAcE;QAAA;QACAwlB,MAAM,GAAG,IAAT,CADA;QAIA;;QACA,IAAIrjB,MAAM,CAACsc,KAAX,EAAkB;UAChB+G,MAAM,GAAG,KAAT;QACD,CAPD;QAUA;;QACA,IAAM;UAAE1c;QAAF,IAAazC,SAAnB;QAEA,IAAM,CAACtG,IAAD,EAAOC,MAAP,IAAiBuC,WAAW,CAACmF,UAAZ,CAAuBvF,MAAvB,EAA+B2G,MAA/B,CAAvB;QACA,IAAMzJ,UAAU,0BAAGU,IAAI,CAAC8G,aAAR,wDAAG4e,oBAAoBxe,OAApB,CAA4B,GAA5B,CAAnB;QAEA,IAAM/H,MAAM,GAAGqD,WAAW,CAACC,SAAZ,CAAsBL,MAAtB,CAAf;QAEA,IACEqjB,MAAM,IACNnmB,UADA,IAEAkD,WAAW,CAACG,UAAZ,CAAuBP,MAAvB,EAA+B9C,UAA/B,CAHF,EAIE;UAAA;;UACA;UACA,IAAMqmB,QAAQ,GAAGxmB,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEsB,QAAR,CACdmlB,gBADc,CACGtmB,UADH,EACeumB,UAAU,CAACC,SAD1B,EAEdC,SAFc,EAAjB;UAIA,IAAIJ,QAAQ,KAAK3lB,IAAb,IAAqB,kCAAQ,CAACO,WAAT,gFAAsBpE,MAAtB,MAAiC8D,MAA1D,EAAkE;YAChEwlB,MAAM,GAAG,KAAT;UACD;QACF,CA/BD;QAkCA;;QACA,IACEA,MAAM,IACNzlB,IAAI,CAAC8G,aADL,IAEA,OAAM,SAAN,UAAM,WAAN,2CAAM,CAAEpF,gBAAR,CAAyB1B,IAAI,CAAC8G,aAA9B,iFAA8Ckf,UAA9C,MAA6D,KAH/D,EAIE;UACA,IAAMC,KAAK,GAAG9gB,MAAM,CAAC8W,KAAP,CAAa7Z,MAAb,EAAqB;YACjC0F,EAAE,EAAEiB,MAAM,CAAC7D,IADsB;YAEjChD,KAAK,EAAEtF,CAAC,IAAIuI,MAAM,CAAC+W,OAAP,CAAe9Z,MAAf,EAAuBxF,CAAvB;UAFqB,CAArB,CAAd;UAKA,IAAIqpB,KAAK,IAAI7mB,IAAI,CAACoQ,MAAL,CAAYyW,KAAK,CAAC,CAAD,CAAjB,EAAsBhf,QAAtB,CAA+B,IAA/B,CAAb,EAAmD;YACjDwe,MAAM,GAAG,KAAT;UACD;QACF;MACF,CAzFD;MA4FA;MACA;;MACA,IAAI,CAAC7M,IAAI,CAACnQ,UAAL,CAAgB,QAAhB,CAAD,IAA8BmQ,IAAI,CAACnQ,UAAL,CAAgB,UAAhB,CAAlC,EAA+D;QAC7D,IAAM,CAACqT,WAAD,IAAiBpc,KAAa,CAACiF,eAAd,EAAvB;QAEA,IAAImX,WAAJ,EAAiB;UACf,IAAMhT,KAAK,GAAGtG,WAAW,CAACiJ,YAAZ,CAAyBrJ,MAAzB,EAAiC0Z,WAAjC,EAA8C;YAC1DpQ,UAAU,EAAE,KAD8C;YAE1DC,aAAa,EAAE;UAF2C,CAA9C,CAAd;UAKA,IAAI,CAACrF,SAAD,IAAc,CAAC2C,KAAK,CAAC8F,MAAN,CAAazI,SAAb,EAAwBwC,KAAxB,CAAnB,EAAmD;YACjD2c,MAAM,GAAG,KAAT;YAEA,IAAMjH,YAAY,GAChB,CAACgH,mBAAD,IACApjB,MAAM,CAACkE,SADP,IAEAnB,MAAM,CAACsZ,QAAP,CAAgBrc,MAAhB,EAAwBA,MAAM,CAACkE,SAA/B,CAHF;YAKAI,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0B0G,KAA1B;YAEA,IAAI0V,YAAJ,EAAkB;cAChB3gB,wBAAwB,CAACmH,GAAzB,CAA6B5C,MAA7B,EAAqCoc,YAArC;YACD;UACF;QACF;MACF,CAtHD;MAyHA;;MACA,IAAIgH,mBAAJ,EAAyB;QACvB;MACD;MAED,IAAI,CAACC,MAAL,EAAa;QACX/lB,KAAK,CAACwmB,cAAN;MACD,CAhID;MAmIA;;MACA,IACE5f,SAAS,IACT2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CADA,IAEAsS,IAAI,CAACnQ,UAAL,CAAgB,QAAhB,CAHF,EAIE;QACA,IAAM5H,SAAS,GAAG+X,IAAI,CAAC7L,QAAL,CAAc,UAAd,IAA4B,UAA5B,GAAyC,SAA3D;QACA5H,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,EAA8B;UAAEvB;QAAF,CAA9B;QACA;MACD;MAED,QAAQ+X,IAAR;QACE,KAAK,qBAAL;QACA,KAAK,aAAL;QACA,KAAK,cAAL;UAAqB;YACnBzT,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB;YACA;UACD;QAED,KAAK,eAAL;QACA,KAAK,sBAAL;UAA6B;YAC3B+C,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB;YACA;UACD;QAED,KAAK,uBAAL;UAA8B;YAC5B+C,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB;YACA;UACD;QAED,KAAK,sBAAL;UAA6B;YAC3B+C,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;cAAEye,IAAI,EAAE;YAAR,CAA9B;YACA1b,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;cAAEye,IAAI,EAAE;YAAR,CAA7B;YACA;UACD;QAED,KAAK,wBAAL;UAA+B;YAC7B1b,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;cAAEye,IAAI,EAAE;YAAR,CAA9B;YACA;UACD;QAED,KAAK,wBAAL;UAA+B;YAC7B1b,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;cAAEye,IAAI,EAAE;YAAR,CAA9B;YACA;UACD;QAED,KAAK,uBAAL;UAA8B;YAC5B1b,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;cAAEye,IAAI,EAAE;YAAR,CAA7B;YACA;UACD;QAED,KAAK,uBAAL;UAA8B;YAC5B1b,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;cAAEye,IAAI,EAAE;YAAR,CAA7B;YACA;UACD;QAED,KAAK,oBAAL;UAA2B;YACzB1b,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;cAAEye,IAAI,EAAE;YAAR,CAA9B;YACA;UACD;QAED,KAAK,mBAAL;UAA0B;YACxB1b,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;cAAEye,IAAI,EAAE;YAAR,CAA7B;YACA;UACD;QAED,KAAK,iBAAL;UACE1b,MAAM,CAACgQ,eAAP,CAAuB/S,MAAvB;UACA;QAEF,KAAK,iBAAL;UAAwB;YACtB+C,MAAM,CAAC2b,WAAP,CAAmB1e,MAAnB;YACA;UACD;QAED,KAAK,uBAAL;QACA,KAAK,gBAAL;QACA,KAAK,iBAAL;QACA,KAAK,gBAAL;QACA,KAAK,uBAAL;QACA,KAAK,YAAL;UAAmB;YACjB,IAAIwW,IAAI,KAAK,uBAAb,EAAsC;cACpC;cACA;cACA;cACA;cACA;cACA,IAAIpW,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,CAAJ,EAAqC;gBACnCmhB,cAAc,CAAC,KAAD,CAAd;gBACA3lB,YAAY,CAACoH,GAAb,CAAiB5C,MAAjB,EAAyB,KAAzB;cACD;YACF,CAXgB;YAcjB;YACA;;YACA,IAAI,KAAI,SAAJ,QAAI,WAAJ,gBAAI,CAAEtF,WAAN,CAAkBikB,IAAlB,MAA2B,cAA/B,EAA+C;cAC7Cve,WAAW,CAAC4E,UAAZ,CAAuBhF,MAAvB,EAA+BiF,IAA/B;YACD,CAFD,MAEO,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;cACnC;cACA;cACA,IAAIoe,MAAJ,EAAY;gBACVjC,kBAAkB,CAAC5W,OAAnB,CAA2BmF,IAA3B,CAAgC,MAC9B5M,MAAM,CAAC6Z,UAAP,CAAkB5c,MAAlB,EAA0BiF,IAA1B,CADF;cAGD,CAJD,MAIO;gBACLlC,MAAM,CAAC6Z,UAAP,CAAkB5c,MAAlB,EAA0BiF,IAA1B;cACD;YACF;YAED;UACD;MAAA,CAlPH;;MAsPA,IAAM8e,SAAS,4BAAGtoB,wBAAwB,CAACgH,GAAzB,CAA6BzC,MAA7B,CAAH,0DAAGgkB,sBAAsC/G,KAAtC,EAAlB;MACAxhB,wBAAwB,CAACiT,MAAzB,CAAgC1O,MAAhC;MAEA,IACE+jB,SAAS,KACR,CAAC/jB,MAAM,CAACkE,SAAR,IAAqB,CAAC2C,KAAK,CAAC8F,MAAN,CAAa3M,MAAM,CAACkE,SAApB,EAA+B6f,SAA/B,CADd,CADX,EAGE;QACAzf,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0B+jB,SAA1B;MACD;IACF;EACF,CAxQiC,EAyQlC,CAAC7T,QAAD,EAAW4Q,qBAAX,CAzQkC,CAApC;EA6QA;EACA;EACA;;EACAjV,yBAAyB,CAAC;IACxB,IAAI4B,GAAG,CAACjD,OAAJ,IAAenI,wBAAnB,EAA6C;MAC3C;MACAoL,GAAG,CAACjD,OAAJ,CAAYyZ,gBAAZ,CAA6B,aAA7B,EAA4CpD,gBAA5C;IACD;IAED,OAAO;MACL,IAAIpT,GAAG,CAACjD,OAAJ,IAAenI,wBAAnB,EAA6C;QAC3C;QACAoL,GAAG,CAACjD,OAAJ,CAAY0Z,mBAAZ,CAAgC,aAAhC,EAA+CrD,gBAA/C;MACD;IACF,CALD;EAMD,CAZwB,EAYtB,CAACA,gBAAD,CAZsB,CAAzB;EAeA;EACA;EACA;EACA;;EACAhV,yBAAyB,CAAC;IACxB,IAAM9O,MAAM,GAAGqD,WAAW,CAACC,SAAZ,CAAsBL,MAAtB,CAAf;IAEAjD,MAAM,CAACsB,QAAP,CAAgB4lB,gBAAhB,CACE,iBADF,EAEEjJ,4BAFF;IAKA,OAAO;MACLje,MAAM,CAACsB,QAAP,CAAgB6lB,mBAAhB,CACE,iBADF,EAEElJ,4BAFF;IAID,CALD;EAMD,CAdwB,EActB,CAACA,4BAAD,CAdsB,CAAzB;EAgBA,IAAMxL,WAAW,GAAGyB,QAAQ,CAAC,CAACjR,MAAD,EAAS,EAAT,CAAD,CAA5B;EAEA,IACE4O,WAAW,IACX5O,MAAM,CAACqN,QAAP,CAAgBtT,MAAhB,KAA2B,CAD3B,IAEAoF,KAAK,CAACC,IAAN,CAAWpC,IAAI,CAAC4I,KAAL,CAAW5F,MAAX,CAAX,EAA+BjG,MAA/B,KAA0C,CAF1C,IAGAiD,IAAI,CAACoQ,MAAL,CAAYpN,MAAZ,MAAwB,EAHxB,IAIA,CAACwC,WALH,EAME;IACA,IAAMsD,KAAK,GAAG/C,MAAM,CAAC+C,KAAP,CAAa9F,MAAb,EAAqB,EAArB,CAAd;IACAwP,WAAW,CAACG,IAAZ,CAAiB;MACf,CAACzT,kBAAD,GAAsB,IADP;MAEf0S,WAFe;MAGfjI,MAAM,EAAEb,KAHO;MAIf/B,KAAK,EAAE+B;IAJQ,CAAjB;EAMD;EAED,IAAM;IAAEwW;EAAF,IAAYtc,MAAlB;EACAwhB,KAAK,CAACK,kBAAN,GAA2B,KAA3B;EAEA,IAAI7hB,MAAM,CAACkE,SAAP,IAAoB2C,KAAK,CAACG,WAAN,CAAkBhH,MAAM,CAACkE,SAAzB,CAApB,IAA2DoY,KAA/D,EAAsE;IACpE,IAAM;MAAE3V;IAAF,IAAa3G,MAAM,CAACkE,SAA1B;IACA,IAAM4I,IAAI,GAAG9P,IAAI,CAAC8P,IAAL,CAAU9M,MAAV,EAAkB2G,MAAM,CAAC7D,IAAzB,CAAb;IACA,IAAiBqhB,IAAjB,4BAA0BrX,IAA1B,cAHoE;IAMpE;;IACA,IAAI,CAACvQ,MAAI,CAACoQ,MAAL,CAAYG,IAAZ,EAAkBwP,KAAlB,EAAiC;MAAE8H,KAAK,EAAE;IAAT,CAAjC,CAAL,EAAwD;MACtD5C,KAAK,CAACK,kBAAN,GAA2B,IAA3B;MAEA,IAAMwC,KAAK,GAAGlrB,MAAM,CAACmrB,WAAP,CACZnrB,MAAM,CAACU,IAAP,CAAYsqB,IAAZ,EAAkBI,GAAlB,CAAsBC,IAAI,IAAI,CAACA,IAAD,EAAO,IAAP,CAA9B,CADY,CAAd;MAIAhV,WAAW,CAACG,IAAZ;QACE,CAACvT,uBAAD,GAA2B;MAD7B,GAEKioB,KAFL,GAGK/H,KAHL;QAKE3V,MALF;QAME5C,KAAK,EAAE4C;MANT;IAQD;EACF;EAGD;;EACAoF,SAAS,CAAC;IACRoQ,UAAU,CAAC;MACT,IAAM;QAAEjY;MAAF,IAAgBlE,MAAtB;MACA,IAAIkE,SAAJ,EAAe;QACb,IAAM;UAAEyC,MAAM,EAANA;QAAF,IAAazC,SAAnB;QACA,IAAMlF,KAAI,GAAGhC,IAAI,CAAC8P,IAAL,CAAU9M,MAAV,EAAkB2G,OAAM,CAAC7D,IAAzB,CAAb,CAFa;QAKb;;QACA,IAAIwZ,KAAK,IAAI,CAAC/f,MAAI,CAACoQ,MAAL,CAAY3N,KAAZ,EAAkBsd,KAAlB,EAAiC;UAAE8H,KAAK,EAAE;QAAT,CAAjC,CAAd,EAAiE;UAC/DxoB,iCAAiC,CAACgH,GAAlC,CAAsC5C,MAAtC,EAA8Csc,KAA9C;UACA;QACD;MACF;MAED1gB,iCAAiC,CAAC8S,MAAlC,CAAyC1O,MAAzC;IACD,CAfS,CAAV;EAgBD,CAjBQ,CAAT;EAmBA,oBACEgB,oBAAC6Q,eAAe,CAACH,QAAjB;IAA0BxY,KAAK,EAAEgX;GAAjC,eACElP,oBAAC6P,eAAe,CAACa,QAAjB;IAA0BxY,KAAK,EAAE+X;GAAjC,eACEjQ,oBAACgX,UAAD;IAAYpa,IAAI,EAAE6P;IAAKsI,iBAAiB,EAAEA;GAA1C,eACE/U,oBAACkW,SAAD;IACEuN,IAAI,EAAEvU,QAAQ,GAAGyM,SAAH,GAAe;sBACbzM,QAAQ,GAAGyM,SAAH,GAAe;KACnC9O;IACJ;IACA;IACA;IACA;IACA;IACA6W,UAAU,EACRriB,wBAAwB,IAAI,CAACF,WAA7B,GACI0L,UAAU,CAAC6W,UADf,GAEI;IAENC,WAAW,EACTtiB,wBAAwB,IAAI,CAACF,WAA7B,GACI0L,UAAU,CAAC8W,WADf,GAEI;IAENC,cAAc,EACZviB,wBAAwB,IAAI,CAACF,WAA7B,GACI0L,UAAU,CAAC+W,cADf,GAEI;;uBAGU;IAChB;IACA1V,eAAe,EAAE,CAACgB;IAClB;IACA;IACA;IACA2U,MAAM,EAAE,CAAC;IACTC,8BAA8B;IAC9BrX,GAAG,EAAEA;IACLc,KAAK;MACH;MACArF,QAAQ,EAAE,UAFP;MAGH;MACAyH,OAAO,EAAE,MAJN;MAKH;MACAiT,UAAU,EAAE,UANT;MAOH;MACAmB,QAAQ,EAAE;IARP,GAUAxW,KAVA;IAYLyW,aAAa,EAAE5U,WAAW,CACvB9S,KAAD;MACE;MACA;MACA;MACA,IACE,CAAC+E,wBAAD,IACA,CAAC6N,QADD,IAEA,CAAC+U,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACmX,aAAnB,CAFf,IAGA/C,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAJnB,EAKE;QACA2D,KAAK,CAACwmB,cAAN;QACA,IAAI,CAAC1jB,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,CAAL,EAAsC;UACpC,IAAMhB,MAAI,GAAI1B,KAAa,CAAC2H,IAA5B;UACAlC,MAAM,CAAC6Z,UAAP,CAAkB5c,MAAlB,EAA0BhB,MAA1B;QACD;MACF;IACF,CAjBuB,EAkBxB,CAACkR,QAAD,CAlBwB;IAoB1BgV,OAAO,EAAE9U,WAAW,CAAE9S,KAAD;MACnB,IAAIykB,mBAAJ,EAAyB;QACvBA,mBAAmB,CAACxC,WAApB;QACA;MACD;MAGD;MACA;MACA;;MACA,KAAK,IAAMpF,EAAX,IAAiBiH,kBAAkB,CAAC5W,OAApC,EAA6C;QAC3C2P,EAAE;MACH;MACDiH,kBAAkB,CAAC5W,OAAnB,GAA6B,EAA7B;IACD,CAdmB,EAcjB,EAdiB;IAepB2a,MAAM,EAAE/U,WAAW,CAChB9S,KAAD;MACE,IACE4S,QAAQ,IACRsR,KAAK,CAACG,mBADN,IAEA,CAACM,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAFlB,IAGAsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACsX,MAAnB,CAJhB,EAKE;QACA;MACD;MAGD;MACA;MACA;;MACA,IAAM5hB,IAAI,GAAGnD,WAAW,CAACgD,wBAAZ,CAAqCpD,MAArC,CAAb;MACA,IAAIwhB,KAAK,CAACI,aAAN,KAAwBre,IAAI,CAACjF,aAAjC,EAAgD;QAC9C;MACD;MAED,IAAM;QAAE8mB;MAAF,IAAoB9nB,KAA1B;MACA,IAAM+F,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAX;MAGA;MACA;;MACA,IAAIolB,aAAa,KAAK/hB,EAAtB,EAA0B;QACxB;MACD;MAGD;;MACA,IACEvG,YAAY,CAACsoB,aAAD,CAAZ,IACAA,aAAa,CAACjf,YAAd,CAA2B,mBAA3B,CAFF,EAGE;QACA;MACD;MAGD;MACA;;MACA,IACEif,aAAa,IAAI,IAAjB,IACAxoB,SAAS,CAACwoB,aAAD,CADT,IAEAhlB,WAAW,CAACG,UAAZ,CAAuBP,MAAvB,EAA+BolB,aAA/B,CAHF,EAIE;QACA,IAAMxnB,IAAI,GAAGwC,WAAW,CAACyH,WAAZ,CAAwB7H,MAAxB,EAAgColB,aAAhC,CAAb;QAEA,IAAIvV,SAAO,CAACsB,SAAR,CAAkBvT,IAAlB,KAA2B,CAACoC,MAAM,CAACqI,MAAP,CAAczK,IAAd,CAAhC,EAAqD;UACnD;QACD;MACF;MAGD;MACA;;MACA,IAAI+D,SAAJ,EAAe;QACb,IAAMwC,YAAY,GAAGZ,IAAI,CAACI,YAAL,EAArB;QACAQ,YAAY,SAAZ,gBAAY,WAAZ,wBAAY,CAAEE,eAAd;MACD;MAED9I,UAAU,CAACmT,MAAX,CAAkB1O,MAAlB;IACD,CA/DgB,EAgEjB,CAACkQ,QAAD,EAAWrC,UAAU,CAACsX,MAAtB,CAhEiB;IAkEnBE,OAAO,EAAEjV,WAAW,CACjB9S,KAAD;MACE,IACEgoB,SAAS,CAACtlB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAAT,IACA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACwX,OAAnB,CADf,IAEAzoB,SAAS,CAACU,KAAK,CAAC3D,MAAP,CAHX,EAIE;QACA,IAAMiE,IAAI,GAAGwC,WAAW,CAACyH,WAAZ,CAAwB7H,MAAxB,EAAgC1C,KAAK,CAAC3D,MAAtC,CAAb;QACA,IAAMmJ,IAAI,GAAG1C,WAAW,CAACyC,QAAZ,CAAqB7C,MAArB,EAA6BpC,IAA7B,CAAb,CAFA;QAKA;QACA;QACA;;QACA,IACE,CAACmF,MAAM,CAAC2I,OAAP,CAAe1L,MAAf,EAAuB8C,IAAvB,CAAD,IACA9F,IAAI,CAACyF,GAAL,CAASzC,MAAT,EAAiB8C,IAAjB,MAA2BlF,IAF7B,EAGE;UACA;QACD;QAED,IAAIN,KAAK,CAACioB,MAAN,KAAiBrT,YAAjB,IAAiCpP,IAAI,CAAC/I,MAAL,IAAe,CAApD,EAAuD;UACrD,IAAIyrB,SAAS,GAAG1iB,IAAhB;UACA,IAAI,CAACC,MAAM,CAAC+W,OAAP,CAAe9Z,MAAf,EAAuBpC,IAAvB,CAAL,EAAmC;YAAA;YACjC,IAAMimB,KAAK,GAAG9gB,MAAM,CAAC8W,KAAP,CAAa7Z,MAAb,EAAqB;cACjCF,KAAK,EAAEtF,CAAC,IAAIuI,MAAM,CAAC+W,OAAP,CAAe9Z,MAAf,EAAuBxF,CAAvB,CADqB;cAEjCkL,EAAE,EAAE5C;YAF6B,CAArB,CAAd;YAKA0iB,SAAS,cAAG3B,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAG,CAAH,CAAR,6CAAiB/gB,IAAI,CAACqH,KAAL,CAAW,CAAX,EAAc,CAAd,CAA1B;UACD;UAED,IAAMzD,KAAK,GAAG3D,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqBwlB,SAArB,CAAd;UACAlhB,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0B0G,KAA1B;UACA;QACD;QAED,IAAIwJ,QAAJ,EAAc;UACZ;QACD;QAED,IAAMpK,MAAK,GAAG/C,MAAM,CAAC+C,KAAP,CAAa9F,MAAb,EAAqB8C,IAArB,CAAd;QACA,IAAMmD,GAAG,GAAGlD,MAAM,CAACkD,GAAP,CAAWjG,MAAX,EAAmB8C,IAAnB,CAAZ;QACA,IAAM2iB,SAAS,GAAG1iB,MAAM,CAAC0C,IAAP,CAAYzF,MAAZ,EAAoB;UAAE0F,EAAE,EAAEI;QAAN,CAApB,CAAlB;QACA,IAAM4f,OAAO,GAAG3iB,MAAM,CAAC0C,IAAP,CAAYzF,MAAZ,EAAoB;UAAE0F,EAAE,EAAEO;QAAN,CAApB,CAAhB;QAEA,IACEwf,SAAS,IACTC,OADA,IAEAzY,IAAI,CAACN,MAAL,CAAY8Y,SAAS,CAAC,CAAD,CAArB,EAA0BC,OAAO,CAAC,CAAD,CAAjC,CAHF,EAIE;UACA,IAAMhf,MAAK,GAAG3D,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqB8F,MAArB,CAAd;UACAxB,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0B0G,MAA1B;QACD;MACF;IACF,CAvDiB,EAwDlB,CAACwJ,QAAD,EAAWrC,UAAU,CAACwX,OAAtB,CAxDkB;IA0DpBM,gBAAgB,EAAEvV,WAAW,CAC1B9S,KAAD;MACE,IAAI2kB,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAArB,EAA6C;QAC3C,IAAIyG,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,CAAJ,EAAqC;UACnCmhB,cAAc,CAAC,KAAD,CAAd;UACA3lB,YAAY,CAACoH,GAAb,CAAiB5C,MAAjB,EAAyB,KAAzB;QACD;QAED+hB,mBAAmB,SAAnB,uBAAmB,WAAnB,+BAAmB,CAAE3E,oBAArB,CAA0C9f,KAA1C;QAEA,IACE2nB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAAC8X,gBAAnB,CAAd,IACAlkB,UAFF,EAGE;UACA;QACD,CAb0C;QAgB3C;QACA;QACA;;QACA,IACE,CAACE,SAAD,IACA,CAACI,iBADD,IAEA,CAACZ,MAFD,IAGA,CAACa,YAHD,IAIA,CAACE,gBAJD,IAKA,CAACD,YALD,IAMA3E,KAAK,CAAC2H,IAPR,EAQE;UACA,IAAM2gB,gBAAgB,GAAGhqB,iCAAiC,CAAC6G,GAAlC,CACvBzC,MADuB,CAAzB;UAGApE,iCAAiC,CAAC8S,MAAlC,CAAyC1O,MAAzC,EAJA;;UAOA,IAAI4lB,gBAAgB,KAAKjJ,SAAzB,EAAoC;YAClC9gB,oBAAoB,CAAC+G,GAArB,CAAyB5C,MAAzB,EAAiCA,MAAM,CAACsc,KAAxC;YACAtc,MAAM,CAACsc,KAAP,GAAesJ,gBAAf;UACD;UAED7iB,MAAM,CAAC6Z,UAAP,CAAkB5c,MAAlB,EAA0B1C,KAAK,CAAC2H,IAAhC;UAEA,IAAMiY,SAAS,GAAGrhB,oBAAoB,CAAC4G,GAArB,CAAyBzC,MAAzB,CAAlB;UACAnE,oBAAoB,CAAC6S,MAArB,CAA4B1O,MAA5B;UACA,IAAIkd,SAAS,KAAKP,SAAlB,EAA6B;YAC3B3c,MAAM,CAACsc,KAAP,GAAeY,SAAf;UACD;QACF;MACF;IACF,CAlD0B,EAmD3B,CAACrP,UAAU,CAAC8X,gBAAZ,CAnD2B;IAqD7BE,mBAAmB,EAAEzV,WAAW,CAC7B9S,KAAD;MACE,IACE2kB,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAAjB,IACA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACgY,mBAAnB,CAFjB,EAGE;QACA,IAAI,CAACzlB,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,CAAL,EAAsC;UACpCmhB,cAAc,CAAC,IAAD,CAAd;UACA3lB,YAAY,CAACoH,GAAb,CAAiB5C,MAAjB,EAAyB,IAAzB;QACD;MACF;IACF,CAX6B,EAY9B,CAAC6N,UAAU,CAACgY,mBAAZ,CAZ8B;IAchCC,kBAAkB,EAAE1V,WAAW,CAC5B9S,KAAD;MACE,IAAI2kB,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAArB,EAA6C;QAC3CooB,mBAAmB,SAAnB,uBAAmB,WAAnB,+BAAmB,CAAEzE,sBAArB,CAA4ChgB,KAA5C;QAEA,IACE2nB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACiY,kBAAnB,CAAd,IACArkB,UAFF,EAGE;UACA;QACD;QAED0f,cAAc,CAAC,IAAD,CAAd;QAEA,IAAM;UAAEjd;QAAF,IAAgBlE,MAAtB;QACA,IAAIkE,SAAJ,EAAe;UACb,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAJ,EAAiC;YAC/BnB,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB;YACA;UACD;UACD,IAAM+lB,MAAM,GAAGhjB,MAAM,CAAC8W,KAAP,CAAa7Z,MAAb,EAAqB;YAClCF,KAAK,EAAEtF,CAAC,IAAIuI,MAAM,CAAC0F,QAAP,CAAgBzI,MAAhB,EAAwBxF,CAAxB,CADsB;YAElC8Q,IAAI,EAAE;UAF4B,CAArB,CAAf;UAIA,IAAIya,MAAJ,EAAY;YACV,IAAM,GAAGC,UAAH,IAAiBD,MAAvB;YACA,IAAIhjB,MAAM,CAACkjB,KAAP,CAAajmB,MAAb,EAAqBkE,SAAS,CAACyC,MAA/B,EAAuCqf,UAAvC,CAAJ,EAAwD;cACtD,IAAMxgB,KAAK,GAAGzC,MAAM,CAACiG,KAAP,CAAahJ,MAAb,EAAqBgmB,UAArB,CAAd;cACA1hB,UAAU,CAAC4hB,YAAX,CAAwBlmB,MAAxB,EAAgC;gBAC9B2G,MAAM,EAAEnB,KADsB;gBAE9BzB,KAAK,EAAEyB;cAFuB,CAAhC;YAID;UACF;QACF;MACF;IACF,CApC4B,EAqC7B,CAACqI,UAAU,CAACiY,kBAAZ,CArC6B;IAuC/BK,MAAM,EAAE/V,WAAW,CAChB9S,KAAD;MACE,IACE2kB,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAAjB,IACA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACsY,MAAnB,CAFjB,EAGE;QACA7oB,KAAK,CAACwmB,cAAN;QACA1jB,WAAW,CAACgF,eAAZ,CACEpF,MADF,EAEE1C,KAAK,CAACC,aAFR,EAGE,MAHF;MAKD;IACF,CAbgB,EAcjB,CAACsQ,UAAU,CAACsY,MAAZ,CAdiB;IAgBnBC,KAAK,EAAEhW,WAAW,CACf9S,KAAD;MACE,IACE,CAAC4S,QAAD,IACA+R,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CADjB,IAEA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACuY,KAAnB,CAHjB,EAIE;QACA9oB,KAAK,CAACwmB,cAAN;QACA1jB,WAAW,CAACgF,eAAZ,CACEpF,MADF,EAEE1C,KAAK,CAACC,aAFR,EAGE,KAHF;QAKA,IAAM;UAAE2G;QAAF,IAAgBlE,MAAtB;QAEA,IAAIkE,SAAJ,EAAe;UACb,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAJ,EAAiC;YAC/BnB,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB;UACD,CAFD,MAEO;YACL,IAAMpC,IAAI,GAAGZ,IAAI,CAACwB,MAAL,CAAYwB,MAAZ,EAAoBkE,SAAS,CAACyC,MAAV,CAAiB7D,IAArC,CAAb;YACA,IAAIC,MAAM,CAACsF,MAAP,CAAcrI,MAAd,EAAsBpC,IAAtB,CAAJ,EAAiC;cAC/B0G,UAAU,CAACoK,MAAX,CAAkB1O,MAAlB;YACD;UACF;QACF;MACF;IACF,CA1Be,EA2BhB,CAACkQ,QAAD,EAAWrC,UAAU,CAACuY,KAAtB,CA3BgB;IA6BlBC,UAAU,EAAEjW,WAAW,CACpB9S,KAAD;MACE,IACEgoB,SAAS,CAACtlB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAAT,IACA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACwY,UAAnB,CAFjB,EAGE;QACA;QACA;QACA;QACA,IAAMzoB,IAAI,GAAGwC,WAAW,CAACyH,WAAZ,CAAwB7H,MAAxB,EAAgC1C,KAAK,CAAC3D,MAAtC,CAAb;QAEA,IAAIoJ,MAAM,CAACsF,MAAP,CAAcrI,MAAd,EAAsBpC,IAAtB,CAAJ,EAAiC;UAC/BN,KAAK,CAACwmB,cAAN;QACD;MACF;IACF,CAfoB,EAgBrB,CAACjW,UAAU,CAACwY,UAAZ,CAhBqB;IAkBvBC,WAAW,EAAElW,WAAW,CACrB9S,KAAD;MACE,IACE,CAAC4S,QAAD,IACAoV,SAAS,CAACtlB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CADT,IAEA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACyY,WAAnB,CAHjB,EAIE;QACA,IAAM1oB,IAAI,GAAGwC,WAAW,CAACyH,WAAZ,CAAwB7H,MAAxB,EAAgC1C,KAAK,CAAC3D,MAAtC,CAAb;QACA,IAAMmJ,IAAI,GAAG1C,WAAW,CAACyC,QAAZ,CAAqB7C,MAArB,EAA6BpC,IAA7B,CAAb;QACA,IAAM2oB,SAAS,GACbxjB,MAAM,CAACsF,MAAP,CAAcrI,MAAd,EAAsBpC,IAAtB,KACAmF,MAAM,CAAC0C,IAAP,CAAYzF,MAAZ,EAAoB;UAAE0F,EAAE,EAAE5C,IAAN;UAAY0I,KAAK,EAAE;QAAnB,CAApB,CAFF,CAHA;QAQA;;QACA,IAAI+a,SAAJ,EAAe;UACb,IAAM7f,KAAK,GAAG3D,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqB8C,IAArB,CAAd;UACAwB,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0B0G,KAA1B;QACD;QAED8a,KAAK,CAACE,oBAAN,GAA6B,IAA7B;QAEAthB,WAAW,CAACgF,eAAZ,CACEpF,MADF,EAEE1C,KAAK,CAACqC,YAFR,EAGE,MAHF;MAKD;IACF,CA5BqB,EA6BtB,CAACuQ,QAAD,EAAWrC,UAAU,CAACyY,WAAtB,CA7BsB;IA+BxBE,MAAM,EAAEpW,WAAW,CAChB9S,KAAD;MACE,IACE,CAAC4S,QAAD,IACAoV,SAAS,CAACtlB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CADT,IAEA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAAC2Y,MAAnB,CAHjB,EAIE;QACAlpB,KAAK,CAACwmB,cAAN,GADA;;QAIA,IAAM2C,YAAY,GAAGzmB,MAAM,CAACkE,SAA5B,CAJA;;QAOA,IAAMwC,KAAK,GAAGtG,WAAW,CAAC2H,cAAZ,CAA2B/H,MAA3B,EAAmC1C,KAAnC,CAAd;QACA,IAAM2H,IAAI,GAAG3H,KAAK,CAACqC,YAAnB;QAEA2E,UAAU,CAACoX,MAAX,CAAkB1b,MAAlB,EAA0B0G,KAA1B;QAEA,IAAI8a,KAAK,CAACE,oBAAV,EAAgC;UAC9B,IACE+E,YAAY,IACZ,CAAC5f,KAAK,CAAC8F,MAAN,CAAa8Z,YAAb,EAA2B/f,KAA3B,CADD,IAEA,CAAC3D,MAAM,CAAC0C,IAAP,CAAYzF,MAAZ,EAAoB;YAAE0F,EAAE,EAAEgB,KAAN;YAAa8E,KAAK,EAAE;UAApB,CAApB,CAHH,EAIE;YACAlH,UAAU,CAACoK,MAAX,CAAkB1O,MAAlB,EAA0B;cACxB0F,EAAE,EAAE+gB;YADoB,CAA1B;UAGD;QACF;QAEDrmB,WAAW,CAAC4E,UAAZ,CAAuBhF,MAAvB,EAA+BiF,IAA/B,EAxBA;QA2BA;;QACA,IAAI,CAAC7E,WAAW,CAACwD,SAAZ,CAAsB5D,MAAtB,CAAL,EAAoC;UAClCI,WAAW,CAAC2D,KAAZ,CAAkB/D,MAAlB;QACD;MACF;MAEDwhB,KAAK,CAACE,oBAAN,GAA6B,KAA7B;IACD,CAxCgB,EAyCjB,CAACxR,QAAD,EAAWrC,UAAU,CAAC2Y,MAAtB,CAzCiB;IA2CnBE,SAAS,EAAEtW,WAAW,CACnB9S,KAAD;MACE,IACE,CAAC4S,QAAD,IACAsR,KAAK,CAACE,oBADN,IAEA7T,UAAU,CAAC6Y,SAFX,IAGApB,SAAS,CAACtlB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAJX,EAKE;QACAkU,UAAU,CAAC6Y,SAAX,CAAqBppB,KAArB;MACD;MAGD;MACA;;MACAkkB,KAAK,CAACE,oBAAN,GAA6B,KAA7B;IACD,CAfmB,EAgBpB,CAACxR,QAAD,EAAWrC,UAAU,CAAC6Y,SAAtB,CAhBoB;IAkBtBC,OAAO,EAAEvW,WAAW,CACjB9S,KAAD;MACE,IACE,CAAC4S,QAAD,IACA,CAACsR,KAAK,CAACG,mBADP,IAEAM,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAFjB,IAGA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAAC8Y,OAAnB,CAJjB,EAKE;QACA,IAAMtjB,EAAE,GAAGjD,WAAW,CAACkD,SAAZ,CAAsBtD,MAAtB,EAA8BA,MAA9B,CAAX;QACA,IAAMuD,IAAI,GAAGnD,WAAW,CAACgD,wBAAZ,CAAqCpD,MAArC,CAAb;QACAwhB,KAAK,CAACI,aAAN,GAAsBre,IAAI,CAACjF,aAA3B,CAHA;QAMA;QACA;;QACA,IAAIoD,UAAU,IAAIpE,KAAK,CAAC3D,MAAN,KAAiB0J,EAAnC,EAAuC;UACrCA,EAAE,CAACU,KAAH;UACA;QACD;QAEDxI,UAAU,CAACqH,GAAX,CAAe5C,MAAf,EAAuB,IAAvB;MACD;IACF,CAtBiB,EAuBlB,CAACkQ,QAAD,EAAWrC,UAAU,CAAC8Y,OAAtB,CAvBkB;IAyBpBC,SAAS,EAAExW,WAAW,CACnB9S,KAAD;MACE,IAAI,CAAC4S,QAAD,IAAa+R,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CAAlC,EAA0D;QACxDooB,mBAAmB,SAAnB,uBAAmB,WAAnB,+BAAmB,CAAEvC,aAArB,CAAmCliB,KAAnC;QAEA,IAAM;UAAE0K;QAAF,IAAkB1K,KAAxB,CAHwD;QAMxD;QACA;;QACA,IACE8C,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,KACAgI,WAAW,CAACxF,WAAZ,KAA4B,KAF9B,EAGE;UACAhH,YAAY,CAACoH,GAAb,CAAiB5C,MAAjB,EAAyB,KAAzB;UACAmhB,cAAc,CAAC,KAAD,CAAd;QACD;QAED,IACE8D,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAAC+Y,SAAnB,CAAd,IACAxmB,WAAW,CAACoC,WAAZ,CAAwBxC,MAAxB,CAFF,EAGE;UACA;QACD;QAED,IAAM;UAAEkE;QAAF,IAAgBlE,MAAtB;QACA,IAAM8P,OAAO,GACX9P,MAAM,CAACqN,QAAP,CACEnJ,SAAS,KAAK,IAAd,GAAqBA,SAAS,CAACH,KAAV,CAAgBjB,IAAhB,CAAqB,CAArB,CAArB,GAA+C,CADjD,CADF;QAIA,IAAM+jB,KAAK,GAAGrW,YAAY,CAACxT,IAAI,CAACoQ,MAAL,CAAY0C,OAAZ,CAAD,CAAZ,KAAuC,KAArD,CA5BwD;QA+BxD;QACA;QACA;;QACA,IAAIgX,OAAO,CAACrR,MAAR,CAAezN,WAAf,CAAJ,EAAiC;UAC/B1K,KAAK,CAACwmB,cAAN;UACA,IAAMiD,kBAAkB,GAAQ/mB,MAAhC;UAEA,IAAI,OAAO+mB,kBAAkB,CAACpT,IAA1B,KAAmC,UAAvC,EAAmD;YACjDoT,kBAAkB,CAACpT,IAAnB;UACD;UAED;QACD;QAED,IAAImT,OAAO,CAACjR,MAAR,CAAe7N,WAAf,CAAJ,EAAiC;UAC/B1K,KAAK,CAACwmB,cAAN;UACA,IAAMiD,mBAAkB,GAAQ/mB,MAAhC;UAEA,IAAI,OAAO+mB,mBAAkB,CAAC9T,IAA1B,KAAmC,UAAvC,EAAmD;YACjD8T,mBAAkB,CAAC9T,IAAnB;UACD;UAED;QACD,CAtDuD;QAyDxD;QACA;QACA;;QACA,IAAI6T,OAAO,CAACzR,kBAAR,CAA2BrN,WAA3B,CAAJ,EAA6C;UAC3C1K,KAAK,CAACwmB,cAAN;UACAxf,UAAU,CAAC0iB,IAAX,CAAgBhnB,MAAhB,EAAwB;YAAEye,IAAI,EAAE,MAAR;YAAgBlI,OAAO,EAAE;UAAzB,CAAxB;UACA;QACD;QAED,IAAIuQ,OAAO,CAACxR,iBAAR,CAA0BtN,WAA1B,CAAJ,EAA4C;UAC1C1K,KAAK,CAACwmB,cAAN;UACAxf,UAAU,CAAC0iB,IAAX,CAAgBhnB,MAAhB,EAAwB;YAAEye,IAAI,EAAE;UAAR,CAAxB;UACA;QACD;QAED,IAAIqI,OAAO,CAAC5R,oBAAR,CAA6BlN,WAA7B,CAAJ,EAA+C;UAC7C1K,KAAK,CAACwmB,cAAN;UACAxf,UAAU,CAAC0iB,IAAX,CAAgBhnB,MAAhB,EAAwB;YACtBye,IAAI,EAAE,MADgB;YAEtB3V,IAAI,EAAE,OAFgB;YAGtByN,OAAO,EAAE;UAHa,CAAxB;UAKA;QACD;QAED,IAAIuQ,OAAO,CAAC3R,mBAAR,CAA4BnN,WAA5B,CAAJ,EAA8C;UAC5C1K,KAAK,CAACwmB,cAAN;UACAxf,UAAU,CAAC0iB,IAAX,CAAgBhnB,MAAhB,EAAwB;YAAEye,IAAI,EAAE,MAAR;YAAgB3V,IAAI,EAAE;UAAtB,CAAxB;UACA;QACD,CAtFuD;QAyFxD;QACA;QACA;QACA;;QACA,IAAIge,OAAO,CAACtS,cAAR,CAAuBxM,WAAvB,CAAJ,EAAyC;UACvC1K,KAAK,CAACwmB,cAAN;UAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACG,WAAN,CAAkB9C,SAAlB,CAAjB,EAA+C;YAC7CI,UAAU,CAAC0iB,IAAX,CAAgBhnB,MAAhB,EAAwB;cAAEuW,OAAO,EAAE,CAACsQ;YAAZ,CAAxB;UACD,CAFD,MAEO;YACLviB,UAAU,CAAC2iB,QAAX,CAAoBjnB,MAApB,EAA4B;cAAE8I,IAAI,EAAE;YAAR,CAA5B;UACD;UAED;QACD;QAED,IAAIge,OAAO,CAACrS,aAAR,CAAsBzM,WAAtB,CAAJ,EAAwC;UACtC1K,KAAK,CAACwmB,cAAN;UAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACG,WAAN,CAAkB9C,SAAlB,CAAjB,EAA+C;YAC7CI,UAAU,CAAC0iB,IAAX,CAAgBhnB,MAAhB,EAAwB;cAAEuW,OAAO,EAAEsQ;YAAX,CAAxB;UACD,CAFD,MAEO;YACLviB,UAAU,CAAC2iB,QAAX,CAAoBjnB,MAApB,EAA4B;cAAE8I,IAAI,EAAE;YAAR,CAA5B;UACD;UAED;QACD;QAED,IAAIge,OAAO,CAACvR,kBAAR,CAA2BvN,WAA3B,CAAJ,EAA6C;UAC3C1K,KAAK,CAACwmB,cAAN;UAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAjB,EAA8C;YAC5CI,UAAU,CAAC2iB,QAAX,CAAoBjnB,MAApB,EAA4B;cAAE8I,IAAI,EAAE;YAAR,CAA5B;UACD;UAEDxE,UAAU,CAAC0iB,IAAX,CAAgBhnB,MAAhB,EAAwB;YAAEye,IAAI,EAAE,MAAR;YAAgBlI,OAAO,EAAE,CAACsQ;UAA1B,CAAxB;UACA;QACD;QAED,IAAIC,OAAO,CAACtR,iBAAR,CAA0BxN,WAA1B,CAAJ,EAA4C;UAC1C1K,KAAK,CAACwmB,cAAN;UAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAjB,EAA8C;YAC5CI,UAAU,CAAC2iB,QAAX,CAAoBjnB,MAApB,EAA4B;cAAE8I,IAAI,EAAE;YAAR,CAA5B;UACD;UAEDxE,UAAU,CAAC0iB,IAAX,CAAgBhnB,MAAhB,EAAwB;YAAEye,IAAI,EAAE,MAAR;YAAgBlI,OAAO,EAAEsQ;UAAzB,CAAxB;UACA;QACD,CAzIuD;QA4IxD;QACA;;QACA,IAAI,CAACxkB,wBAAL,EAA+B;UAC7B;UACA;UACA,IACEykB,OAAO,CAACxS,MAAR,CAAetM,WAAf,KACA8e,OAAO,CAAC1R,QAAR,CAAiBpN,WAAjB,CADA,IAEA8e,OAAO,CAAClR,oBAAR,CAA6B5N,WAA7B,CAHF,EAIE;YACA1K,KAAK,CAACwmB,cAAN;YACA;UACD;UAED,IAAIgD,OAAO,CAACpR,WAAR,CAAoB1N,WAApB,CAAJ,EAAsC;YACpC1K,KAAK,CAACwmB,cAAN;YACA/gB,MAAM,CAACgQ,eAAP,CAAuB/S,MAAvB;YACA;UACD;UAED,IAAI8mB,OAAO,CAACnR,YAAR,CAAqB3N,WAArB,CAAJ,EAAuC;YACrC1K,KAAK,CAACwmB,cAAN;YACA/gB,MAAM,CAAC2b,WAAP,CAAmB1e,MAAnB;YACA;UACD;UAED,IAAI8mB,OAAO,CAACpS,gBAAR,CAAyB1M,WAAzB,CAAJ,EAA2C;YACzC1K,KAAK,CAACwmB,cAAN;YAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAjB,EAA8C;cAC5CnB,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,EAA8B;gBAAEvB,SAAS,EAAE;cAAb,CAA9B;YACD,CAFD,MAEO;cACLsE,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB;YACD;YAED;UACD;UAED,IAAI8mB,OAAO,CAACnS,eAAR,CAAwB3M,WAAxB,CAAJ,EAA0C;YACxC1K,KAAK,CAACwmB,cAAN;YAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAjB,EAA8C;cAC5CnB,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,EAA8B;gBAAEvB,SAAS,EAAE;cAAb,CAA9B;YACD,CAFD,MAEO;cACLsE,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB;YACD;YAED;UACD;UAED,IAAI8mB,OAAO,CAAClS,oBAAR,CAA6B5M,WAA7B,CAAJ,EAA+C;YAC7C1K,KAAK,CAACwmB,cAAN;YAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAjB,EAA8C;cAC5CnB,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,EAA8B;gBAAEvB,SAAS,EAAE;cAAb,CAA9B;YACD,CAFD,MAEO;cACLsE,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;gBAAEye,IAAI,EAAE;cAAR,CAA9B;YACD;YAED;UACD;UAED,IAAIqI,OAAO,CAACjS,mBAAR,CAA4B7M,WAA5B,CAAJ,EAA8C;YAC5C1K,KAAK,CAACwmB,cAAN;YAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAjB,EAA8C;cAC5CnB,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,EAA8B;gBAAEvB,SAAS,EAAE;cAAb,CAA9B;YACD,CAFD,MAEO;cACLsE,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;gBAAEye,IAAI,EAAE;cAAR,CAA7B;YACD;YAED;UACD;UAED,IAAIqI,OAAO,CAAChS,oBAAR,CAA6B9M,WAA7B,CAAJ,EAA+C;YAC7C1K,KAAK,CAACwmB,cAAN;YAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAjB,EAA8C;cAC5CnB,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,EAA8B;gBAAEvB,SAAS,EAAE;cAAb,CAA9B;YACD,CAFD,MAEO;cACLsE,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;gBAAEye,IAAI,EAAE;cAAR,CAA9B;YACD;YAED;UACD;UAED,IAAIqI,OAAO,CAAC/R,mBAAR,CAA4B/M,WAA5B,CAAJ,EAA8C;YAC5C1K,KAAK,CAACwmB,cAAN;YAEA,IAAI5f,SAAS,IAAI2C,KAAK,CAACuE,UAAN,CAAiBlH,SAAjB,CAAjB,EAA8C;cAC5CnB,MAAM,CAAC8Z,cAAP,CAAsB7c,MAAtB,EAA8B;gBAAEvB,SAAS,EAAE;cAAb,CAA9B;YACD,CAFD,MAEO;cACLsE,MAAM,CAAC4P,aAAP,CAAqB3S,MAArB,EAA6B;gBAAEye,IAAI,EAAE;cAAR,CAA7B;YACD;YAED;UACD;QACF,CA/FD,MA+FO;UACL,IAAI5c,SAAS,IAAIF,SAAjB,EAA4B;YAC1B;YACA;YACA,IACEuC,SAAS,KACR4iB,OAAO,CAACpS,gBAAR,CAAyB1M,WAAzB,KACC8e,OAAO,CAACnS,eAAR,CAAwB3M,WAAxB,CAFO,CAAT,IAGAnB,KAAK,CAACG,WAAN,CAAkB9C,SAAlB,CAJF,EAKE;cACA,IAAMgjB,WAAW,GAAGlqB,IAAI,CAACwB,MAAL,CAClBwB,MADkB,EAElBkE,SAAS,CAACyC,MAAV,CAAiB7D,IAFC,CAApB;cAKA,IACE+M,SAAO,CAACsB,SAAR,CAAkB+V,WAAlB,KACAnkB,MAAM,CAACsF,MAAP,CAAcrI,MAAd,EAAsBknB,WAAtB,CADA,KAECnkB,MAAM,CAAC0F,QAAP,CAAgBzI,MAAhB,EAAwBknB,WAAxB,KACCnkB,MAAM,CAAC+W,OAAP,CAAe9Z,MAAf,EAAuBknB,WAAvB,CAHF,CADF,EAKE;gBACA5pB,KAAK,CAACwmB,cAAN;gBACA/gB,MAAM,CAAC2P,cAAP,CAAsB1S,MAAtB,EAA8B;kBAAEye,IAAI,EAAE;gBAAR,CAA9B;gBAEA;cACD;YACF;UACF;QACF;MACF;IACF,CA7QmB,EA8QpB,CAACvO,QAAD,EAAWrC,UAAU,CAAC+Y,SAAtB,CA9QoB;IAgRtBO,OAAO,EAAE/W,WAAW,CACjB9S,KAAD;MACE,IACE,CAAC4S,QAAD,IACA+R,iBAAiB,CAACjiB,MAAD,EAAS1C,KAAK,CAAC3D,MAAf,CADjB,IAEA,CAACsrB,cAAc,CAAC3nB,KAAD,EAAQuQ,UAAU,CAACsZ,OAAnB,CAHjB,EAIE;QACA;QACA;QACA;QACA;QACA,IACE,CAAC9kB,wBAAD,IACAhF,oBAAoB,CAACC,KAAK,CAAC0K,WAAP,CAFtB,EAGE;UACA1K,KAAK,CAACwmB,cAAN;UACA1jB,WAAW,CAAC4E,UAAZ,CAAuBhF,MAAvB,EAA+B1C,KAAK,CAACC,aAArC;QACD;MACF;IACF,CAnBiB,EAoBlB,CAAC2S,QAAD,EAAWrC,UAAU,CAACsZ,OAAtB,CApBkB;IA3vBtB,eAkxBEnmB,oBAACyf,QAAD;IACEjR,WAAW,EAAEA;IACb5R,IAAI,EAAEoC;IACN+P,aAAa,EAAEA;IACf7B,iBAAiB,EAAEA;IACnBC,UAAU,EAAEA;IACZjK,SAAS,EAAElE,MAAM,CAACkE;GANpB,CAlxBF,CADF,CADF,CADF,CADF;AAmyBD;AAgBD;;;;IAIa6c,kBAAkB,GAAGpgB;EAAA,IAAC;IACjCkN,UADiC;IAEjCR;EAFiC,CAAD;EAAA;IAIhC;IACA;IACArM,8CAAU6M,WAAV,EACGR,QADH,EAEG5L,UAAU,iBAAIT,+BAFjB;EAAA;AANgC;AAYlC;;;;AAIO,IAAM4f,eAAe,GAAkC,MAAM,EAA7D;AAEP;;;;AAIA,IAAMK,8BAA8B,GAAG,CACrCjhB,MADqC,EAErCiH,QAFqC;EAIrC;EACA;EACA,IACE,CAACjH,MAAM,CAACkE,SAAR,IACClE,MAAM,CAACkE,SAAP,IAAoB2C,KAAK,CAACG,WAAN,CAAkBhH,MAAM,CAACkE,SAAzB,CAFvB,EAGE;IACA,IAAMkjB,MAAM,GAAGngB,QAAQ,CAAC6D,cAAT,CAAwBpG,aAAvC;IACA0iB,MAAM,CAAC7e,qBAAP,GAA+BtB,QAAQ,CAACsB,qBAAT,CAA+B8e,IAA/B,CAAoCpgB,QAApC,CAA/B;IACAqgB,cAAc,CAACF,MAAD,EAAS;MACrBG,UAAU,EAAE;IADS,CAAT,CAAd,CAHA;;IAQA,OAAOH,MAAM,CAAC7e,qBAAd;EACD;AACF,CAnBD;AAqBA;;;;AAIO,IAAM+c,SAAS,GAAG,CACvBtlB,MADuB,EAEvBrG,MAFuB;EAIvB,OAAOiD,SAAS,CAACjD,MAAD,CAAT,IAAqByG,WAAW,CAACG,UAAZ,CAAuBP,MAAvB,EAA+BrG,MAA/B,CAA5B;AACD,CALM;AAOP;;;;AAIO,IAAMsoB,iBAAiB,GAAG,CAC/BjiB,MAD+B,EAE/BrG,MAF+B;EAI/B,OACEiD,SAAS,CAACjD,MAAD,CAAT,IACAyG,WAAW,CAACG,UAAZ,CAAuBP,MAAvB,EAA+BrG,MAA/B,EAAuC;IAAE6G,QAAQ,EAAE;EAAZ,CAAvC,CAFF;AAID,CARM;AAUP;;;;AAIO,IAAM0hB,6BAA6B,GAAG,CAC3CliB,MAD2C,EAE3CrG,MAF2C;EAI3C,IAAI2B,YAAY,CAACmH,GAAb,CAAiBzC,MAAjB,CAAJ,EAA8B,OAAO,KAAP;EAE9B,IAAM4K,SAAS,GACb0a,SAAS,CAACtlB,MAAD,EAASrG,MAAT,CAAT,IAA6ByG,WAAW,CAACyH,WAAZ,CAAwB7H,MAAxB,EAAgCrG,MAAhC,CAD/B;EAEA,OAAOoJ,MAAM,CAACsF,MAAP,CAAcrI,MAAd,EAAsB4K,SAAtB,CAAP;AACD,CATM;AAWP;;;;AAIO,IAAMqa,cAAc,GAAG,CAG5B3nB,KAH4B,EAI5BkqB,OAJ4B;EAM5B,IAAI,CAACA,OAAL,EAAc;IACZ,OAAO,KAAP;EACD;EAED;;EACA,IAAMC,yBAAyB,GAAGD,OAAO,CAAClqB,KAAD,CAAzC;EAEA,IAAImqB,yBAAyB,IAAI,IAAjC,EAAuC;IACrC,OAAOA,yBAAP;EACD;EAED,OAAOnqB,KAAK,CAACoqB,kBAAN,MAA8BpqB,KAAK,CAACqqB,oBAAN,EAArC;AACD,CAlBM;AAoBP;;;;AAIO,IAAMxE,iBAAiB,GAAG,CAC/B7lB,KAD+B,EAE/BkqB,OAF+B;EAI/B,IAAI,CAACA,OAAL,EAAc;IACZ,OAAO,KAAP;EACD;EAGD;;EACA,IAAMC,yBAAyB,GAAGD,OAAO,CAAClqB,KAAD,CAAzC;EAEA,IAAImqB,yBAAyB,IAAI,IAAjC,EAAuC;IACrC,OAAOA,yBAAP;EACD;EAED,OAAOnqB,KAAK,CAACsqB,gBAAb;AACD,CAjBM;;ACxsDP;;;;AAIO,IAAMC,cAAc,gBAAG9Z,aAAa,CAAC,KAAD,CAApC;AAEP;;;;IAIa+Z,UAAU,GAAG;EACxB,OAAO9Z,UAAU,CAAC6Z,cAAD,CAAjB;AACD;ACHD,SAASE,OAAT,CAAiBC,KAAjB;EACE,OAAOA,KAAK,YAAYtlB,KAAxB;AACD;AAGD;;;;AAIO,IAAMulB,oBAAoB,gBAAGla,aAAa,CAG9C,EAH8C,CAA1C;AAKP,IAAMma,WAAW,GAAG,CAAC7O,CAAD,EAASC,CAAT,KAAoBD,CAAC,KAAKC,CAA9C;AAEA;;;;;;;;;;SASgB6O,iBACdxiB;MACAyiB,iFAAsCF;EAEtC,IAAM,GAAG7G,WAAH,IAAkBC,UAAU,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAV,EAAa,CAAb,CAAlC;EACA,IAAMvP,OAAO,GAAGhE,UAAU,CAACia,oBAAD,CAA1B;EACA,IAAI,CAACjW,OAAL,EAAc;IACZ,MAAM,IAAItP,KAAJ,oFAAN;EAGD;EACD,IAAM;IAAE2lB,QAAF;IAAYpE;EAAZ,IAAiCjS,OAAvC;EAEA,IAAMsW,+BAA+B,GAAG5a,MAAM,EAA9C;EACA,IAAM6a,cAAc,GAAG7a,MAAM,CAAwB,MAAM,IAA9B,CAA7B;EACA,IAAM8a,mBAAmB,GAAG9a,MAAM,CAAK,IAAL,CAAlC;EACA,IAAI+a,aAAJ;EAEA,IAAI;IACF,IACE9iB,QAAQ,KAAK4iB,cAAc,CAAC/d,OAA5B,IACA8d,+BAA+B,CAAC9d,OAFlC,EAGE;MACAie,aAAa,GAAG9iB,QAAQ,CAAC0iB,QAAQ,EAAT,CAAxB;IACD,CALD,MAKO;MACLI,aAAa,GAAGD,mBAAmB,CAAChe,OAApC;IACD;EACF,CATD,CASE,OAAO7F,GAAP,EAAY;IACZ,IAAI2jB,+BAA+B,CAAC9d,OAAhC,IAA2Cud,OAAO,CAACpjB,GAAD,CAAtD,EAA6D;MAC3DA,GAAG,CAACC,OAAJ,uEAA2E0jB,+BAA+B,CAAC9d,OAAhC,CAAwCke,KAAnH;IACD;IAED,MAAM/jB,GAAN;EACD;EACDkH,yBAAyB,CAAC;IACxB0c,cAAc,CAAC/d,OAAf,GAAyB7E,QAAzB;IACA6iB,mBAAmB,CAAChe,OAApB,GAA8Bie,aAA9B;IACAH,+BAA+B,CAAC9d,OAAhC,GAA0CmS,SAA1C;EACD,CAJwB,CAAzB;EAMA9Q,yBAAyB,CACvB;IACE,SAAS8c,eAAT;MACE,IAAI;QACF,IAAMC,gBAAgB,GAAGL,cAAc,CAAC/d,OAAf,CAAuB6d,QAAQ,EAA/B,CAAzB;QAEA,IAAID,UAAU,CAACQ,gBAAD,EAAmBJ,mBAAmB,CAAChe,OAAvC,CAAd,EAA+D;UAC7D;QACD;QAEDge,mBAAmB,CAAChe,OAApB,GAA8Boe,gBAA9B;MACD,CARD,CAQE,OAAOjkB,GAAP,EAAY;QACZ;QACA;QACA;QACA;QACA2jB,+BAA+B,CAAC9d,OAAhC,GAA0C7F,GAA1C;MACD;MAED0c,WAAW;IACZ;IAED,IAAMwH,WAAW,GAAG5E,gBAAgB,CAAC0E,eAAD,CAApC;IAEAA,eAAe;IAEf,OAAO,MAAME,WAAW,EAAxB;EACD,CA3BsB;EAAA;EA6BvB,CAAC5E,gBAAD,EAAmBoE,QAAnB,CA7BuB,CAAzB;EAgCA,OAAOI,aAAP;AACD;AAED;;;;SAGgBK,mBAAmB9oB;EACjC,IAAM+oB,cAAc,GAAGrb,MAAM,CAAwB,EAAxB,CAAN,CAAkClD,OAAzD;EACA,IAAMwe,QAAQ,GAAGtb,MAAM,CAEpB;IACD1N;EADC,CAFoB,CAAN,CAIdwK,OAJH;EAKA,IAAM2S,QAAQ,GAAG/M,WAAW,CAAEpQ,MAAD;IAC3BgpB,QAAQ,CAAChpB,MAAT,GAAkBA,MAAlB;IACA+oB,cAAc,CAAC3e,OAAf,CAAwB6e,QAAD,IAAmCA,QAAQ,CAACjpB,MAAD,CAAlE;EACD,CAH2B,EAGzB,EAHyB,CAA5B;EAKA,IAAMkpB,eAAe,GAAGzH,OAAO,CAAC;IAC9B,OAAO;MACL4G,QAAQ,EAAE,MAAMW,QAAQ,CAAChpB,MADpB;MAELikB,gBAAgB,EAAGlE,QAAD;QAChBgJ,cAAc,CAACpZ,IAAf,CAAoBoQ,QAApB;QACA,OAAO;UACLgJ,cAAc,CAAC/K,MAAf,CAAsB+K,cAAc,CAAC/uB,OAAf,CAAuB+lB,QAAvB,CAAtB,EAAwD,CAAxD;QACD,CAFD;MAGD;IAPI,CAAP;EASD,CAV8B,EAU5B,CAACgJ,cAAD,EAAiBC,QAAjB,CAV4B,CAA/B;EAWA,OAAO;IAAEE,eAAF;IAAmB/L;EAAnB,CAAP;AACD;;AC5HD;;;;;IAKagM,KAAK,GAAItc,KAAD;EAMnB,IAAM;MAAE7M,MAAF;MAAUqN,QAAV;MAAoB8P,QAApB;MAA8BjkB;IAA9B,IAAiD2T,KAAvD;IAA8CsX,IAA9C,4BAAuDtX,KAAvD;EACA,IAAMuc,UAAU,GAAG1b,MAAM,CAAC,KAAD,CAAzB;EAEA,IAAM,CAACsE,OAAD,EAAUqX,UAAV,IAAwBroB,KAAK,CAACgf,QAAN,CAAkC;IAC9D,IAAI,CAAChjB,IAAI,CAACssB,UAAL,CAAgBpwB,KAAhB,CAAL,EAA6B;MAC3B,MAAM,IAAIwJ,KAAJ,CACJ,6EACcQ,QAAQ,CAACC,SAAT,CAAmBjK,KAAnB,CADd,CADI,CAAN;IAID;IACD,IAAI,CAAC6J,MAAM,CAACC,QAAP,CAAgBhD,MAAhB,CAAL,EAA8B;MAC5B,MAAM,IAAI0C,KAAJ,CACJ,qDACKQ,QAAQ,CAACC,SAAT,CAAmBnD,MAAnB,CADL,CADI,CAAN;IAID;IACDA,MAAM,CAACqN,QAAP,GAAkBnU,KAAlB;IACAC,MAAM,CAACowB,MAAP,CAAcvpB,MAAd,EAAsBmkB,IAAtB;IACA,OAAO;MAAEqF,CAAC,EAAE,CAAL;MAAQxpB;IAAR,CAAP;EACD,CAhB6B,CAA9B;EAkBA,IAAM;IACJkpB,eADI;IAEJ/L,QAAQ,EAAEsM;EAFN,IAGFX,kBAAkB,CAAC9oB,MAAD,CAHtB;EAKA,IAAM0pB,eAAe,GAAGtZ,WAAW,CAAC;IAClC,IAAI+M,QAAJ,EAAc;MACZA,QAAQ,CAACnd,MAAM,CAACqN,QAAR,CAAR;IACD;IAEDgc,UAAU,CAACM,WAAW,KAAK;MACzBH,CAAC,EAAEG,WAAW,CAACH,CAAZ,GAAgB,CADM;MAEzBxpB;IAFyB,CAAL,CAAZ,CAAV;IAIAypB,oBAAoB,CAACzpB,MAAD,CAApB;EACD,CAVkC,EAUhC,CAACmd,QAAD,CAVgC,CAAnC;EAYAzhB,mBAAmB,CAACkH,GAApB,CAAwB5C,MAAxB,EAAgC0pB,eAAhC;EAEA3d,SAAS,CAAC;IACR,OAAO;MACLrQ,mBAAmB,CAACkH,GAApB,CAAwB5C,MAAxB,EAAgC,QAAhC;MACAopB,UAAU,CAAC5e,OAAX,GAAqB,IAArB;IACD,CAHD;EAID,CALQ,EAKN,EALM,CAAT;EAOA,IAAM,CAAC5G,SAAD,EAAYgmB,YAAZ,IAA4B5J,QAAQ,CAAC5f,WAAW,CAACwD,SAAZ,CAAsB5D,MAAtB,CAAD,CAA1C;EAEA+L,SAAS,CAAC;IACR6d,YAAY,CAACxpB,WAAW,CAACwD,SAAZ,CAAsB5D,MAAtB,CAAD,CAAZ;EACD,CAFQ,CAAT;EAIA6L,yBAAyB,CAAC;IACxB,IAAMge,EAAE,GAAG,MAAMD,YAAY,CAACxpB,WAAW,CAACwD,SAAZ,CAAsB5D,MAAtB,CAAD,CAA7B;IACA,IAAIc,4BAAJ,EAAkC;MAChC;MACA;MACA;MACAzC,QAAQ,CAAC4lB,gBAAT,CAA0B,SAA1B,EAAqC4F,EAArC;MACAxrB,QAAQ,CAAC4lB,gBAAT,CAA0B,UAA1B,EAAsC4F,EAAtC;MACA,OAAO;QACLxrB,QAAQ,CAAC6lB,mBAAT,CAA6B,SAA7B,EAAwC2F,EAAxC;QACAxrB,QAAQ,CAAC6lB,mBAAT,CAA6B,UAA7B,EAAyC2F,EAAzC;MACD,CAHD;IAID,CAVD,MAUO;MACLxrB,QAAQ,CAAC4lB,gBAAT,CAA0B,OAA1B,EAAmC4F,EAAnC,EAAuC,IAAvC;MACAxrB,QAAQ,CAAC4lB,gBAAT,CAA0B,MAA1B,EAAkC4F,EAAlC,EAAsC,IAAtC;MACA,OAAO;QACLxrB,QAAQ,CAAC6lB,mBAAT,CAA6B,OAA7B,EAAsC2F,EAAtC,EAA0C,IAA1C;QACAxrB,QAAQ,CAAC6lB,mBAAT,CAA6B,MAA7B,EAAqC2F,EAArC,EAAyC,IAAzC;MACD,CAHD;IAID;EACF,CApBwB,EAoBtB,EApBsB,CAAzB;EAsBA,oBACE7oB,oBAACinB,oBAAoB,CAACvW,QAAtB;IAA+BxY,KAAK,EAAEgwB;GAAtC,eACEloB,oBAAC8Q,YAAY,CAACJ,QAAd;IAAuBxY,KAAK,EAAE8Y;GAA9B,eACEhR,oBAAC8M,aAAa,CAAC4D,QAAf;IAAwBxY,KAAK,EAAE8Y,OAAO,CAAChS;GAAvC,eACEgB,oBAAC6mB,cAAc,CAACnW,QAAhB;IAAyBxY,KAAK,EAAE0K;GAAhC,EACGyJ,QADH,CADF,CADF,CADF,CADF;AAWD;;AC3GD;;;;;IAKayc,SAAS,GAAG;EACvB,IAAM9pB,MAAM,GAAGgO,UAAU,CAACF,aAAD,CAAzB;EAEA,IAAI,CAAC9N,MAAL,EAAa;IACX,MAAM,IAAI0C,KAAJ,6EAAN;EAGD;EAED,OAAO1C,MAAP;AACD;;ACfD;;;;;IAIa+pB,iBAAiB,GAAG;EAC/B,OAAO5B,gBAAgB,CAACnoB,MAAM,IAAIA,MAAM,CAACkE,SAAlB,EAA6B8lB,gBAA7B,CAAvB;AACD;AAED,IAAMA,gBAAgB,GAAG,CAAC3Q,CAAD,EAAmBC,CAAnB;EACvB,IAAI,CAACD,CAAD,IAAM,CAACC,CAAX,EAAc,OAAO,IAAP;EACd,IAAI,CAACD,CAAD,IAAM,CAACC,CAAX,EAAc,OAAO,KAAP;EACd,OAAOzS,KAAK,CAAC8F,MAAN,CAAa0M,CAAb,EAAgBC,CAAhB,CAAP;AACD,CAJD;;ACZA;;;;AAOA,IAAM2Q,gBAAgB,GAAG,CAAC3hB,IAAD,EAAgB4hB,WAAhB;EACvB,IAAMC,MAAM,GAAG,CAACD,WAAW,CAACthB,GAAZ,GAAkBshB,WAAW,CAACE,MAA/B,IAAyC,CAAxD;EAEA,OAAO9hB,IAAI,CAACM,GAAL,IAAYuhB,MAAZ,IAAsB7hB,IAAI,CAAC8hB,MAAL,IAAeD,MAA5C;AACD,CAJD;AAMA,IAAME,iBAAiB,GAAG,CACxBrqB,MADwB,EAExBsqB,MAFwB,EAGxBC,MAHwB;EAKxB,IAAMC,KAAK,GAAGpqB,WAAW,CAACqG,UAAZ,CAAuBzG,MAAvB,EAA+BsqB,MAA/B,EAAuC/hB,qBAAvC,EAAd;EACA,IAAMkiB,KAAK,GAAGrqB,WAAW,CAACqG,UAAZ,CAAuBzG,MAAvB,EAA+BuqB,MAA/B,EAAuChiB,qBAAvC,EAAd;EAEA,OAAO0hB,gBAAgB,CAACO,KAAD,EAAQC,KAAR,CAAhB,IAAkCR,gBAAgB,CAACQ,KAAD,EAAQD,KAAR,CAAzD;AACD,CATD;AAWA;;;;;;;;;AAQO,IAAME,oBAAoB,GAAG,CAClC1qB,MADkC,EAElC2qB,WAFkC;EAIlC,IAAMC,mBAAmB,GAAG7nB,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqB6G,KAAK,CAACZ,GAAN,CAAU0kB,WAAV,CAArB,CAA5B;EACA,IAAME,SAAS,GAAG1rB,KAAK,CAACC,IAAN,CAAW2D,MAAM,CAAC8nB,SAAP,CAAiB7qB,MAAjB,EAAyB;IAAE0F,EAAE,EAAEilB;EAAN,CAAzB,CAAX,CAAlB;EAEA,IAAIjiB,IAAI,GAAG,CAAX;EACA,IAAIoiB,KAAK,GAAGD,SAAS,CAAC9wB,MAAtB;EACA,IAAIowB,MAAM,GAAG7jB,IAAI,CAACykB,KAAL,CAAWD,KAAK,GAAG,CAAnB,CAAb;EAEA,IACET,iBAAiB,CACfrqB,MADe,EAEf+C,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqB6qB,SAAS,CAACniB,IAAD,CAA9B,CAFe,EAGfkiB,mBAHe,CADnB,EAME;IACA,OAAO7nB,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqB6qB,SAAS,CAACniB,IAAD,CAA9B,EAAsCkiB,mBAAtC,CAAP;EACD;EAED,IAAIC,SAAS,CAAC9wB,MAAV,GAAmB,CAAvB,EAA0B;IACxB,OAAOgJ,MAAM,CAAC2D,KAAP,CACL1G,MADK,EAEL6qB,SAAS,CAACA,SAAS,CAAC9wB,MAAV,GAAmB,CAApB,CAFJ,EAGL6wB,mBAHK,CAAP;EAKD;EAED,OAAOT,MAAM,KAAKU,SAAS,CAAC9wB,MAArB,IAA+BowB,MAAM,KAAKzhB,IAAjD,EAAuD;IACrD,IACE2hB,iBAAiB,CACfrqB,MADe,EAEf+C,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqB6qB,SAAS,CAACV,MAAD,CAA9B,CAFe,EAGfS,mBAHe,CADnB,EAME;MACAE,KAAK,GAAGX,MAAR;IACD,CARD,MAQO;MACLzhB,IAAI,GAAGyhB,MAAP;IACD;IAEDA,MAAM,GAAG7jB,IAAI,CAACykB,KAAL,CAAW,CAACriB,IAAI,GAAGoiB,KAAR,IAAiB,CAA5B,CAAT;EACD;EAED,OAAO/nB,MAAM,CAAC2D,KAAP,CAAa1G,MAAb,EAAqB6qB,SAAS,CAACC,KAAD,CAA9B,EAAuCF,mBAAvC,CAAP;AACD,CA9CM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKP;;;;;;;;;IASaI,SAAS,GAA0BhrB,MAAvB;EACvB,IAAMkjB,CAAC,GAAGljB,MAAV;EACA,IAAM;IAAEirB,KAAF;IAAS9N,QAAT;IAAmBzK,cAAnB;IAAmCwY,OAAnC;IAA4CC;EAA5C,IAA2DjI,CAAjE;EAGA;;EACA7nB,wBAAwB,CAACuH,GAAzB,CAA6BsgB,CAA7B,EAAgC,IAAIroB,OAAJ,EAAhC;EAEAqoB,CAAC,CAACgI,OAAF,GAAY,CAACjyB,GAAD,EAAMC,KAAN;;IACV,iDAAwB,CAACuJ,GAAzB,CAA6BygB,CAA7B;IAEA,IACE,CAACtnB,iCAAiC,CAAC6G,GAAlC,CAAsCygB,CAAtC,CAAD,6BACApnB,uBAAuB,CAAC2G,GAAxB,CAA4BygB,CAA5B,CADA,kDACA1G,sBAAgCziB,MAFlC,EAGE;MACA;MACA;MACA6B,iCAAiC,CAACgH,GAAlC,CAAsCsgB,CAAtC,EAAyC,IAAzC;IACD;IAEDrnB,oBAAoB,CAAC6S,MAArB,CAA4BwU,CAA5B;IAEAgI,OAAO,CAACjyB,GAAD,EAAMC,KAAN,CAAP;EACD,CAfD;EAiBAgqB,CAAC,CAACiI,UAAF,GAAelyB,GAAG;;IAChB,IACE,CAAC2C,iCAAiC,CAAC6G,GAAlC,CAAsCygB,CAAtC,CAAD,8BACApnB,uBAAuB,CAAC2G,GAAxB,CAA4BygB,CAA5B,CADA,mDACAzG,uBAAgC1iB,MAFlC,EAGE;MACA;MACA;MACA6B,iCAAiC,CAACgH,GAAlC,CAAsCsgB,CAAtC,EAAyC,IAAzC;IACD;IAEDrnB,oBAAoB,CAAC6S,MAArB,CAA4BwU,CAA5B;IAEAiI,UAAU,CAAClyB,GAAD,CAAV;EACD,CAbD;EAeAiqB,CAAC,CAACxQ,cAAF,GAAmB+L,IAAI;IACrB,IAAIA,IAAI,KAAK,MAAb,EAAqB;MACnB,OAAO/L,cAAc,CAAC+L,IAAD,CAArB;IACD;IAED,IAAIyE,CAAC,CAAChf,SAAF,IAAe2C,KAAK,CAACG,WAAN,CAAkBkc,CAAC,CAAChf,SAApB,CAAnB,EAAmD;MACjD,IAAMknB,gBAAgB,GAAGroB,MAAM,CAAC8W,KAAP,CAAaqJ,CAAb,EAAgB;QACvCpjB,KAAK,EAAEtF,CAAC,IAAIuI,MAAM,CAAC+W,OAAP,CAAeoJ,CAAf,EAAkB1oB,CAAlB,CAD2B;QAEvCkL,EAAE,EAAEwd,CAAC,CAAChf;MAFiC,CAAhB,CAAzB;MAKA,IAAIknB,gBAAJ,EAAsB;QACpB,IAAM,GAAGC,eAAH,IAAsBD,gBAA5B;QACA,IAAME,kBAAkB,GAAGvoB,MAAM,CAAC2D,KAAP,CACzBwc,CADyB,EAEzBmI,eAFyB,EAGzBnI,CAAC,CAAChf,SAAF,CAAYyC,MAHa,CAA3B;QAMA,IAAM4kB,gBAAgB,GAAGb,oBAAoB,CAACxH,CAAD,EAAIoI,kBAAJ,CAA7C;QAEA,IAAI,CAACzkB,KAAK,CAACG,WAAN,CAAkBukB,gBAAlB,CAAL,EAA0C;UACxCjnB,UAAU,CAACoK,MAAX,CAAkBwU,CAAlB,EAAqB;YAAExd,EAAE,EAAE6lB;UAAN,CAArB;QACD;MACF;IACF;EACF,CA1BD;EA6BA;;EACArI,CAAC,CAAC+H,KAAF,GAAW9Q,EAAD;IACR,IAAMha,OAAO,GAAkB,EAA/B;IAEA,IAAMia,YAAY,GAAGte,uBAAuB,CAAC2G,GAAxB,CAA4BygB,CAA5B,CAArB;IACA,IAAI9I,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAErgB,MAAlB,EAA0B;MACxB,IAAMygB,WAAW,GAAGJ,YAAY,CAC7BmK,GADiB,CACbrM,QAAQ,IAAIwC,iBAAiB,CAACxC,QAAD,EAAWiC,EAAX,CADhB,EAEjB9D,MAFiB,CAEVmV,OAFU,CAApB;MAIA1vB,uBAAuB,CAAC8G,GAAxB,CAA4BsgB,CAA5B,EAA+B1I,WAA/B;IACD;IAED,IAAMiB,gBAAgB,GAAGzf,2BAA2B,CAACyG,GAA5B,CAAgCygB,CAAhC,CAAzB;IACA,IAAIzH,gBAAJ,EAAsB;MACpBzf,2BAA2B,CAAC4G,GAA5B,CACEsgB,CADF,EAEEzI,qBAAqB,CAACyI,CAAD,EAAIzH,gBAAJ,EAAsBtB,EAAtB,CAFvB;IAID;IAED,IAAMsR,aAAa,GAAG1vB,wBAAwB,CAAC0G,GAAzB,CAA6BygB,CAA7B,CAAtB;IACA,IAAIuI,aAAJ,aAAIA,aAAJ,eAAIA,aAAa,CAAE/lB,EAAnB,EAAuB;MACrB,IAAMA,EAAE,GAAG2U,KAAK,CAACwB,OAAN,CAAc4P,aAAd,aAAcA,aAAd,uBAAcA,aAAa,CAAE/lB,EAA7B,IACPwU,qBAAqB,CAACgJ,CAAD,EAAIuI,aAAa,CAAC/lB,EAAlB,EAAsByU,EAAtB,CADd,GAEPM,qBAAqB,CAACyI,CAAD,EAAIuI,aAAa,CAAC/lB,EAAlB,EAAsByU,EAAtB,CAFzB;MAIApe,wBAAwB,CAAC6G,GAAzB,CAA6BsgB,CAA7B,EAAgCxd,EAAE,mCAAQ+lB,aAAR;QAAuB/lB;MAAvB,KAA8B,IAAhE;IACD;IAED,QAAQyU,EAAE,CAAC3D,IAAX;MACE,KAAK,aAAL;MACA,KAAK,aAAL;MACA,KAAK,UAAL;MACA,KAAK,YAAL;QAAmB;UACjBrW,OAAO,CAACwP,IAAR,CAAa,GAAG+b,UAAU,CAACxI,CAAD,EAAI/I,EAAE,CAACrX,IAAP,CAA1B;UACA;QACD;MAED,KAAK,eAAL;QAAsB;UAAA;;UACpB;UACA,iDAAwB,CAACL,GAAzB,CAA6BygB,CAA7B,iFAAiCjG,KAAjC;UACAxhB,wBAAwB,CAACiT,MAAzB,CAAgCwU,CAAhC;UACA;QACD;MAED,KAAK,aAAL;MACA,KAAK,aAAL;QAAoB;UAClB/iB,OAAO,CAACwP,IAAR,CAAa,GAAG+b,UAAU,CAACxI,CAAD,EAAIjW,IAAI,CAACzO,MAAL,CAAY2b,EAAE,CAACrX,IAAf,CAAJ,CAA1B;UACA;QACD;MAED,KAAK,YAAL;QAAmB;UACjB,IAAM6oB,QAAQ,GAAG1e,IAAI,CAAC2e,QAAL,CAAczR,EAAE,CAACrX,IAAjB,CAAjB;UACA3C,OAAO,CAACwP,IAAR,CAAa,GAAG+b,UAAU,CAACxI,CAAD,EAAIyI,QAAJ,CAA1B;UACA;QACD;MAED,KAAK,WAAL;QAAkB;UAChB,IAAME,UAAU,GAAG5e,IAAI,CAAC6e,MAAL,CACjB7e,IAAI,CAACzO,MAAL,CAAY2b,EAAE,CAACrX,IAAf,CADiB,EAEjBmK,IAAI,CAACzO,MAAL,CAAY2b,EAAE,CAACQ,OAAf,CAFiB,CAAnB;UAIAxa,OAAO,CAACwP,IAAR,CAAa,GAAG+b,UAAU,CAACxI,CAAD,EAAI2I,UAAJ,CAA1B;UACA;QACD;IAAA;IAGHZ,KAAK,CAAC9Q,EAAD,CAAL;IAEA,KAAK,IAAM,CAACrX,IAAD,EAAO7J,GAAP,CAAX,IAA0BkH,OAA1B,EAAmC;MACjC,IAAM,CAACvC,IAAD,IAASmF,MAAM,CAACnF,IAAP,CAAYslB,CAAZ,EAAepgB,IAAf,CAAf;MACA1H,WAAW,CAACwH,GAAZ,CAAgBhF,IAAhB,EAAsB3E,GAAtB;IACD;EACF,CAzED;EA2EAiqB,CAAC,CAAC9d,eAAF,GAAqBH,IAAD;IAClB,IAAM;MAAEf;IAAF,IAAgBgf,CAAtB;IAEA,IAAI,CAAChf,SAAL,EAAgB;MACd;IACD;IAED,IAAM,CAAC4B,KAAD,EAAQG,GAAR,IAAeY,KAAK,CAACwX,KAAN,CAAYna,SAAZ,CAArB;IACA,IAAMuhB,SAAS,GAAG1iB,MAAM,CAAC0C,IAAP,CAAYyd,CAAZ,EAAe;MAAExd,EAAE,EAAEI,KAAK,CAAChD;IAAZ,CAAf,CAAlB;IACA,IAAM4iB,OAAO,GAAG3iB,MAAM,CAAC0C,IAAP,CAAYyd,CAAZ,EAAe;MAAExd,EAAE,EAAEO,GAAG,CAACnD;IAAV,CAAf,CAAhB;IAEA,IAAI+D,KAAK,CAACG,WAAN,CAAkB9C,SAAlB,KAAgC,CAACuhB,SAArC,EAAgD;MAC9C;IACD;IAGD;;IACA,IAAMxe,QAAQ,GAAG7G,WAAW,CAACqG,UAAZ,CAAuByc,CAAvB,EAA0Bhf,SAA1B,CAAjB;IACA,IAAI8F,QAAQ,GAAG/C,QAAQ,CAACgD,aAAT,EAAf;IACA,IAAI8hB,MAAM,GAAG/hB,QAAQ,CAAClM,UAAT,CAAoB,CAApB,CAAb;;IAGAkM,QAAQ,CAAClM,UAAT,CAAoBsM,OAApB,CAA4BxM,IAAI;MAC9B,IAAIA,IAAI,CAACO,WAAL,IAAoBP,IAAI,CAACO,WAAL,CAAiB6tB,IAAjB,OAA4B,EAApD,EAAwD;QACtDD,MAAM,GAAGnuB,IAAT;MACD;IACF,CAJD;IAOA;IACA;;IACA,IAAI8nB,OAAJ,EAAa;MACX,IAAM,CAAC5b,QAAD,IAAa4b,OAAnB;MACA,IAAMuG,CAAC,GAAGhlB,QAAQ,CAACilB,UAAT,EAAV;MACA,IAAMntB,OAAO,GAAGqB,WAAW,CAACkD,SAAZ,CAAsB4f,CAAtB,EAAyBpZ,QAAzB,CAAhB;MACAmiB,CAAC,CAACE,WAAF,CAAcptB,OAAd;MACAiL,QAAQ,GAAGiiB,CAAC,CAAChiB,aAAF,EAAX;IACD;IAGD;IACA;IACA;;IACA,IAAIwb,SAAJ,EAAe;MACbsG,MAAM,GAAG/hB,QAAQ,CAACa,aAAT,CAAuB,qBAAvB,CAAT;IACD;IAGD;;IACA1L,KAAK,CAACC,IAAN,CAAW4K,QAAQ,CAACnE,gBAAT,CAA0B,yBAA1B,CAAX,EAAiEuE,OAAjE,CACEgiB,EAAE;MACA,IAAMC,SAAS,GAAGD,EAAE,CAACvtB,YAAH,CAAgB,uBAAhB,MAA6C,GAA/D;MACAutB,EAAE,CAACjuB,WAAH,GAAiBkuB,SAAS,GAAG,IAAH,GAAU,EAApC;IACD,CAJH;IAQA;IACA;;IACA,IAAIjvB,SAAS,CAAC2uB,MAAD,CAAb,EAAuB;MACrB,IAAMO,IAAI,GAAGP,MAAM,CAACtvB,aAAP,CAAqB2F,aAArB,CAAmC,MAAnC,CAAb,CADqB;MAGrB;;MACAkqB,IAAI,CAAC/d,KAAL,CAAWqV,UAAX,GAAwB,KAAxB;MACA0I,IAAI,CAACC,WAAL,CAAiBR,MAAjB;MACA/hB,QAAQ,CAACuiB,WAAT,CAAqBD,IAArB;MACAP,MAAM,GAAGO,IAAT;IACD;IAED,IAAMzsB,QAAQ,GAAGqjB,CAAC,CAACsJ,WAAF,EAAjB;IACA,IAAMpf,MAAM,GAAGqf,IAAI,CAACtpB,SAAL,CAAetD,QAAf,CAAf;IACA,IAAM6sB,OAAO,GAAG3vB,MAAM,CAAC4vB,IAAP,CAAYC,kBAAkB,CAACxf,MAAD,CAA9B,CAAhB;IACA2e,MAAM,CAACc,YAAP,CAAoB,qBAApB,EAA2CH,OAA3C;IACAznB,IAAI,CAAC6nB,OAAL,CAAa,8BAAb,EAA6CJ,OAA7C;;IAGA,IAAMK,GAAG,GAAG/iB,QAAQ,CAACvN,aAAT,CAAuB2F,aAAvB,CAAqC,KAArC,CAAZ;IACA2qB,GAAG,CAACR,WAAJ,CAAgBviB,QAAhB;IACA+iB,GAAG,CAACF,YAAJ,CAAiB,QAAjB,EAA2B,MAA3B;IACA7iB,QAAQ,CAACvN,aAAT,CAAuBuwB,IAAvB,CAA4BT,WAA5B,CAAwCQ,GAAxC;IACA9nB,IAAI,CAAC6nB,OAAL,CAAa,WAAb,EAA0BC,GAAG,CAACE,SAA9B;IACAhoB,IAAI,CAAC6nB,OAAL,CAAa,YAAb,EAA2BhuB,YAAY,CAACiuB,GAAD,CAAvC;IACA/iB,QAAQ,CAACvN,aAAT,CAAuBuwB,IAAvB,CAA4B1iB,WAA5B,CAAwCyiB,GAAxC;IACA,OAAO9nB,IAAP;EACD,CApFD;EAsFAie,CAAC,CAACle,UAAF,GAAgBC,IAAD;IACb,IAAI,CAACie,CAAC,CAAChe,kBAAF,CAAqBD,IAArB,CAAL,EAAiC;MAC/Bie,CAAC,CAAC/d,cAAF,CAAiBF,IAAjB;IACD;EACF,CAJD;EAMAie,CAAC,CAAChe,kBAAF,GAAwBD,IAAD;IACrB;;;IAGA,IAAMpF,QAAQ,GACZoF,IAAI,CAACzH,OAAL,CAAa,8BAAb,KACAkC,yBAAyB,CAACuF,IAAD,CAF3B;IAIA,IAAIpF,QAAJ,EAAc;MACZ,IAAMqtB,OAAO,GAAGC,kBAAkB,CAACpwB,MAAM,CAACqwB,IAAP,CAAYvtB,QAAZ,CAAD,CAAlC;MACA,IAAMwtB,MAAM,GAAGZ,IAAI,CAACa,KAAL,CAAWJ,OAAX,CAAf;MACAhK,CAAC,CAACqK,cAAF,CAAiBF,MAAjB;MACA,OAAO,IAAP;IACD;IACD,OAAO,KAAP;EACD,CAfD;EAiBAnK,CAAC,CAAC/d,cAAF,GAAoBF,IAAD;IACjB,IAAMjG,IAAI,GAAGiG,IAAI,CAACzH,OAAL,CAAa,YAAb,CAAb;IAEA,IAAIwB,IAAJ,EAAU;MACR,IAAMwuB,KAAK,GAAGxuB,IAAI,CAACkC,KAAL,CAAW,YAAX,CAAd;MACA,IAAIA,KAAK,GAAG,KAAZ;MAEA,KAAK,IAAMusB,IAAX,IAAmBD,KAAnB,EAA0B;QACxB,IAAItsB,KAAJ,EAAW;UACToD,UAAU,CAACopB,UAAX,CAAsBxK,CAAtB,EAAyB;YAAEyK,MAAM,EAAE;UAAV,CAAzB;QACD;QAEDzK,CAAC,CAACtG,UAAF,CAAa6Q,IAAb;QACAvsB,KAAK,GAAG,IAAR;MACD;MACD,OAAO,IAAP;IACD;IACD,OAAO,KAAP;EACD,CAlBD;EAoBAgiB,CAAC,CAAC/F,QAAF,GAAa;IACX;IACA;IACA;IACA;IACAyQ,QAAQ,CAACC,uBAAT,CAAiC;MAC/B,IAAMnE,eAAe,GAAGhuB,mBAAmB,CAAC+G,GAApB,CAAwBygB,CAAxB,CAAxB;MAEA,IAAIwG,eAAJ,EAAqB;QACnBA,eAAe;MAChB;MAEDvM,QAAQ;IACT,CARD;EASD,CAdD;EAgBA,OAAO+F,CAAP;AACD;AAED,IAAMwI,UAAU,GAAG,CAACxI,CAAD,EAAYpgB,IAAZ;EACjB,IAAM3C,OAAO,GAAkB,EAA/B;EACA,KAAK,IAAM,CAAC3F,CAAD,EAAIwV,CAAJ,CAAX,IAAqBjN,MAAM,CAAC+qB,MAAP,CAAc5K,CAAd,EAAiB;IAAExd,EAAE,EAAE5C;EAAN,CAAjB,CAArB,EAAqD;IACnD,IAAM7J,GAAG,GAAGmH,WAAW,CAACuC,OAAZ,CAAoBugB,CAApB,EAAuB1oB,CAAvB,CAAZ;IACA2F,OAAO,CAACwP,IAAR,CAAa,CAACK,CAAD,EAAI/W,GAAJ,CAAb;EACD;EACD,OAAOkH,OAAP;AACD,CAPD","names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","i","length","indexOf","_objectWithoutProperties","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","n","Key","constructor","id","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","EDITOR_TO_PLACEHOLDER_ELEMENT","ELEMENT_TO_NODE","NODE_TO_ELEMENT","NODE_TO_KEY","EDITOR_TO_KEY_TO_ELEMENT","IS_READ_ONLY","IS_FOCUSED","IS_COMPOSING","EDITOR_TO_USER_SELECTION","EDITOR_TO_ON_CHANGE","EDITOR_TO_SCHEDULE_FLUSH","EDITOR_TO_PENDING_INSERTION_MARKS","EDITOR_TO_USER_MARKS","EDITOR_TO_PENDING_DIFFS","EDITOR_TO_PENDING_ACTION","EDITOR_TO_PENDING_SELECTION","EDITOR_TO_FORCE_RENDER","PLACEHOLDER_SYMBOL","Symbol","MARK_PLACEHOLDER_SYMBOL","DOMText","globalThis","Text","getDefaultView","ownerDocument","defaultView","isDOMComment","isDOMNode","nodeType","isDOMElement","window","Node","isDOMSelection","anchorNode","Selection","isDOMText","isPlainTextOnlyPaste","event","clipboardData","getData","types","normalizeDOMPoint","domPoint","node","offset","childNodes","isLast","index","getEditableChildAndIndex","getEditableChild","textContent","hasShadowRoot","document","activeElement","shadowRoot","parent","direction","child","triedForward","triedBackward","getAttribute","getPlainText","domNode","text","nodeValue","childNode","Array","from","display","getComputedStyle","getPropertyValue","tagName","catchSlateFragment","getSlateFragmentAttribute","dataTransfer","htmlData","fragment","match","isTrackedMutation","editor","mutation","batch","matches","ReactEditor","getWindow","contains","hasDOMNode","editable","parentMutation","find","_ref","addedNodes","removedNodes","IS_REACT_VERSION_17_OR_ABOVE","parseInt","React","version","split","IS_IOS","navigator","test","userAgent","MSStream","IS_APPLE","IS_ANDROID","IS_FIREFOX","IS_SAFARI","IS_EDGE_LEGACY","IS_CHROME","IS_CHROME_LEGACY","IS_FIREFOX_LEGACY","IS_QQBROWSER","IS_UC_MOBILE","IS_WECHATBROWSER","CAN_USE_DOM","createElement","HAS_BEFORE_INPUT_SUPPORT","InputEvent","getTargetRanges","isComposing","get","Error","findKey","set","findPath","path","Editor","isEditor","unshift","Scrubber","stringify","findDocumentOrShadowRoot","el","toDOMNode","root","getRootNode","Document","ShadowRoot","getSelection","isFocused","isReadOnly","blur","focus","preventScroll","deselect","selection","domSelection","rangeCount","removeAllRanges","Transforms","options","editorEl","targetEl","parentElement","err","message","includes","closest","isContentEditable","insertData","data","insertFragmentData","insertTextData","setFragmentData","originEvent","KEY_TO_ELEMENT","toDOMPoint","point","void","at","selector","texts","querySelectorAll","start","attr","trueLength","end","nextText","hasAttribute","domText","startsWith","Math","min","max","toDOMRange","range","anchor","isBackward","Range","domAnchor","domFocus","isCollapsed","domRange","createRange","startNode","startOffset","endNode","endOffset","startEl","isStartAtZeroWidth","endEl","isEndAtZeroWidth","setStart","setEnd","toSlateNode","domEl","findEventRange","nativeEvent","clientX","x","clientY","y","isVoid","rect","getBoundingClientRect","isPrev","isInline","left","width","top","height","edge","before","after","caretRangeFromPoint","position","caretPositionFromPoint","offsetNode","toSlateRange","exactMatch","suppressThrow","toSlatePoint","nearestNode","nearestOffset","parentNode","textNode","potentialVoidNode","voidNode","leafNode","contents","cloneContents","removals","slice","forEach","textContext","removeChild","leafNodes","current","_domNode$textContent","_domNode$textContent2","endsWith","slateNode","querySelector","startContainer","anchorOffset","focusNode","focusOffset","endContainer","collapsed","isExpanded","isForward","mode","unhangRange","voids","hasRange","hasPath","androidScheduleFlush","androidPendingDiffs","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","shallowCompare","obj1","obj2","every","hasOwnProperty","isDecoratorRangeListEqual","list","another","other","rangeOwnProps","otherOwnProps","equals","String","props","leaf","useSlateStatic","parentPath","Path","isMarkPlaceholder","ZeroWidthString","string","children","isLineBreak","TextString","isTrailing","ref","useRef","getTextContent","textWithTrailing","attributes","EditorContext","createContext","useContext","Leaf","renderPlaceholder","renderLeaf","DefaultLeaf","placeholderRef","placeholderEl","style","minHeight","clientHeight","delete","placeholderProps","placeholder","pointerEvents","maxWidth","opacity","userSelect","textDecoration","contentEditable","Fragment","MemoizedLeaf","memo","prev","next","decorations","leaves","SlateText","push","MemoizedText","Element","element","renderElement","p","DefaultElement","readOnly","useReadOnly","useCallback","useChildren","hasInlines","dir","getDirection","Tag","color","outline","MemoizedElement","DecorateContext","useDecorate","SelectedContext","useSelected","decorate","isLeafBlock","isElement","concat","sel","intersection","ds","dec","d","Provider","ElementComponent","TextComponent","ReadOnlyContext","SlateContext","useSlate","context","useSlateWithV","TRIPLE_CLICK","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","insertSoftBreak","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSoftBreak","isSplitBlock","isTransposeCharacter","isUndo","createRestoreDomManager","receivedUserInput","bufferedMutations","clear","registerMutations","mutations","trackedMutations","filter","restoreDOM","reverse","type","oldValue","insertBefore","nextSibling","MUTATION_OBSERVER_CONFIG","subtree","childList","characterData","characterDataOldValue","RestoreDOMComponent","Component","observe","mutationObserver","componentDidMount","manager","MutationObserver","getSnapshotBeforeUpdate","pendingMutations","_this$mutationObserve2","takeRecords","disconnect","componentDidUpdate","componentWillUnmount","render","RestoreDOM","verifyDiffState","textDiff","diff","isText","nextPath","nextNode","applyStringDiff","diffs","reduce","longestCommonPrefixLength","str","charAt","longestCommonSuffixLength","normalizeStringDiff","targetText","removedText","prefixLength","suffixLength","normalized","mergeStringDiffs","a","b","overlap","applied","sliceEnd","targetRange","normalizePoint","parentBlock","above","isBlock","entry","isDescendant","normalizeRange","transformPendingPoint","op","pendingDiffs","Point","transform","affinity","transformed","transformPendingRange","transformTextDiff","newPath","RESOLVE_DELAY","FLUSH_DELAY","debug","createAndroidInputManager","scheduleOnDOMSelectionChange","onDOMSelectionChange","flushing","compositionEndTimeoutId","flushTimeoutId","actionTimeoutId","idCounter","insertPositionHint","applyPendingSelection","pendingSelection","select","performAction","action","isPoint","run","flush","clearTimeout","hasPendingDiffs","hasPendingAction","setTimeout","selectionRef","rangeRef","marks","scheduleSelectionChange","_EDITOR_TO_PENDING_DI","_EDITOR_TO_PENDING_DI2","pendingMarks","undefined","insertText","deleteFragment","_EDITOR_TO_PENDING_DI3","_ref2","cancel","unref","userMarks","onChange","handleCompositionEnd","_event","handleCompositionStart","updatePlaceholderVisibility","forceHide","placeholderElement","removeProperty","storeDiff","idx","findIndex","change","merged","splice","scheduleAction","handleDOMBeforeInput","inputType","nativeTargetRange","edges","targetNode","nativeCollapsed","_nativeTargetRange","unit","insertBreak","name","replace","hintPosition","search","diffPosition","scheduleFlush","_EDITOR_TO_PENDING_DI5","hasPendingChanges","isFlushing","handleUserSelect","pathChanged","parentPathChanged","handleInput","handleKeyDown","_","handleDomMutations","some","useIsMounted","isMountedRef","useMutationObserver","callback","useState","useAndroidInputManager","isMounted","inputManager","useTrackUserInput","animationFrameIdRef","onUserInput","cancelAnimationFrame","requestAnimationFrame","Children","Editable","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","DefaultPlaceholder","scrollSelectionIntoView","defaultScrollSelectionIntoView","as","setIsComposing","deferredOperations","forceRender","useReducer","s","state","useMemo","isDraggingInternally","isUpdatingSelection","latestElement","hasMarkPlaceholder","throttle","androidInputManager","anchorNodeSelectable","hasEditableTarget","isTargetInsideNonReadonlyVoid","focusNodeSelectable","debounce","setDomSelection","forceChange","hasDomSelection","editorElement","hasDomSelectionInEditor","slateRange","_anchorNode$parentEle","newDomRange","setBaseAndExtent","ensureSelection","timeoutId","animationFrameId","ensureDomSelection","e","isDOMEventHandled","isCompositionChange","native","_node$parentElement","lastText","createTreeWalker","NodeFilter","SHOW_TEXT","lastChild","whiteSpace","block","preventDefault","toRestore","_EDITOR_TO_USER_SELEC","addEventListener","removeEventListener","rest","loose","unset","fromEntries","map","mark","role","spellCheck","autoCorrect","autoCapitalize","zindex","suppressContentEditableWarning","wordWrap","onBeforeInput","isEventHandled","onInput","onBlur","relatedTarget","onClick","hasTarget","detail","blockPath","startVoid","endVoid","onCompositionEnd","placeholderMarks","onCompositionUpdate","onCompositionStart","inline","inlinePath","isEnd","setSelection","onCopy","onCut","onDragOver","onDragStart","voidMatch","onDrop","draggedRange","onDragEnd","onFocus","onKeyDown","isRTL","Hotkeys","maybeHistoryEditor","move","collapse","currentNode","onPaste","leafEl","bind","scrollIntoView","scrollMode","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","defaultPrevented","FocusedContext","useFocused","isError","error","SlateSelectorContext","refEquality","useSlateSelector","equalityFn","getSlate","latestSubscriptionCallbackError","latestSelector","latestSelectedState","selectedState","stack","checkForUpdates","newSelectedState","unsubscribe","getSelectorContext","eventListeners","slateRef","listener","selectorContext","Slate","unmountRef","setContext","isNodeList","assign","v","handleSelectorChange","onContextChange","prevContext","setIsFocused","fn","useEditor","useSlateSelection","isSelectionEqual","doRectsIntersect","compareRect","middle","bottom","areRangesSameLine","range1","range2","rect1","rect2","findCurrentLineRange","parentRange","parentRangeBoundary","positions","right","floor","withReact","apply","addMark","removeMark","parentBlockEntry","parentBlockPath","parentElementRange","currentLineRange","Boolean","pendingAction","getMatches","prevPath","previous","commonPath","common","attach","trim","r","cloneRange","setEndAfter","zw","isNewline","span","appendChild","getFragment","JSON","encoded","btoa","encodeURIComponent","setAttribute","setData","div","body","innerHTML","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","line","splitNodes","always","ReactDOM","unstable_batchedUpdates","levels"],"sources":["/Users/anurodhyadav/resumebuilder/.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js","/Users/anurodhyadav/resumebuilder/.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","/Users/anurodhyadav/resumebuilder/.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/key.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/weak-maps.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/dom.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/environment.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/plugin/react-editor.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-isomorphic-layout-effect.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/range-list.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/components/string.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-slate-static.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/components/leaf.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/components/text.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/components/element.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-decorate.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-selected.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-children.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-read-only.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-slate.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/constants.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/hotkeys.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/components/restore-dom/restore-dom-manager.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/components/restore-dom/restore-dom.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/diff-text.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/android-input-manager/android-input-manager.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-is-mounted.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-mutation-observer.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/android-input-manager/use-android-input-manager.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-track-user-input.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/components/editable.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-focused.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-slate-selector.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/components/slate.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-editor.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/hooks/use-slate-selection.tsx","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/utils/lines.ts","/Users/anurodhyadav/resumebuilder/node_modules/slate-react/src/plugin/with-react.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import { Ancestor, Editor, Node, Range, RangeRef, Text } from 'slate'\nimport { Action } from '../hooks/android-input-manager/android-input-manager'\nimport { TextDiff } from './diff-text'\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER_ELEMENT: WeakMap<\n  Editor,\n  HTMLElement\n> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<\n  Editor,\n  RangeRef | null\n> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\n/**\n * Weak maps for saving pending state on composition stage.\n */\n\nexport const EDITOR_TO_SCHEDULE_FLUSH: WeakMap<\n  Editor,\n  () => void\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_INSERTION_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\nexport const EDITOR_TO_USER_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\n/**\n * Android input handling specific weak-maps\n */\n\nexport const EDITOR_TO_PENDING_DIFFS: WeakMap<\n  Editor,\n  TextDiff[]\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_ACTION: WeakMap<\n  Editor,\n  Action | null\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_SELECTION: WeakMap<\n  Editor,\n  Range | null\n> = new WeakMap()\n\nexport const EDITOR_TO_FORCE_RENDER: WeakMap<Editor, () => void> = new WeakMap()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\nexport const MARK_PLACEHOLDER_SYMBOL = (Symbol(\n  'mark-placeholder'\n) as unknown) as string\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: typeof Selection['constructor']\n    DataTransfer: typeof DataTransfer['constructor']\n    Node: typeof Node['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines wether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = () => {\n  return !!(\n    window.document.activeElement && window.document.activeElement.shadowRoot\n  )\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (dataTransfer: DataTransfer): DataTransfer => {\n  if (!dataTransfer.getData('application/x-slate-fragment')) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData('application/x-slate-fragment', fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n\n/**\n * Check whether a mutation originates from a editable element inside the editor.\n */\n\nexport const isTrackedMutation = (\n  editor: ReactEditor,\n  mutation: MutationRecord,\n  batch: MutationRecord[]\n): boolean => {\n  const { target } = mutation\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false\n  }\n\n  const { document } = ReactEditor.getWindow(editor)\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, { editable: true })\n  }\n\n  const parentMutation = batch.find(({ addedNodes, removedNodes }) => {\n    for (const node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n\n    for (const node of removedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n  })\n\n  if (!parentMutation || parentMutation === mutation) {\n    return false\n  }\n\n  // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n  return isTrackedMutation(editor, parentMutation, batch)\n}\n","import React from 'react'\n\nexport const IS_REACT_VERSION_17_OR_ABOVE =\n  parseInt(React.version.split('.')[0], 10) >= 17\n\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// qq browser\nexport const IS_QQBROWSER =\n  typeof navigator !== 'undefined' && /.*QQBrowser/.test(navigator.userAgent)\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  !IS_CHROME_LEGACY &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n","import {\n  BaseEditor,\n  Editor,\n  Node,\n  Path,\n  Point,\n  Range,\n  Scrubber,\n  Transforms,\n} from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n  EDITOR_TO_WINDOW,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  IS_COMPOSING,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_PENDING_DIFFS,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  isDOMSelection,\n  normalizeDOMPoint,\n  hasShadowRoot,\n  DOMText,\n} from '../utils/dom'\nimport { IS_CHROME, IS_FIREFOX, IS_ANDROID } from '../utils/environment'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor = {\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n\n  isComposing(editor: ReactEditor): boolean {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  /**\n   * Return the host window of the current editor.\n   */\n\n  getWindow(editor: ReactEditor): Window {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${Scrubber.stringify(node)}`\n    )\n  },\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n\n  findDocumentOrShadowRoot(editor: ReactEditor): Document | ShadowRoot {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (root.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n\n  insertFragmentData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertFragmentData(data)\n  },\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n\n  insertTextData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertTextData(data)\n  },\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n\n  setFragmentData(\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ): void {\n    editor.setFragmentData(data, originEvent)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${Scrubber.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (let i = 0; i < texts.length; i++) {\n      const text = texts[i]\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n      const nextText = texts[i + 1]\n      if (\n        point.offset === end &&\n        nextText?.hasAttribute('data-slate-mark-placeholder')\n      ) {\n        const domText = nextText.childNodes[0]\n\n        domPoint = [\n          // COMPAT: If we don't explicity set the dom point to be on the actual\n          // dom text element, chrome will put the selection behind the actual dom\n          // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n          // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n          // which will cause issues when scrolling to it.\n          domText instanceof DOMText ? domText : nextText,\n          nextText.textContent?.startsWith('\\uFEFF') ? 1 : 0,\n        ]\n        break\n      }\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${Scrubber.stringify(\n          point\n        )}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint<T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = ReactEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = ReactEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (\n              IS_ANDROID &&\n              !exactMatch &&\n              el.hasAttribute('data-slate-zero-width') &&\n              el.textContent.length > 0 &&\n              el.textContext !== '\\uFEFF'\n            ) {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1)\n              }\n\n              return\n            }\n\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        const leafNodes = voidNode.querySelectorAll('[data-slate-leaf]')\n        for (let index = 0; index < leafNodes.length; index++) {\n          const current = leafNodes[index]\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current\n            break\n          }\n        }\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: Android IMEs might remove the zero width space while composing,\n        // and we don't add it for line-breaks.\n        IS_ANDROID &&\n        domNode.getAttribute('data-slate-zero-width') === 'z' &&\n        domNode.textContent?.startsWith('\\uFEFF') &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      const node = parentNode.hasAttribute('data-slate-node')\n        ? parentNode\n        : parentNode.closest('[data-slate-node]')\n\n      if (node && ReactEditor.hasDOMNode(editor, node, { editable: true })) {\n        const slateNode = ReactEditor.toSlateNode(editor, node)\n        let { path, offset } = Editor.start(\n          editor,\n          ReactEditor.findPath(editor, slateNode)\n        )\n\n        if (!node.querySelector('[data-slate-leaf]')) {\n          offset = nearestOffset\n        }\n\n        return { path, offset } as T extends true ? Point | null : Point\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange<T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: T\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        if (IS_CHROME && hasShadowRoot()) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    const anchor = ReactEditor.toSlatePoint(\n      editor,\n      [anchorNode, anchorOffset],\n      { exactMatch, suppressThrow }\n    )\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return (range as unknown) as T extends true ? Range | null : Range\n  },\n\n  hasRange(editor: ReactEditor, range: Range): boolean {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n\n  /**\n   * Experimental and android specific: Flush all pending diffs and cancel composition at the next possible time.\n   */\n  androidScheduleFlush(editor: Editor) {\n    EDITOR_TO_SCHEDULE_FLUSH.get(editor)?.()\n  },\n\n  /**\n   * Experimental and android specific: Get pending diffs\n   */\n  androidPendingDiffs(editor: Editor) {\n    return EDITOR_TO_PENDING_DIFFS.get(editor)\n  },\n}\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (obj1: {}, obj2: {}) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isDecoratorRangeListEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n    const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n    if (\n      !Range.equals(range, other) ||\n      range[PLACEHOLDER_SYMBOL] !== other[PLACEHOLDER_SYMBOL] ||\n      !shallowCompare(rangeOwnProps, otherOwnProps)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import React, { useRef } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID } from '../utils/environment'\nimport { MARK_PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = leaf[MARK_PLACEHOLDER_SYMBOL] === true\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n\n  const ref = useRef<HTMLSpanElement>(null)\n\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // Render text content immediately if it's the first-time render\n  // Ensure that text content is rendered on server-side rendering\n  if (!ref.current) {\n    return (\n      <span data-slate-string ref={ref}>\n        {getTextContent()}\n      </span>\n    )\n  }\n\n  // the span is intentionally same on every render in virtual DOM, actual rendering happens in the layout effect above\n  return <span data-slate-string ref={ref} />\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  return (\n    <span {...attributes}>\n      {!IS_ANDROID || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import { createContext, useContext } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { Editor } from 'slate'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import React, { useRef, useEffect } from 'react'\nimport { Element, Text } from 'slate'\nimport String from './string'\nimport {\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\nimport { ReactEditor } from '..'\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\n\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const placeholderRef = useRef<HTMLSpanElement | null>(null)\n  const editor = useSlateStatic()\n\n  useEffect(() => {\n    const placeholderEl = placeholderRef?.current\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n\n    if (!placeholderEl || !editorEl) {\n      return\n    }\n\n    editorEl.style.minHeight = `${placeholderEl.clientHeight}px`\n    EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n\n    return () => {\n      editorEl.style.minHeight = 'auto'\n      EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n    }\n  }, [placeholderRef, leaf])\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n        },\n        contentEditable: false,\n        ref: placeholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import React, { useRef } from 'react'\nimport { Element, Range, Text as SlateText } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport Leaf from './leaf'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text,\n  } = props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (ref.current) {\n      KEY_TO_ELEMENT?.set(key, ref.current)\n      NODE_TO_ELEMENT.set(text, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, text)\n    } else {\n      KEY_TO_ELEMENT?.delete(key)\n      NODE_TO_ELEMENT.delete(text)\n    }\n  })\n\n  return (\n    <span data-slate-node=\"text\" ref={ref}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text &&\n    isDecoratorRangeListEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n","import React, { useCallback } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport useChildren from '../hooks/use-children'\nimport { ReactEditor, useSlateStatic, useReadOnly } from '..'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isDecoratorRangeListEqual } from '../utils/range-list'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    isDecoratorRangeListEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React from 'react'\nimport { Editor, Range, Element, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\nimport { useDecorate } from './use-decorate'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\nimport { SelectedContext } from './use-selected'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport interface SlateContextValue {\n  v: number\n  editor: ReactEditor\n}\n\nexport const SlateContext = createContext<{\n  v: number\n  editor: ReactEditor\n} | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const { editor } = context\n  return editor\n}\n\nexport const useSlateWithV = () => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return context\n}\n","export const TRIPLE_CLICK = 3\n","import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from '../../utils/dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    bufferedMutations.reverse().forEach(mutation => {\n      if (mutation.type === 'characterData') {\n        mutation.target.textContent = mutation.oldValue\n        return\n      }\n\n      mutation.removedNodes.forEach(node => {\n        mutation.target.insertBefore(node, mutation.nextSibling)\n      })\n\n      mutation.addedNodes.forEach(node => {\n        mutation.target.removeChild(node)\n      })\n    })\n\n    // Clear buffered mutations to ensure we don't undo them twice\n    clear()\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n","import React, { Component, ComponentType, ContextType, RefObject } from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n","import { Editor, Node, Operation, Path, Point, Range, Text } from 'slate'\nimport { EDITOR_TO_PENDING_DIFFS } from './weak-maps'\n\nexport type StringDiff = {\n  start: number\n  end: number\n  text: string\n}\n\nexport type TextDiff = {\n  id: number\n  path: Path\n  diff: StringDiff\n}\n\n/**\n * Check whether a text diff was applied in a way we can perform the pending action on /\n * recover the pending selection.\n */\nexport function verifyDiffState(editor: Editor, textDiff: TextDiff): boolean {\n  const { path, diff } = textDiff\n  if (!Editor.hasPath(editor, path)) {\n    return false\n  }\n\n  const node = Node.get(editor, path)\n  if (!Text.isText(node)) {\n    return false\n  }\n\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return (\n      node.text.slice(diff.start, diff.start + diff.text.length) === diff.text\n    )\n  }\n\n  const nextPath = Path.next(path)\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false\n  }\n\n  const nextNode = Node.get(editor, nextPath)\n  return Text.isText(nextNode) && nextNode.text.startsWith(diff.text)\n}\n\nfunction applyStringDiff(text: string, ...diffs: StringDiff[]) {\n  return diffs.reduce(\n    (text, diff) =>\n      text.slice(0, diff.start) + diff.text + text.slice(diff.end),\n    text\n  )\n}\n\nfunction longestCommonPrefixLength(str: string, another: string) {\n  const length = Math.min(str.length, another.length)\n\n  for (let i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i\n    }\n  }\n\n  return length\n}\n\nfunction longestCommonSuffixLength(\n  str: string,\n  another: string,\n  max: number\n): number {\n  const length = Math.min(str.length, another.length, max)\n\n  for (let i = 0; i < length; i++) {\n    if (\n      str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)\n    ) {\n      return i\n    }\n  }\n\n  return length\n}\n\n/**\n * Remove redundant changes from the diff so that it spans the minimal possible range\n */\nexport function normalizeStringDiff(targetText: string, diff: StringDiff) {\n  const { start, end, text } = diff\n  const removedText = targetText.slice(start, end)\n\n  const prefixLength = longestCommonPrefixLength(removedText, text)\n  const max = Math.min(\n    removedText.length - prefixLength,\n    text.length - prefixLength\n  )\n  const suffixLength = longestCommonSuffixLength(removedText, text, max)\n\n  const normalized: StringDiff = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength),\n  }\n\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null\n  }\n\n  return normalized\n}\n\n/**\n * Return a string diff that is equivalent to applying b after a spanning the range of\n * both changes\n */\nexport function mergeStringDiffs(\n  targetText: string,\n  a: StringDiff,\n  b: StringDiff\n): StringDiff | null {\n  const start = Math.min(a.start, b.start)\n  const overlap = Math.max(\n    0,\n    Math.min(a.start + a.text.length, b.end) - b.start\n  )\n\n  const applied = applyStringDiff(targetText, a, b)\n  const sliceEnd = Math.max(\n    b.start + b.text.length,\n    a.start +\n      a.text.length +\n      (a.start + a.text.length > b.start ? b.text.length : 0) -\n      overlap\n  )\n\n  const text = applied.slice(start, sliceEnd)\n  const end = Math.max(a.end, b.end - a.text.length + (a.end - a.start))\n  return normalizeStringDiff(targetText, { start, end, text })\n}\n\n/**\n * Get the slate range the text diff spans.\n */\nexport function targetRange(textDiff: TextDiff): Range {\n  const { path, diff } = textDiff\n  return {\n    anchor: { path, offset: diff.start },\n    focus: { path, offset: diff.end },\n  }\n}\n\n/**\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\n * the pending diffs. Since the pending diffs might have been inserted with different\n * marks we have to 'walk' the offset from the starting position to ensure we still\n * have a valid point inside the document\n */\nexport function normalizePoint(editor: Editor, point: Point): Point | null {\n  let { path, offset } = point\n  if (!Editor.hasPath(editor, path)) {\n    return null\n  }\n\n  let leaf = Node.get(editor, path)\n  if (!Text.isText(leaf)) {\n    return null\n  }\n\n  const parentBlock = Editor.above(editor, {\n    match: n => Editor.isBlock(editor, n),\n    at: path,\n  })\n\n  if (!parentBlock) {\n    return null\n  }\n\n  while (offset > leaf.text.length) {\n    const entry = Editor.next(editor, { at: path, match: Text.isText })\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null\n    }\n\n    offset -= leaf.text.length\n    leaf = entry[0]\n    path = entry[1]\n  }\n\n  return { path, offset }\n}\n\n/**\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\n */\nexport function normalizeRange(editor: Editor, range: Range): Range | null {\n  const anchor = normalizePoint(editor, range.anchor)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = normalizePoint(editor, range.focus)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformPendingPoint(\n  editor: Editor,\n  point: Point,\n  op: Operation\n): Point | null {\n  const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n  const textDiff = pendingDiffs?.find(({ path }) =>\n    Path.equals(path, point.path)\n  )\n\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, { affinity: 'backward' })\n  }\n\n  const { diff } = textDiff\n  // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n  if (point.offset <= diff.start + diff.text.length) {\n    const anchor = { path: point.path, offset: diff.start }\n    const transformed = Point.transform(anchor, op, {\n      affinity: 'backward',\n    })\n\n    if (!transformed) {\n      return null\n    }\n\n    return {\n      path: transformed.path,\n      offset: transformed.offset + point.offset - diff.start,\n    }\n  }\n\n  // Point references location after the diff\n  const anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start,\n  }\n  const transformed = Point.transform(anchor, op, {\n    affinity: 'backward',\n  })\n  if (!transformed) {\n    return null\n  }\n\n  if (\n    op.type === 'split_node' &&\n    Path.equals(op.path, point.path) &&\n    anchor.offset < op.position &&\n    diff.start < op.position\n  ) {\n    return transformed\n  }\n\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start,\n  }\n}\n\nexport function transformPendingRange(\n  editor: Editor,\n  range: Range,\n  op: Operation\n): Range | null {\n  const anchor = transformPendingPoint(editor, range.anchor, op)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = transformPendingPoint(editor, range.focus, op)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformTextDiff(\n  textDiff: TextDiff,\n  op: Operation\n): TextDiff | null {\n  const { path, diff, id } = textDiff\n\n  switch (op.type) {\n    case 'insert_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset <= diff.start) {\n        return {\n          diff: {\n            start: op.text.length + diff.start,\n            end: op.text.length + diff.end,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end + op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'remove_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset + op.text.length <= diff.start) {\n        return {\n          diff: {\n            start: diff.start - op.text.length,\n            end: diff.end - op.text.length,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end - op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'split_node': {\n      if (!Path.equals(op.path, path) || op.position >= diff.end) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op, { affinity: 'backward' })!,\n        }\n      }\n\n      if (op.position > diff.start) {\n        return {\n          diff: {\n            start: diff.start,\n            end: Math.min(op.position, diff.end),\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start - op.position,\n          end: diff.end - op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op, { affinity: 'forward' })!,\n      }\n    }\n    case 'merge_node': {\n      if (!Path.equals(op.path, path)) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op)!,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start + op.position,\n          end: diff.end + op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op)!,\n      }\n    }\n  }\n\n  const newPath = Path.transform(path, op)\n  if (!newPath) {\n    return null\n  }\n\n  return {\n    diff,\n    path: newPath,\n    id,\n  }\n}\n","import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from '../../utils/diff-text'\nimport { isDOMSelection, isTrackedMutation } from '../../utils/dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n} from '../../utils/weak-maps'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data = (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    if (Range.isExpanded(targetRange) && type.startsWith('delete')) {\n      const [start, end] = Range.edges(targetRange)\n      const leaf = Node.leaf(editor, start.path)\n\n      if (leaf.text.length === start.offset && end.offset === 0) {\n        const next = Editor.next(editor, { at: start.path, match: Text.isText })\n        if (next && Path.equals(next[1], end.path)) {\n          targetRange = { anchor: end, focus: end }\n        }\n      }\n    }\n\n    if (Range.isExpanded(targetRange) && type.startsWith('delete')) {\n      if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n        const [start, end] = Range.edges(targetRange)\n        return storeDiff(targetRange.anchor.path, {\n          text: '',\n          end: end.offset,\n          start: start.offset,\n        })\n      }\n\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      return scheduleAction(\n        () => Editor.deleteFragment(editor, { direction }),\n        { at: targetRange }\n      )\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (data?.constructor.name === 'DataTransfer') {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        if (typeof data === 'string' && data.includes('\\n')) {\n          return scheduleAction(() => Editor.insertSoftBreak(editor), {\n            at: Range.end(targetRange),\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          storeDiff(start.path, diff)\n          return\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || !hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\nimport { isDOMElement } from '../utils/dom'\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [])\n}\n","import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from '../../utils/weak-maps'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport function useAndroidInputManager({\n  node,\n  ...options\n}: UseAndroidInputManagerOptions) {\n  if (!IS_ANDROID) {\n    return null\n  }\n\n  const editor = useSlateStatic()\n  const isMounted = useIsMounted()\n\n  const [inputManager] = useState(() =>\n    createAndroidInputManager({\n      editor,\n      ...options,\n    })\n  )\n\n  useMutationObserver(\n    node,\n    inputManager.handleDomMutations,\n    MUTATION_OBSERVER_CONFIG\n  )\n\n  EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n  if (isMounted) {\n    inputManager.flush()\n  }\n\n  return inputManager\n}\n","import { useCallback, useRef, useEffect } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n} from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { TRIPLE_CLICK } from '../utils/constants'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMRange,\n  DOMText,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_QQBROWSER,\n  IS_SAFARI,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n} from '../utils/environment'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from '../utils/weak-maps'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = props => <DefaultPlaceholder {...props} />,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style = {},\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n\n  const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n      hasMarkPlaceholder: false,\n    }),\n    []\n  )\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      if (\n        (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n        (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n        !state.isDraggingInternally\n      ) {\n        const root = ReactEditor.findDocumentOrShadowRoot(editor)\n        const { activeElement } = root\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const domSelection = root.getSelection()\n\n        if (activeElement === el) {\n          state.latestElement = activeElement\n          IS_FOCUSED.set(editor, true)\n        } else {\n          IS_FOCUSED.delete(editor)\n        }\n\n        if (!domSelection) {\n          return Transforms.deselect(editor)\n        }\n\n        const { anchorNode, focusNode } = domSelection\n\n        const anchorNodeSelectable =\n          hasEditableTarget(editor, anchorNode) ||\n          isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n        const focusNodeSelectable =\n          hasEditableTarget(editor, focusNode) ||\n          isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n        if (anchorNodeSelectable && focusNodeSelectable) {\n          const range = ReactEditor.toSlateRange(editor, domSelection, {\n            exactMatch: false,\n            suppressThrow: true,\n          })\n\n          if (range) {\n            if (\n              !ReactEditor.isComposing(editor) &&\n              !androidInputManager?.hasPendingChanges() &&\n              !androidInputManager?.isFlushing()\n            ) {\n              Transforms.select(editor, range)\n            } else {\n              androidInputManager?.handleUserSelect(range)\n            }\n          }\n        }\n\n        // Deselect the editor if the dom selection is not selectable in readonly mode\n        if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n          Transforms.deselect(editor)\n        }\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  const androidInputManager = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange,\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (\n      !domSelection ||\n      !ReactEditor.isFocused(editor) ||\n      androidInputManager?.hasPendingAction()\n    ) {\n      return\n    }\n\n    const setDomSelection = (forceChange?: boolean) => {\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(domSelection.anchorNode) &&\n        editorElement.contains(domSelection.focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (\n        hasDomSelection &&\n        hasDomSelectionInEditor &&\n        selection &&\n        !forceChange\n      ) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true,\n        })\n\n        if (slateRange && Range.equals(slateRange, selection)) {\n          if (!state.hasMarkPlaceholder) {\n            return\n          }\n\n          // Ensure selection is inside the mark placeholder\n          const { anchorNode } = domSelection\n          if (\n            anchorNode?.parentElement?.hasAttribute(\n              'data-slate-mark-placeholder'\n            )\n          ) {\n            return\n          }\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      state.isUpdatingSelection = true\n\n      const newDomRange: DOMRange | null =\n        selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        scrollSelectionIntoView(editor, newDomRange)\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      return newDomRange\n    }\n\n    const newDomRange = setDomSelection()\n    const ensureSelection = androidInputManager?.isFlushing() === 'action'\n\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        // COMPAT: In Firefox, it's not enough to create a range, you also need\n        // to focus the contenteditable element too. (2016/11/16)\n        if (newDomRange && IS_FIREFOX) {\n          const el = ReactEditor.toDOMNode(editor, editor)\n          el.focus()\n        }\n\n        state.isUpdatingSelection = false\n      })\n      return\n    }\n\n    let timeoutId: ReturnType<typeof setTimeout> | null = null\n    const animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        const ensureDomSelection = (forceChange?: boolean) => {\n          try {\n            const el = ReactEditor.toDOMNode(editor, editor)\n            el.focus()\n\n            setDomSelection(forceChange)\n          } catch (e) {\n            // Ignore, dom and state might be out of sync\n          }\n        }\n\n        // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n        ensureDomSelection()\n\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true)\n          state.isUpdatingSelection = false\n        })\n      }\n    })\n\n    return () => {\n      cancelAnimationFrame(animationFrameId)\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n      }\n    }\n  })\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      onUserInput()\n\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n        if (androidInputManager) {\n          return androidInputManager.handleDOMBeforeInput(event)\n        }\n\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n        onDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        const isCompositionChange =\n          type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n        // COMPAT: use composition change events as a hint to where we should insert\n        // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n        if (isCompositionChange && ReactEditor.isComposing(editor)) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of anchor nodes.\n          const { anchor } = selection\n\n          const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n          const anchorNode = node.parentElement?.closest('a')\n\n          const window = ReactEditor.getWindow(editor)\n\n          if (\n            native &&\n            anchorNode &&\n            ReactEditor.hasDOMNode(editor, anchorNode)\n          ) {\n            // Find the last text node inside the anchor.\n            const lastText = window?.document\n              .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n              .lastChild() as DOMText | null\n\n            if (lastText === node && lastText.textContent?.length === offset) {\n              native = false\n            }\n          }\n\n          // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n          // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n          if (\n            native &&\n            node.parentElement &&\n            window?.getComputedStyle(node.parentElement)?.whiteSpace === 'pre'\n          ) {\n            const block = Editor.above(editor, {\n              at: anchor.path,\n              match: n => Editor.isBlock(editor, n),\n            })\n\n            if (block && Node.string(block[0]).includes('\\t')) {\n              native = false\n            }\n          }\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              native = false\n\n              const selectionRef =\n                !isCompositionChange &&\n                editor.selection &&\n                Editor.rangeRef(editor, editor.selection)\n\n              Transforms.select(editor, range)\n\n              if (selectionRef) {\n                EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n              }\n            }\n          }\n        }\n\n        // Composition change types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (isCompositionChange) {\n          return\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n            Editor.insertSoftBreak(editor)\n            break\n\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false)\n                IS_COMPOSING.set(editor, false)\n              }\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n\n        // Restore the actual user section if nothing manually set it.\n        const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n\n        if (\n          toRestore &&\n          (!editor.selection || !Range.equals(editor.selection, toRestore))\n        ) {\n          Transforms.select(editor, toRestore)\n        }\n      }\n    },\n    [readOnly, propsOnDOMBeforeInput]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\n    }\n\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n      }\n    }\n  }, [onDOMBeforeInput])\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  const { marks } = editor\n  state.hasMarkPlaceholder = false\n\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    const { anchor } = editor.selection\n    const leaf = Node.leaf(editor, anchor.path)\n    const { text, ...rest } = leaf\n\n    // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n    if (!Text.equals(leaf, marks as Text, { loose: true })) {\n      state.hasMarkPlaceholder = true\n\n      const unset = Object.fromEntries(\n        Object.keys(rest).map(mark => [mark, null])\n      )\n\n      decorations.push({\n        [MARK_PLACEHOLDER_SYMBOL]: true,\n        ...unset,\n        ...marks,\n\n        anchor,\n        focus: anchor,\n      })\n    }\n  }\n\n  // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n  useEffect(() => {\n    setTimeout(() => {\n      const { selection } = editor\n      if (selection) {\n        const { anchor } = selection\n        const text = Node.leaf(editor, anchor.path)\n\n        // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n        if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n          return\n        }\n      }\n\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n    })\n  })\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n          <Component\n            role={readOnly ? undefined : 'textbox'}\n            aria-multiline={readOnly ? undefined : true}\n            {...attributes}\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n            // have to use hacks to make these replacement-based features work.\n            // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n            // mismatch warning app moves to browser. Pass-through consumer props when\n            // not CAN_USE_DOM (SSR) and default to falsy value\n            spellCheck={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.spellCheck\n                : false\n            }\n            autoCorrect={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCorrect\n                : 'false'\n            }\n            autoCapitalize={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCapitalize\n                : 'false'\n            }\n            data-slate-editor\n            data-slate-node=\"value\"\n            // explicitly set this\n            contentEditable={!readOnly}\n            // in some cases, a decoration needs access to the range / selection to decorate a text node,\n            // then you will select the whole text node when you select part the of text\n            // this magic zIndex=\"-1\" will fix it\n            zindex={-1}\n            suppressContentEditableWarning\n            ref={ref}\n            style={{\n              // Allow positioning relative to the editable element.\n              position: 'relative',\n              // Prevent the default outline styles.\n              outline: 'none',\n              // Preserve adjacent whitespace and new lines.\n              whiteSpace: 'pre-wrap',\n              // Allow words to break if they are too long.\n              wordWrap: 'break-word',\n              // Allow for passed-in styles to override anything.\n              ...style,\n            }}\n            onBeforeInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's leaky polyfill instead just for it. It\n                // only works for the `insertText` input type.\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT &&\n                  !readOnly &&\n                  !isEventHandled(event, attributes.onBeforeInput) &&\n                  hasEditableTarget(editor, event.target)\n                ) {\n                  event.preventDefault()\n                  if (!ReactEditor.isComposing(editor)) {\n                    const text = (event as any).data as string\n                    Editor.insertText(editor, text)\n                  }\n                }\n              },\n              [readOnly]\n            )}\n            onInput={useCallback((event: React.SyntheticEvent) => {\n              if (androidInputManager) {\n                androidInputManager.handleInput()\n                return\n              }\n\n              // Flush native operations, as native events will have propogated\n              // and we can correctly compare DOM text values in components\n              // to stop rendering, so that browser functions like autocorrect\n              // and spellcheck work as expected.\n              for (const op of deferredOperations.current) {\n                op()\n              }\n              deferredOperations.current = []\n            }, [])}\n            onBlur={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  readOnly ||\n                  state.isUpdatingSelection ||\n                  !hasEditableTarget(editor, event.target) ||\n                  isEventHandled(event, attributes.onBlur)\n                ) {\n                  return\n                }\n\n                // COMPAT: If the current `activeElement` is still the previous\n                // one, this is due to the window being blurred when the tab\n                // itself becomes unfocused, so we want to abort early to allow to\n                // editor to stay focused when the tab becomes focused again.\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                if (state.latestElement === root.activeElement) {\n                  return\n                }\n\n                const { relatedTarget } = event\n                const el = ReactEditor.toDOMNode(editor, editor)\n\n                // COMPAT: The event should be ignored if the focus is returning\n                // to the editor from an embedded editable element (eg. an <input>\n                // element inside a void node).\n                if (relatedTarget === el) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving from\n                // the editor to inside a void node's spacer element.\n                if (\n                  isDOMElement(relatedTarget) &&\n                  relatedTarget.hasAttribute('data-slate-spacer')\n                ) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving to a\n                // non- editable section of an element that isn't a void node (eg.\n                // a list item of the check list example).\n                if (\n                  relatedTarget != null &&\n                  isDOMNode(relatedTarget) &&\n                  ReactEditor.hasDOMNode(editor, relatedTarget)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                  if (Element.isElement(node) && !editor.isVoid(node)) {\n                    return\n                  }\n                }\n\n                // COMPAT: Safari doesn't always remove the selection even if the content-\n                // editable element no longer has focus. Refer to:\n                // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                if (IS_SAFARI) {\n                  const domSelection = root.getSelection()\n                  domSelection?.removeAllRanges()\n                }\n\n                IS_FOCUSED.delete(editor)\n              },\n              [readOnly, attributes.onBlur]\n            )}\n            onClick={useCallback(\n              (event: React.MouseEvent<HTMLDivElement>) => {\n                if (\n                  hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onClick) &&\n                  isDOMNode(event.target)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n\n                  // At this time, the Slate document may be arbitrarily different,\n                  // because onClick handlers can change the document before we get here.\n                  // Therefore we must check that this path actually exists,\n                  // and that it still refers to the same node.\n                  if (\n                    !Editor.hasPath(editor, path) ||\n                    Node.get(editor, path) !== node\n                  ) {\n                    return\n                  }\n\n                  if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                    let blockPath = path\n                    if (!Editor.isBlock(editor, node)) {\n                      const block = Editor.above(editor, {\n                        match: n => Editor.isBlock(editor, n),\n                        at: path,\n                      })\n\n                      blockPath = block?.[1] ?? path.slice(0, 1)\n                    }\n\n                    const range = Editor.range(editor, blockPath)\n                    Transforms.select(editor, range)\n                    return\n                  }\n\n                  if (readOnly) {\n                    return\n                  }\n\n                  const start = Editor.start(editor, path)\n                  const end = Editor.end(editor, path)\n                  const startVoid = Editor.void(editor, { at: start })\n                  const endVoid = Editor.void(editor, { at: end })\n\n                  if (\n                    startVoid &&\n                    endVoid &&\n                    Path.equals(startVoid[1], endVoid[1])\n                  ) {\n                    const range = Editor.range(editor, start)\n                    Transforms.select(editor, range)\n                  }\n                }\n              },\n              [readOnly, attributes.onClick]\n            )}\n            onCompositionEnd={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (hasEditableTarget(editor, event.target)) {\n                  if (ReactEditor.isComposing(editor)) {\n                    setIsComposing(false)\n                    IS_COMPOSING.set(editor, false)\n                  }\n\n                  androidInputManager?.handleCompositionEnd(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionEnd) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  // COMPAT: In Chrome, `beforeinput` events for compositions\n                  // aren't correct and never fire the \"insertFromComposition\"\n                  // type that we need. So instead, insert whenever a composition\n                  // ends since it will already have been committed to the DOM.\n                  if (\n                    !IS_SAFARI &&\n                    !IS_FIREFOX_LEGACY &&\n                    !IS_IOS &&\n                    !IS_QQBROWSER &&\n                    !IS_WECHATBROWSER &&\n                    !IS_UC_MOBILE &&\n                    event.data\n                  ) {\n                    const placeholderMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(\n                      editor\n                    )\n                    EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                    // Ensure we insert text with the marks the user was actually seeing\n                    if (placeholderMarks !== undefined) {\n                      EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                      editor.marks = placeholderMarks\n                    }\n\n                    Editor.insertText(editor, event.data)\n\n                    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                    EDITOR_TO_USER_MARKS.delete(editor)\n                    if (userMarks !== undefined) {\n                      editor.marks = userMarks\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionEnd]\n            )}\n            onCompositionUpdate={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (\n                  hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCompositionUpdate)\n                ) {\n                  if (!ReactEditor.isComposing(editor)) {\n                    setIsComposing(true)\n                    IS_COMPOSING.set(editor, true)\n                  }\n                }\n              },\n              [attributes.onCompositionUpdate]\n            )}\n            onCompositionStart={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (hasEditableTarget(editor, event.target)) {\n                  androidInputManager?.handleCompositionStart(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionStart) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  setIsComposing(true)\n\n                  const { selection } = editor\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                      return\n                    }\n                    const inline = Editor.above(editor, {\n                      match: n => Editor.isInline(editor, n),\n                      mode: 'highest',\n                    })\n                    if (inline) {\n                      const [, inlinePath] = inline\n                      if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n                        const point = Editor.after(editor, inlinePath)!\n                        Transforms.setSelection(editor, {\n                          anchor: point,\n                          focus: point,\n                        })\n                      }\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionStart]\n            )}\n            onCopy={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCopy)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'copy'\n                  )\n                }\n              },\n              [attributes.onCopy]\n            )}\n            onCut={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCut)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'cut'\n                  )\n                  const { selection } = editor\n\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                    } else {\n                      const node = Node.parent(editor, selection.anchor.path)\n                      if (Editor.isVoid(editor, node)) {\n                        Transforms.delete(editor)\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, attributes.onCut]\n            )}\n            onDragOver={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragOver)\n                ) {\n                  // Only when the target is void, call `preventDefault` to signal\n                  // that drops are allowed. Editable content is droppable by\n                  // default, and calling `preventDefault` hides the cursor.\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n\n                  if (Editor.isVoid(editor, node)) {\n                    event.preventDefault()\n                  }\n                }\n              },\n              [attributes.onDragOver]\n            )}\n            onDragStart={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragStart)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n                  const voidMatch =\n                    Editor.isVoid(editor, node) ||\n                    Editor.void(editor, { at: path, voids: true })\n\n                  // If starting a drag on a void node, make sure it is selected\n                  // so that it shows up in the selection's fragment.\n                  if (voidMatch) {\n                    const range = Editor.range(editor, path)\n                    Transforms.select(editor, range)\n                  }\n\n                  state.isDraggingInternally = true\n\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.dataTransfer,\n                    'drag'\n                  )\n                }\n              },\n              [readOnly, attributes.onDragStart]\n            )}\n            onDrop={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDrop)\n                ) {\n                  event.preventDefault()\n\n                  // Keep a reference to the dragged range before updating selection\n                  const draggedRange = editor.selection\n\n                  // Find the range where the drop happened\n                  const range = ReactEditor.findEventRange(editor, event)\n                  const data = event.dataTransfer\n\n                  Transforms.select(editor, range)\n\n                  if (state.isDraggingInternally) {\n                    if (\n                      draggedRange &&\n                      !Range.equals(draggedRange, range) &&\n                      !Editor.void(editor, { at: range, voids: true })\n                    ) {\n                      Transforms.delete(editor, {\n                        at: draggedRange,\n                      })\n                    }\n                  }\n\n                  ReactEditor.insertData(editor, data)\n\n                  // When dragging from another source into the editor, it's possible\n                  // that the current editor does not have focus.\n                  if (!ReactEditor.isFocused(editor)) {\n                    ReactEditor.focus(editor)\n                  }\n                }\n\n                state.isDraggingInternally = false\n              },\n              [readOnly, attributes.onDrop]\n            )}\n            onDragEnd={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  state.isDraggingInternally &&\n                  attributes.onDragEnd &&\n                  hasTarget(editor, event.target)\n                ) {\n                  attributes.onDragEnd(event)\n                }\n\n                // When dropping on a different droppable element than the current editor,\n                // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n                // Note: `onDragEnd` is only called when `onDrop` is not called\n                state.isDraggingInternally = false\n              },\n              [readOnly, attributes.onDragEnd]\n            )}\n            onFocus={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  !state.isUpdatingSelection &&\n                  hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onFocus)\n                ) {\n                  const el = ReactEditor.toDOMNode(editor, editor)\n                  const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                  state.latestElement = root.activeElement\n\n                  // COMPAT: If the editor has nested editable elements, the focus\n                  // can go to them. In Firefox, this must be prevented because it\n                  // results in issues with keyboard navigation. (2017/03/30)\n                  if (IS_FIREFOX && event.target !== el) {\n                    el.focus()\n                    return\n                  }\n\n                  IS_FOCUSED.set(editor, true)\n                }\n              },\n              [readOnly, attributes.onFocus]\n            )}\n            onKeyDown={useCallback(\n              (event: React.KeyboardEvent<HTMLDivElement>) => {\n                if (!readOnly && hasEditableTarget(editor, event.target)) {\n                  androidInputManager?.handleKeyDown(event)\n\n                  const { nativeEvent } = event\n\n                  // COMPAT: The composition end event isn't fired reliably in all browsers,\n                  // so we sometimes might end up stuck in a composition state even though we\n                  // aren't composing any more.\n                  if (\n                    ReactEditor.isComposing(editor) &&\n                    nativeEvent.isComposing === false\n                  ) {\n                    IS_COMPOSING.set(editor, false)\n                    setIsComposing(false)\n                  }\n\n                  if (\n                    isEventHandled(event, attributes.onKeyDown) ||\n                    ReactEditor.isComposing(editor)\n                  ) {\n                    return\n                  }\n\n                  const { selection } = editor\n                  const element =\n                    editor.children[\n                      selection !== null ? selection.focus.path[0] : 0\n                    ]\n                  const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                  // COMPAT: Since we prevent the default behavior on\n                  // `beforeinput` events, the browser doesn't think there's ever\n                  // any history stack to undo or redo, so we have to manage these\n                  // hotkeys ourselves. (2019/11/06)\n                  if (Hotkeys.isRedo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.redo === 'function') {\n                      maybeHistoryEditor.redo()\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isUndo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.undo === 'function') {\n                      maybeHistoryEditor.undo()\n                    }\n\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't handle the selection updates\n                  // properly. In Chrome, the selection isn't properly extended.\n                  // And in Firefox, the selection isn't properly collapsed.\n                  // (2017/10/17)\n                  if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', reverse: true })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line' })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, {\n                      unit: 'line',\n                      edge: 'focus',\n                      reverse: true,\n                    })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                    return\n                  }\n\n                  // COMPAT: If a void node is selected, or a zero-width text node\n                  // adjacent to an inline is selected, we need to handle these\n                  // hotkeys manually because browsers won't be able to skip over\n                  // the void node with the zero-width space not being an empty\n                  // string.\n                  if (Hotkeys.isMoveBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: !isRTL })\n                    } else {\n                      Transforms.collapse(editor, { edge: 'start' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: isRTL })\n                    } else {\n                      Transforms.collapse(editor, { edge: 'end' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to guessing at the input intention for hotkeys.\n                  // COMPAT: In iOS, some of these hotkeys are handled in the\n                  if (!HAS_BEFORE_INPUT_SUPPORT) {\n                    // We don't have a core behavior for these, but they change the\n                    // DOM if we don't prevent them, so we have to.\n                    if (\n                      Hotkeys.isBold(nativeEvent) ||\n                      Hotkeys.isItalic(nativeEvent) ||\n                      Hotkeys.isTransposeCharacter(nativeEvent)\n                    ) {\n                      event.preventDefault()\n                      return\n                    }\n\n                    if (Hotkeys.isSoftBreak(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertSoftBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isSplitBlock(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n                  } else {\n                    if (IS_CHROME || IS_SAFARI) {\n                      // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                      // an event when deleting backwards in a selected void inline node\n                      if (\n                        selection &&\n                        (Hotkeys.isDeleteBackward(nativeEvent) ||\n                          Hotkeys.isDeleteForward(nativeEvent)) &&\n                        Range.isCollapsed(selection)\n                      ) {\n                        const currentNode = Node.parent(\n                          editor,\n                          selection.anchor.path\n                        )\n\n                        if (\n                          Element.isElement(currentNode) &&\n                          Editor.isVoid(editor, currentNode) &&\n                          (Editor.isInline(editor, currentNode) ||\n                            Editor.isBlock(editor, currentNode))\n                        ) {\n                          event.preventDefault()\n                          Editor.deleteBackward(editor, { unit: 'block' })\n\n                          return\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, attributes.onKeyDown]\n            )}\n            onPaste={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onPaste)\n                ) {\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to React's `onPaste` here instead.\n                  // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                  // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                  if (\n                    !HAS_BEFORE_INPUT_SUPPORT ||\n                    isPlainTextOnlyPaste(event.nativeEvent)\n                  ) {\n                    event.preventDefault()\n                    ReactEditor.insertData(editor, event.clipboardData)\n                  }\n                }\n              },\n              [readOnly, attributes.onPaste]\n            )}\n          >\n            <Children\n              decorations={decorations}\n              node={editor}\n              renderElement={renderElement}\n              renderPlaceholder={renderPlaceholder}\n              renderLeaf={renderLeaf}\n              selection={editor.selection}\n            />\n          </Component>\n        </RestoreDOM>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefObject<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    !editor.selection ||\n    (editor.selection && Range.isCollapsed(editor.selection))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if the target is in the editor.\n */\n\nexport const hasTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n}\n\n/**\n * Check if the target is editable and in the editor.\n */\n\nexport const hasEditableTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return (\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true })\n  )\n}\n\n/**\n * Check if the target is inside void and in an non-readonly editor.\n */\n\nexport const isTargetInsideNonReadonlyVoid = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): boolean => {\n  if (IS_READ_ONLY.get(editor)) return false\n\n  const slateNode =\n    hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target)\n  return Editor.isVoid(editor, slateNode)\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>((null as any) as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          latestSubscriptionCallbackError.current = err\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function getSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback((editor: Editor) => {\n    slateRef.editor = editor\n    eventListeners.forEach((listener: EditorChangeHandler) => listener(editor))\n  }, [])\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n","import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { Editor, Node, Descendant, Scrubber } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { SlateContext, SlateContextValue } from '../hooks/use-slate'\nimport {\n  getSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\nimport { IS_REACT_VERSION_17_OR_ABOVE } from '../utils/environment'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n  const unmountRef = useRef(false)\n\n  const [context, setContext] = React.useState<SlateContextValue>(() => {\n    if (!Node.isNodeList(value)) {\n      throw new Error(\n        `[Slate] value is invalid! Expected a list of elements` +\n          `but got: ${Scrubber.stringify(value)}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! you passed:` +\n          `${Scrubber.stringify(editor)}`\n      )\n    }\n    editor.children = value\n    Object.assign(editor, rest)\n    return { v: 0, editor }\n  })\n\n  const {\n    selectorContext,\n    onChange: handleSelectorChange,\n  } = getSelectorContext(editor)\n\n  const onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children)\n    }\n\n    setContext(prevContext => ({\n      v: prevContext.v + 1,\n      editor,\n    }))\n    handleSelectorChange(editor)\n  }, [onChange])\n\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n      unmountRef.current = true\n    }\n  }, [])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (IS_REACT_VERSION_17_OR_ABOVE) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={context.editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n","import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n","/**\n * Utilities for single-line deletion\n */\n\nimport { Range, Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n","import ReactDOM from 'react-dom'\nimport {\n  BaseEditor,\n  Editor,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Transforms,\n} from 'slate'\nimport {\n  TextDiff,\n  transformPendingPoint,\n  transformPendingRange,\n  transformTextDiff,\n} from '../utils/diff-text'\nimport {\n  getPlainText,\n  getSlateFragmentAttribute,\n  isDOMText,\n} from '../utils/dom'\nimport { Key } from '../utils/key'\nimport { findCurrentLineRange } from '../utils/lines'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  NODE_TO_KEY,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n} from '../utils/weak-maps'\nimport { ReactEditor } from './react-editor'\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends BaseEditor>(editor: T): T & ReactEditor => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward, addMark, removeMark } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.addMark = (key, value) => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(e)?.()\n\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    addMark(key, value)\n  }\n\n  e.removeMark = key => {\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    removeMark(key)\n  }\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      const parentBlockEntry = Editor.above(e, {\n        match: n => Editor.isBlock(e, n),\n        at: e.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          e,\n          parentBlockPath,\n          e.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e)\n    if (pendingDiffs?.length) {\n      const transformed = pendingDiffs\n        .map(textDiff => transformTextDiff(textDiff, op))\n        .filter(Boolean) as TextDiff[]\n\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed)\n    }\n\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e)\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(\n        e,\n        transformPendingRange(e, pendingSelection, op)\n      )\n    }\n\n    const pendingAction = EDITOR_TO_PENDING_ACTION.get(e)\n    if (pendingAction?.at) {\n      const at = Point.isPoint(pendingAction?.at)\n        ? transformPendingPoint(e, pendingAction.at, op)\n        : transformPendingRange(e, pendingAction.at, op)\n\n      EDITOR_TO_PENDING_ACTION.set(e, at ? { ...pendingAction, at } : null)\n    }\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(e)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(e)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData('application/x-slate-fragment', encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData('application/x-slate-fragment') ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange()\n    })\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = ReactEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}