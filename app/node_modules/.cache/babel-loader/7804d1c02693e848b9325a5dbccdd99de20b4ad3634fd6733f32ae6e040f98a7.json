{"ast":null,"code":"var _jsxFileName = \"/Users/anurodhyadav/resumebuilder/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { createEditor } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { Editor, Transforms } from \"slate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValue = [{\n  type: \"paragraph\",\n  children: [{\n    text: \"A line of text in a paragraph.\"\n  }]\n}];\nconst App = () => {\n  _s();\n  const [editor] = useState(() => withReact(createEditor()));\n\n  // Define a rendering function based on the element passed to `props`. We use\n  // `useCallback` here to memoize the function for subsequent renders.\n  const renderElement = useCallback(props => {\n    switch (props.element.type) {\n      case \"code\":\n        return /*#__PURE__*/_jsxDEV(CodeElement, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(DefaultElement, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this);\n    }\n  }, []);\n  const renderLeaf = useCallback(props => {\n    return /*#__PURE__*/_jsxDEV(Leaf, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Slate, {\n    editor: editor,\n    value: initialValue,\n    children: /*#__PURE__*/_jsxDEV(Editable, {\n      renderElement: renderElement\n      // Pass in the `renderLeaf` function.\n      ,\n      renderLeaf: renderLeaf,\n      onKeyDown: event => {\n        if (!event.ctrlKey) {\n          return;\n        }\n        switch (event.key) {\n          case \"`\":\n            {\n              event.preventDefault();\n              const [match] = Editor.nodes(editor, {\n                match: n => n.type === \"code\"\n              });\n              Transforms.setNodes(editor, {\n                type: match ? null : \"code\"\n              }, {\n                match: n => Editor.isBlock(editor, n)\n              });\n              break;\n            }\n          case \"b\":\n            {\n              event.preventDefault();\n              console.log(\"hello\");\n              Transforms.setNodes(editor, {\n                bold: true\n              }, {\n                match: n => Text.isText(n),\n                split: true\n              });\n              break;\n            }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0xeOHJPiQArsibLjPR1m26zG2Vc=\");\n_c = App;\nconst CodeElement = props => {\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    ...props.attributes,\n    children: /*#__PURE__*/_jsxDEV(\"code\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CodeElement;\nconst DefaultElement = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    ...props.attributes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 10\n  }, this);\n};\n_c3 = DefaultElement;\nconst Leaf = props => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ...props.attributes,\n    style: {\n      fontWeight: props.leaf.bold ? \"bold\" : \"normal\"\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Leaf;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"CodeElement\");\n$RefreshReg$(_c3, \"DefaultElement\");\n$RefreshReg$(_c4, \"Leaf\");","map":{"version":3,"names":["React","useState","useCallback","createEditor","Slate","Editable","withReact","Editor","Transforms","initialValue","type","children","text","App","editor","renderElement","props","element","renderLeaf","event","ctrlKey","key","preventDefault","match","nodes","n","setNodes","isBlock","console","log","bold","Text","isText","split","CodeElement","attributes","DefaultElement","Leaf","fontWeight","leaf"],"sources":["/Users/anurodhyadav/resumebuilder/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nimport { createEditor } from \"slate\";\n\nimport { Slate, Editable, withReact } from \"slate-react\";\n\nimport { Editor, Transforms } from \"slate\";\n\nconst initialValue = [\n  {\n    type: \"paragraph\",\n    children: [{ text: \"A line of text in a paragraph.\" }],\n  },\n];\n\nconst App = () => {\n  const [editor] = useState(() => withReact(createEditor()));\n\n  // Define a rendering function based on the element passed to `props`. We use\n  // `useCallback` here to memoize the function for subsequent renders.\n  const renderElement = useCallback((props) => {\n    switch (props.element.type) {\n      case \"code\":\n        return <CodeElement {...props} />;\n      default:\n        return <DefaultElement {...props} />;\n    }\n  }, []);\n\n  const renderLeaf = useCallback((props) => {\n    return <Leaf {...props} />;\n  }, []);\n\n  return (\n    <Slate editor={editor} value={initialValue}>\n      <Editable\n        renderElement={renderElement}\n        // Pass in the `renderLeaf` function.\n        renderLeaf={renderLeaf}\n        onKeyDown={(event) => {\n          if (!event.ctrlKey) {\n            return;\n          }\n\n          switch (event.key) {\n            case \"`\": {\n              event.preventDefault();\n              const [match] = Editor.nodes(editor, {\n                match: (n) => n.type === \"code\",\n              });\n              Transforms.setNodes(\n                editor,\n                { type: match ? null : \"code\" },\n                { match: (n) => Editor.isBlock(editor, n) }\n              );\n              break;\n            }\n\n            case \"b\": {\n              event.preventDefault();\n              console.log(\"hello\");\n              Transforms.setNodes(\n                editor,\n                { bold: true },\n                { match: (n) => Text.isText(n), split: true }\n              );\n              break;\n            }\n          }\n        }}\n      />\n    </Slate>\n  );\n};\n\nconst CodeElement = (props) => {\n  return (\n    <pre {...props.attributes}>\n      <code>{props.children}</code>\n    </pre>\n  );\n};\n\nconst DefaultElement = (props) => {\n  return <p {...props.attributes}>{props.children}</p>;\n};\n\nconst Leaf = (props) => {\n  return (\n    <span\n      {...props.attributes}\n      style={{ fontWeight: props.leaf.bold ? \"bold\" : \"normal\" }}\n    >\n      {props.children}\n    </span>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}